{
    "version": "https://jsonfeed.org/version/1",
    "title": "Nana7ha's Café Stella",
    "subtitle": "",
    "icon": "http://cwlrin.github.io/assets/favicon.ico",
    "description": "技术与美日新月异",
    "home_page_url": "http://cwlrin.github.io",
    "items": [
        {
            "id": "http://cwlrin.github.io/c-cpp/modern-cpp/C++%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1/",
            "url": "http://cwlrin.github.io/c-cpp/modern-cpp/C++%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1/",
            "title": "C++ 面向对象设计",
            "date_published": "2024-10-27T11:37:53.000Z",
            "content_html": "<h2 id=\"面向对象的基本概念\"><a class=\"anchor\" href=\"#面向对象的基本概念\">#</a> 面向对象的基本概念</h2>\n<p>面向对象编程（Object-Oriented Programming，OOP）是一种编程范式，它基于 “对象” 的概念，将数据和操作数据的方法封装在一起。面向对象的四大基本特征是抽象、封装、继承和多态，这些特征构成了 OOP 的核心。</p>\n<ol>\n<li><strong>抽象</strong>（Abstraction）： 抽象是指隐藏对象的内部细节，只暴露必要的接口。这允许我们忽略那些不影响我们工作的细节，专注于对象的外部行为。在编程中，抽象可以通过接口或抽象类来实现。</li>\n<li><strong>封装</strong>（Encapsulation）： 封装是将数据（属性）和操作这些数据的方法（行为）捆绑在一起，并隐藏内部实现细节。这有助于减少系统部分间的依赖，提高代码的可维护性和可重用性。在类中，通常通过访问修饰符（如 private、public）来实现封装。</li>\n<li><strong>继承</strong>（Inheritance）： 继承是一种创建新类的方式，新类继承现有类的属性和方法，并能添加或修改某些属性和方法。继承支持代码重用，并能建立类之间的层次结构。</li>\n<li><strong>多态</strong>（Polymorphism）： 多态是指允许不同类的对象对同一消息做出响应的能力，即同一个接口可以被不同的实例以不同的方式实现。这使得代码更加灵活，可以写出更通用的代码。</li>\n</ol>\n<p>在进行面向对象编程之前，通常需要经过以下阶段：</p>\n<ul>\n<li><strong>面向对象分析</strong>（Object-Oriented Analysis，OOA）： 在这个阶段，分析者会研究业务需求，识别系统中的对象以及这些对象之间的关系。目的是理解问题域，并定义系统的结构和行为。</li>\n<li><strong>面向对象设计</strong>（Object-Oriented Design，OOD）： 设计阶段是在分析阶段之后进行的，它涉及将分析阶段得到的需求转化为一个详细的设计。这包括确定类的结构、职责、接口以及类之间的交互方式。</li>\n<li><strong>面向对象编程</strong>（Object-Oriented Programming，OOP）： 这是实际编码的阶段，开发者根据分析和设计阶段的成果，使用 OOP 语言（如 Java、C++、Python 等）实现具体的类和方法。</li>\n</ul>\n<h2 id=\"为什么要面向对象设计ood\"><a class=\"anchor\" href=\"#为什么要面向对象设计ood\">#</a> 为什么要面向对象设计（OOD）</h2>\n<p>面向对象设计（OOD）是一种以对象为核心的软件设计方法论，它专注于将数据和行为封装成对象，并通过类和继承等概念来建立对象之间的关系。OOD 的目的是创建一种易于管理、维护、扩展和复用的软件架构。由于软件需求总是不断变化，OOD 提供了一种灵活的设计方法来适应这些变化，它能够将变化的影响局限在特定的对象或类中，从而避免了对整个系统架构的大规模改动。</p>\n<p>OOD 通过提供清晰的模块化结构，使得开发过程更加高效，也使得团队成员能够更容易地理解和协作。每个对象负责自己的数据和行为，这样的封装减少了系统各部分之间的依赖，提高了代码的复用性。此外，OOD 支持通过继承和多态来创建可扩展的系统，使得添加新功能时，可以简单地通过添加新的类或修改现有类来实现，而不必重写大量代码。</p>\n<p>良好的 OOD 能够降低软件缺陷率，因为它允许每个模块独立测试和调试。它还提供了一种共同的语言和概念框架，促进了团队成员之间的沟通。OOD 是一种能够以最小的代价满足变化需求的设计方法，它使得软件系统可以轻松扩展，同时保持了代码的清晰结构和高质量。</p>\n<p>统一建模语言（UML）是一种用于软件工程的图形化语言，它为面向对象的设计和开发提供了一套标准的符号和图示。UML 由对象管理组织（OMG）在 1997 年推出，旨在帮助软件开发者以一种统一和标准化的方式进行系统建模。</p>\n<h2 id=\"uml-语言\"><a class=\"anchor\" href=\"#uml-语言\">#</a> UML 语言</h2>\n<p>Unifed Modeling Language， 又称统一建模语言或标准建模语言，是始于 1997 年一个 OMG (Object Management Group) 标准，它是一个模型化和软件系统开发的图形化语言。</p>\n<p>UML 的主要目标是促进团队协作，通过提供一种共同的语言来描述、构建和文档化软件系统。它包括了一系列的图示，每种图示都用于展示系统的不同方面，以下是 UML 中常见的 10 种图：</p>\n<ol>\n<li><strong>类图</strong>（Class Diagram）： 展示了系统中的类、接口、它们的属性、操作以及它们之间的关系。</li>\n<li><strong>对象图</strong>（Object Diagram）： 是类图的实例，展示了特定时刻系统中对象的实例以及它们之间的关系。</li>\n<li><strong>用例图</strong>（Use Case Diagram）： 描述系统的功能和用户如何与这些功能交互。</li>\n<li><strong>组件图</strong>（Component Diagram）： 描述系统的物理结构，包括软件组件和它们之间的关系。</li>\n<li><strong>部署图</strong>（Deployment Diagram）： 描述系统的硬件结构以及软件组件如何在硬件上分布。</li>\n<li><strong>组合结构图</strong>（Composite Structure Diagram）：用来显示组合结构或部分系统的内部构造。</li>\n<li><strong>序列图</strong>（Sequence Diagram）： 显示对象之间如何交互以及它们交互的顺序。</li>\n<li><strong>协作图</strong>（Collaboration Diagram）： 与序列图类似，但更侧重于对象之间的关系。</li>\n<li><strong>状态图</strong>（State Diagram）： 描述对象的状态以及状态之间的转换。</li>\n<li><strong>活动图</strong>（Activity Diagram）： 展示了业务流程或系统内部工作流程。</li>\n</ol>\n<p>UML 为软件开发的每个阶段提供了支持，从需求收集、系统架构设计、详细设计到系统实施。它不仅帮助开发者理解系统，还帮助项目管理者、系统分析师和测试人员更好地理解系统的功能和结构。通过使用 UML，团队成员可以更有效地沟通，确保对系统有共同的理解，从而提高开发效率和质量。此外，UML 图也可以作为项目文档的一部分，为未来的维护和升级提供参考。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSdkoyTUgwQ0tWT3BMamZPRTBxX1N3Qm1hYi1uSDkyeU1Ndjh3YlQ4Mnd3ZFE_ZT05bUgzbFM.jpg\" alt=\"\" /></p>\n<h2 id=\"类与类之间的关系\"><a class=\"anchor\" href=\"#类与类之间的关系\">#</a> 类与类之间的关系</h2>\n<h3 id=\"继承泛化\"><a class=\"anchor\" href=\"#继承泛化\">#</a> 继承（泛化）</h3>\n<p>继承关系（Inheritance）和泛化关系（Generalization）是类之间一种非常重要的连接方式。这种关系描述了基类（父类或超类）和派生类（子类或子类型）之间的 A is B 关系。这意味着派生类不仅继承了基类的属性和方法，而且在语义上是基类的一种特殊类型。</p>\n<p>如果有一个基类名为 “员工”，而 “经理”、“软件开发工程师” 和 “销售” 都是 “员工” 的特定类型，那么这些派生类都 “是” 一个 “员工”。这种关系可以用 UML 类图来表示，其中派生类会用一个空心的三角形箭头指向基类，表明派生类是从基类泛化或继承而来。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Employee <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t-_name <span class=\"token operator\">:</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t-_salary<span class=\"token operator\">:</span> float</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+Employee<span class=\"token text string\">(name: cost string &amp;, salart: float)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tnote for Employee <span class=\"token string\">\"继承（泛化）可以使用派生类指向基类的空心三角箭头\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tEmployee <span class=\"token arrow operator\">&lt;|--</span> Manager</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tEmployee <span class=\"token arrow operator\">&lt;|--</span> SoftEngineer</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tEmployee <span class=\"token arrow operator\">&lt;|--</span> Sale</pre></td></tr></table></figure><p>这里的箭头指向基类，表明派生类继承了基类的属性和方法。</p>\n<p><strong>继承与泛化的区别</strong>：<br />\n继承是一种自底向上的思考方式。我们先定义一个基类，然后根据需要从这个基类派生出新的子类。子类继承了基类的特性，并可以添加自己独有的特性或覆盖基类的行为。继承支持代码复用，并允许运行时多态。</p>\n<p>泛化是一种自顶向下的思考方式。我们先识别出不同事物的共同点，然后定义一个抽象的基类，再从这个基类派生出具体的子类。泛化更多地关注概念上的分类，而不是具体的实现细节。</p>\n<h3 id=\"关联\"><a class=\"anchor\" href=\"#关联\">#</a> 关联</h3>\n<p>关联关系是面向对象编程中表达类与类之间关系的一种方式，它描述了两个类在概念上或逻辑上的联系。这种关系体现了对象间的交互和通信，是面向对象设计中的基本组成部分。</p>\n<p>关联关系在语义上体现为 “A has B” 的关系，意味着一个对象包含或拥有另一个对象。这种关系是相对稳定的，通常反映了现实世界中的某种固定联系。</p>\n<p>关联关系可以是双向的也可以是单向的，但无论哪种形式，关联关系中的两个类互不负责对方的生命周期管理。</p>\n<p><strong>双向关联关系</strong> 意味着两个类互相知道对方的存在，它们之间可以互相访问。例如，在一个电商系统中，客户与订单之间通常存在双向关联关系，因为客户可以查看自己的订单，同时订单也可以追溯到下订单的客户。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">direction</span> LR</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Customer <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t-_orders<span class=\"token operator\">:</span> vector ~Order *~</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">class</span> Order <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t-_cus<span class=\"token operator\">:</span> Customer &amp;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tnote for Customer <span class=\"token string\">\"彼此并不负责对方的生命周期\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  note for Order \"一般使用指针或者引用，</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  使用直线将两个类联系起来\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tCustomer <span class=\"token string\">\"1\"</span> <span class=\"token arrow operator\">--</span> <span class=\"token string\">\"0..n\"</span> Order</pre></td></tr></table></figure><p><strong>单向关联关系</strong> 则表示一个类知道另一个类的存在，但另一个类不必然知道这个类的存在。例如，在多线程编程中，条件变量（Condition）可能需要知道互斥锁（MutexLock）的存在，以便在等待条件满足时锁定和解锁互斥锁，但互斥锁本身可能并不知道条件变量的存在。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">direction</span> LR</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Condition <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t-_mutx<span class=\"token operator\">:</span> MutexLock &amp;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tCondition <span class=\"token arrow operator\">--></span> MutexLock</pre></td></tr></table></figure><p>在 UML 类图中，关联关系使用以下方式表示：</p>\n<ul>\n<li>双向关联关系通常用一条普通的实线表示，如果需要标识关系，可以给这条线加上标签。</li>\n<li>单向关联关系用一条带有箭头的实线表示，箭头指向被关联的对象。</li>\n</ul>\n<p>在代码层面，关联关系通常通过指针或引用来实现。在一个类中，可以通过声明另一个类的指针或引用成员变量来表达这种关系。这种实现方式使得一个对象可以访问另一个对象的属性和方法，从而实现对象间的交互。</p>\n<h3 id=\"聚合\"><a class=\"anchor\" href=\"#聚合\">#</a> 聚合</h3>\n<p>聚合关系是关联关系的一种，它表达了类之间的整体与部分的关系，这种关系比一般关联关系更强，但比组合关系弱。</p>\n<p>在聚合关系中，整体对象可以没有部分对象而独立存在，部分对象也可以被看作是整体对象的一部分。重要的是，整体对象不负责部分对象的生命周期管理，也就是说，部分对象可以独立于整体对象被创建和销毁。</p>\n<p>聚合关系在语义上表现为 “A has B” 的关系，意味着 A 对象包含 B 对象作为其一部分。这种关系在设计时需要仔细考虑，因为它涉及到对象的组织和生命周期管理。</p>\n<p>在 UML 类图中，聚合关系用一条带空心菱形的实线表示，菱形指向整体类。如果需要标识关系，可以给这条线加上标签。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Computer <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t-_board<span class=\"token operator\">:</span> MainBoard &amp;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t-_cpu<span class=\"token operator\">:</span> CPU &amp;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t-_memory<span class=\"token operator\">:</span> Memory &amp;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tnote for Computer \"整体不负责部分销毁，</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t可以使用引用或者指针，</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t从部分发出一个带空心的棱形箭头\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tComputer <span class=\"token arrow operator\">o--</span>  MainBoard</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tComputer <span class=\"token arrow operator\">o--</span>  CPU</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tComputer <span class=\"token arrow operator\">o--</span>  Memory</pre></td></tr></table></figure><p>在代码中，聚合关系通常通过包含指向部分对象的引用或指针的数据成员来实现。</p>\n<h3 id=\"组合\"><a class=\"anchor\" href=\"#组合\">#</a> 组合</h3>\n<p>组合关系是面向对象设计中一种非常强的关联关系，它表达了类之间的整体与部分的关系，这种关系比聚合更强。在组合关系中，整体对象的生命周期控制着部分对象的生命周期。也就是说，当整体对象被销毁时，其拥有的部分对象也会被自动销毁。这种关系体现了整体与部分之间的紧密联系，部分对象不能独立于整体对象存在。</p>\n<p>在语义上，组合关系表现为 “A contains B” 或 “A is composed of B”，意味着 A 对象由 B 对象组成，B 对象是 A 对象不可分割的一部分。</p>\n<p>在 UML 类图中，组合关系用一条带实心菱形的实线表示，菱形指向整体类。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Company <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t-_sale<span class=\"token operator\">:</span> SaleDepartment</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t-_develop<span class=\"token operator\">:</span> DevelopDepartment</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t-_hr<span class=\"token operator\">:</span> HRDepartment</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tnote for Company \"整体要负责部分的消毁；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t使用该类型的对象作为数据成员；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t使用实心菱形箭头\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCompany <span class=\"token arrow operator\">*--</span> SaleDepartment</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tCompany <span class=\"token arrow operator\">*--</span> DevelopDepartment</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCompany <span class=\"token arrow operator\">*--</span> HRDepartment</pre></td></tr></table></figure><p>在代码中，组合关系通常通过将部分对象作为整体类的一个数据成员来实现，这个数据成员可以是一个对象而不是指针或引用。</p>\n<p>组合关系的正确使用可以帮助我们设计出更合理、更符合现实世界情况的软件系统。它强调了整体与部分之间的强依赖关系，并且简化了资源管理，因为整体对象会自动管理其组成部分的生命周期。</p>\n<h3 id=\"依赖\"><a class=\"anchor\" href=\"#依赖\">#</a> 依赖</h3>\n<p>依赖关系（Dependency）是类之间最弱的一种关系，它描述了一种使用关系，其中一个类的变化可能会影响到另一个类。这种关系是临时的、不稳定的，并且通常不会导致类之间有长期的联系。依赖关系通常发生在方法级别，而不是类级别，它反映了类之间的交互或者一个类对另一个类的依赖。</p>\n<p>在语义上，依赖关系表现为 “A uses B” 的关系，意味着类 A 在某种程度上使用了类 B。这种使用可以是以下几种形式：</p>\n<ol>\n<li>类 B 的对象作为类 A 的一个成员函数的参数。</li>\n<li>类 B 的对象作为类 A 的成员函数内部的局部变量。</li>\n<li>类 A 的成员函数返回一个类 B 的对象或引用。</li>\n<li>类 A 的成员函数调用了类 B 的静态方法。</li>\n</ol>\n<p>在 UML 类图中，依赖关系用一条带有箭头的虚线表示，箭头从使用类（A）指向被依赖的类（B）。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">direction</span> LR</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Master <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+feed<span class=\"token text string\">(pet: Pet &amp;)</span> void</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tnote for Master \"A 使用 B，</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t整体也不会负责部分的销毁；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t使用虚线箭头\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tMaster <span class=\"token arrow operator\">..></span> Pet</pre></td></tr></table></figure><p>在代码中，依赖关系可能表现为以下几种情况：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Master</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span>Pet pet<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pet</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>在这个例子中，类 A 依赖于类 B，因为类 A 的成员函数  <code>function</code>  使用了类 B 的对象。</p>\n<p>依赖关系是一种非常常见的关系，它允许类之间进行灵活的交互，而不需要建立长期的联系。这种关系的使用可以提高系统的灵活性和可维护性，但也需要注意不要滥用，以免导致系统过于松散和难以理解。</p>\n<h3 id=\"五种关系的总结\"><a class=\"anchor\" href=\"#五种关系的总结\">#</a> 五种关系的总结</h3>\n<ol>\n<li><strong>依赖关系</strong>（Dependency）：\n<ul>\n<li>耦合度最低，表示一个类在其方法中使用了另一个类，但并不持有另一个类的引用或实例。</li>\n<li>语义上是 “A uses B”。</li>\n<li>在 UML 中用带箭头的虚线表示，箭头从使用类指向被依赖的类。</li>\n</ul>\n</li>\n<li><strong>关联关系</strong>（Association）：\n<ul>\n<li>耦合度高于依赖，表示两个类之间有较强的关系，一个类的对象可能持有另一个类的对象的引用或实例。</li>\n<li>语义上是 “A has B”。</li>\n<li>在 UML 中用实线表示，如果有方向性，则使用带箭头的实线。</li>\n</ul>\n</li>\n<li><strong>聚合关系</strong>（Aggregation）：\n<ul>\n<li>耦合度高于关联，表示整体与部分的关系，但整体不负责部分的生命周期。</li>\n<li>语义上是 “A has B”，且部分可以离开整体独立存在。</li>\n<li>在 UML 中用带空心菱形的实线表示，菱形指向整体。</li>\n</ul>\n</li>\n<li><strong>组合关系</strong>（Composition）：\n<ul>\n<li>耦合度高于聚合，也是表示整体与部分的关系，但整体负责部分的生命周期。</li>\n<li>语义上是 “A has B”，部分对象不能离开整体对象独立存在。</li>\n<li>在 UML 中用带实心菱形的实线表示，菱形指向整体。</li>\n</ul>\n</li>\n<li><strong>继承关系</strong>（Inheritance）：\n<ul>\n<li>耦合度最高，表示一个类（子类）继承另一个类（父类）的属性和方法，是一种特殊的关系。</li>\n<li>语义上是 “A is B”。</li>\n<li>在 UML 中用带空心三角箭头的实线表示，箭头从子类指向父类。</li>\n</ul>\n</li>\n</ol>\n<p>从方向性来看，继承通常被视为垂直关系，因为它表达了类之间的层次结构；而依赖、关联、聚合和组合则被视为水平关系，因为它们表达了类之间的同伴或同事关系。</p>\n<p>在实现多态时，继承和虚函数是常用的机制，因为它们允许子类覆盖父类的行为。然而，组合和依赖关系提供了另一种实现多态的方式，这种方式基于对象的组合，允许更灵活的代码重用和更低的耦合度。通过组合不同的对象来构建系统，可以在不修改现有代码的情况下，通过替换对象来改变系统的行为。这种基于对象的多态性提供了一种更细粒度的控制和更大的灵活性。</p>\n<h2 id=\"面向对象的设计原则\"><a class=\"anchor\" href=\"#面向对象的设计原则\">#</a> 面向对象的设计原则</h2>\n<p>在进行面向对象设计的时候，需要考虑类与类之间的关系，这样可以让类之间的关系更加明确。但是，除此之外，在进行面向对象设计的时候，还需要注意满足一定的设计要求，也就是面向对象的设计原则，只有遵循一定的原则，才能更好的满足软件的设计需求，更好的满足变化。而一个优良的系统设计，强调要保持低耦合、高内聚的要求，为了满足这个要求，面向对象的设计原则设计了七种。</p>\n<h3 id=\"单一职责原则\"><a class=\"anchor\" href=\"#单一职责原则\">#</a> 单一职责原则</h3>\n<p>单一职责原则（Single Responsibility Principle, SRP）是面向对象设计中的一个基本原则，它主张一个类应当只有一个引起它变化的原因。这个原则的核心在于提升类的内聚性并减少耦合度，意味着类应该全神贯注于一项职责，并且该职责被完全封装在类中。</p>\n<p>在实践中，这意味着如果一个类承担了多项职责，那么它很可能会在多个不同的方向上发生变化，这不仅会降低类的可维护性，也会增加类之间的依赖性。因此，应该将不同的职责分配给不同的类，使得每个类只关注于一项任务。</p>\n<p>应用单一职责原则可以提高类的可复用性，因为职责单一的类更容易在不同的上下文中被使用。同时，它也使得类的维护变得更加容易，因为修改一个职责不会影响到其他职责。为了有效地实施这一原则，设计人员需要有能力识别出类的不同职责，并将它们分离到不同的类中。这通常涉及到定义清晰的类接口，并避免职责扩散，即避免在已经具有多重职责的类中添加新的功能。</p>\n<p>确定类的职责以及如何恰当地分离这些职责需要设计人员具备较强的分析和设计技能。此外，设计人员还需要在类的职责单一性和系统整体复杂性之间找到平衡点，以确保类的大小和数量保持在合理的范围内。</p>\n<p>例子：将长方形类的画图与计算面积功能分开，这样的话，计算面积就是计算面积，画图就是画图。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Rectangle <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t+draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+area<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> double</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tnote for Rectangle \"Rectangle 做了两件事情，</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t计算矩形面积以及在界面上绘制矩形\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tRectangle <span class=\"token arrow operator\">--></span> GUI</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tGeometryApp <span class=\"token arrow operator\">--></span> Rectangle</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tGraphicalApp <span class=\"token arrow operator\">--></span> Rectangle</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tGraphicalApp <span class=\"token arrow operator\">--></span> GUI</pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">direction</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Rectangle <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+area<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> double</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">class</span> RectangleGUI <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t+draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> double</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tRectangleGUI <span class=\"token arrow operator\">--></span> GUI</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tRectangleGUI <span class=\"token arrow operator\">--|></span> Rectangle</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tGeometryApp <span class=\"token arrow operator\">--></span> Rectangle</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tGraphicalApp <span class=\"token arrow operator\">--></span> RectangleGUI</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tGraphicalApp <span class=\"token arrow operator\">--></span> GUI</pre></td></tr></table></figure><h3 id=\"开闭原则\"><a class=\"anchor\" href=\"#开闭原则\">#</a> 开闭原则</h3>\n<p>开闭原则（Open-Closed Principle, OCP）是面向对象设计中的核心原则之一，它指出软件实体应该对扩展开放，对修改关闭。这意味着当软件系统需要增加新功能或适应新需求时，应该能够通过添加新的代码来实现，而不是修改现有的代码。开闭原则是提高软件可复用性和可维护性的关键，它强调在设计时考虑未来可能的变化，从而使得系统更加灵活和可扩展。</p>\n<p>开闭原则的核心在于对抽象编程，而不是对具体实现编程。抽象是相对稳定的，而具体实现则可能经常变化。因此，通过定义稳定的抽象层，并将可能变化的具体实现细节放在独立的模块中，可以确保系统的稳定性和可扩展性。</p>\n<p>在实际应用中，开闭原则要求设计师在系统设计初期就考虑可能的变化，并为这些变化提供抽象的接口或抽象类。这样，当需要改变系统行为时，只需添加新的具体实现类来扩展现有的抽象层，而无需修改原有的抽象层代码。这种方法不仅减少了对现有代码的依赖，也降低了引入新功能时可能引起的错误。</p>\n<p>例如，在 C++ 中，可以通过定义抽象类来创建一个稳定的抽象层，然后通过继承这些抽象类来实现具体的行为。如果需要修改或扩展系统的功能，可以简单地增加新的派生类，而无需改动原有的抽象类或其他派生类。这样，系统就可以在不修改现有代码的基础上进行扩展，从而满足开闭原则的要求。</p>\n<p>随着软件系统的规模不断扩大和寿命不断延长，软件维护成本也越来越高。因此，设计满足开闭原则的软件系统变得越来越重要。通过遵循开闭原则，可以提高系统的适应性和灵活性，同时保持系统的稳定性和可维护性。这对于构建长期运行和持续发展的软件系统至关重要。</p>\n<p>例子：版本升级，不改源代码，原来的功能就是可以使用的。计算器代码的实现：分别设计加减乘除，不如直接使用继承，实现虚方法。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Calculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t+plus<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+minus<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+multiply<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+divide<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tnote for Calculator <span class=\"token string\">\"计算器类，该类包含四个方法\"</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">plus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">minus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">return</span> x <span class=\"token operator\">/</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"除数不能为0\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Calculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+getResult<span class=\"token text string\">(int, int)</span> int *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+~Calculator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">class</span> PlusCalculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t+getResult<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">class</span> MinusCalculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t+getResult<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">class</span> MultiCalculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t+getResult<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">class</span> DivideCalculator <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t+getResult<span class=\"token text string\">(int, int)</span> int</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tCalculator <span class=\"token arrow operator\">&lt;|--</span> PlusCalculator</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tCalculator <span class=\"token arrow operator\">&lt;|--</span> MinusCalculator</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tCalculator <span class=\"token arrow operator\">&lt;|--</span> MultiCalculator</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tCalculator <span class=\"token arrow operator\">&lt;|--</span> DivideCalculator</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tnote for Calculator \"设计为抽象类，</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tgetResult 函数设置为纯虚函数\"</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PlusCalculator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Calculator</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">PlusCalculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MinusCalculator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Calculator</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">MinusCalculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MultiplyCalculator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Calculator</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">MultiplyCalculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">DivideCalculator</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Calculator</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token keyword\">return</span> x <span class=\"token operator\">/</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"除数不能为0\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">DivideCalculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"里氏替换原则\"><a class=\"anchor\" href=\"#里氏替换原则\">#</a> 里氏替换原则</h3>\n<p>里氏代换原则（Liskov Substitution Principle, LSP）是由芭芭拉・里斯科夫提出的面向对象设计原则，它是继承复用的基础。这一原则的核心观点是，派生类（子类）对象应该能够无缝替换所有基类（父类）对象，而不影响程序的正确性。换句话说，如果一个类继承自另一个类，那么它的实例应该能够在任何地方替换基类的实例，不会引起程序出错或异常。</p>\n<p>里氏代换原则强调的是派生类必须能够兼容基类。这意味着派生类可以增加新的行为，但不应该改变基类已有的行为。派生类可以实现基类的抽象方法来表现多态，但不应该覆盖基类的非抽象方法，因为这样做可能会破坏基类的行为。例如，如果有一个基类  <code>Animal</code>  和它的派生类  <code>Dog</code> ，我们可以认为喜欢  <code>Animal</code>  的人也一定喜欢  <code>Dog</code> ，因为  <code>Dog</code>  是  <code>Animal</code>  的一种。但是，如果某人喜欢  <code>Dog</code> ，我们不能断定这个人也喜欢所有类型的  <code>Animal</code> 。</p>\n<p>这一原则是实现开闭原则的重要手段之一。在程序中，我们应当尽量使用基类类型来定义对象，而在运行时再确定其具体的派生类类型。这样做可以在不修改现有代码的基础上，通过引入新的派生类来扩展系统的功能。</p>\n<p>在实际应用中，应当将基类设计为抽象类或接口，让派生类继承基类或实现接口，并实现基类中声明的方法。在运行时，派生类的实例可以替换基类的实例，从而方便地扩展系统的功能，无需修改原有派生类的代码。增加新功能可以通过增加新的派生类来实现。</p>\n<p>里氏代换原则有助于提高代码的可维护性和可扩展性，它要求我们在设计类层次结构时，仔细考虑派生类与基类之间的关系，确保派生类能够兼容基类。这样，当系统需要变化时，我们可以安全地引入新的派生类，而不必担心会对现有的系统造成破坏。</p>\n<p>有代码的实现：（注意接口的概念，功能服务，普通函数、自由函数，类的 public 成员函数，虚函数， 纯虚函数），注意与隐藏做区分，派生类要保有原来的功能，然后在此基础上扩展该功能。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> User <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t#_name <span class=\"token operator\">:</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t#_score <span class=\"token operator\">:</span> float</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+User<span class=\"token text string\">(name: const string &amp;)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+consume<span class=\"token text string\">(delta: float)</span> void</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">class</span> VipUser <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t-_discount <span class=\"token operator\">:</span> float</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    +VipUser<span class=\"token text string\">(name: const string &amp;)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    +consume<span class=\"token text string\">(delta: float)</span> void</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tVipUser <span class=\"token arrow operator\">--|></span> User</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_score</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"User::consume()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    _score <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\">> \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" consume \"</span> <span class=\"token operator\">&lt;&lt;</span> delta <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  string _name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">float</span> _score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">VipUser</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">VipUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_discount</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"VipUser::consume(float)\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">float</span> tmp <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> _discount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _score <span class=\"token operator\">+=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_score <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      _discount <span class=\"token operator\">=</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\">> \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" consume \"</span> <span class=\"token operator\">&lt;&lt;</span> tmp <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">float</span> _discount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  User <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"刘德华\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  user<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  user<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  VipUser <span class=\"token function\">vip</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张学友\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  vip<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  vip<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 改变了基类的方法，隐藏</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> User <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t#_name <span class=\"token operator\">:</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t#_score <span class=\"token operator\">:</span> float</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+User<span class=\"token text string\">(name: const string &amp;)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+consume<span class=\"token text string\">(delta: float)</span> void</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">class</span> VipUser <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t-_discount <span class=\"token operator\">:</span> float</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    +VipUser<span class=\"token text string\">(name: const string &amp;)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    +consume2<span class=\"token text string\">(delta: float)</span> void</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    +updateDiscount<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tVipUser <span class=\"token arrow operator\">--|></span> User</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_score</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _score <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\">> \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" consume \"</span> <span class=\"token operator\">&lt;&lt;</span> delta <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  string _name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">float</span> _score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">VipUser</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">VipUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">_discount</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">consume2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">float</span> realDelta <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> _discount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _score <span class=\"token operator\">+=</span> realDelta<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">updateDiscount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\">> \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" consume \"</span> <span class=\"token operator\">&lt;&lt;</span> realDelta <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateDiscount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_score <span class=\"token operator\">></span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      _discount <span class=\"token operator\">=</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_score <span class=\"token operator\">></span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      _discount <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_score <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      _discount <span class=\"token operator\">=</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      _discount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">float</span> _discount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  User <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  user<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  user<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  VipUser <span class=\"token function\">vip</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lucy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  vip<span class=\"token punctuation\">.</span><span class=\"token function\">consume2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  vip<span class=\"token punctuation\">.</span><span class=\"token function\">consume2</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加自己的个性</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  vip<span class=\"token punctuation\">.</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 基类的方法还是保留在，</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"接口分离原则\"><a class=\"anchor\" href=\"#接口分离原则\">#</a> 接口分离原则</h3>\n<p>接口分离原则（Interface Segregation Principle, ISP）是面向对象设计中的一个重要原则，它强调客户端不应该依赖于它不使用的接口。这个原则的核心思想是推崇使用多个小的、专门的接口，而不是一个大的总接口。</p>\n<p>当一个接口变得过于庞大时，它往往包含了许多客户端并不需要的方法。这种情况下，接口隔离原则建议将这个大接口拆分成几个更细小的接口，这样使用该接口的客户端只需了解和使用与它们相关的部分。每个接口应该承担一种相对独立的角色，提供所需的功能，而不包含任何客户端不需要的行为。</p>\n<p>接口分离原则中的 “接口” 有两种含义：</p>\n<ol>\n<li><strong>逻辑上的接口</strong>： 当把 “接口” 理解为一个类型所具有的方法特征的集合时，它是一种逻辑上的抽象。在这种情况下，接口的划分将直接带来类型的划分。每个接口代表一个角色，每个角色都有其特定的接口。这种理解方式下的接口隔离原则有时也被称为 “角色隔离原则”。</li>\n<li><strong>狭义的接口</strong>： 如果将 “接口” 理解为 C++ 中的抽象类或 Java 中的接口（声明了一组没有实现的方法），那么接口隔离原则的含义是指接口应该只提供客户端需要的行为，而隐藏客户端不需要的行为。在这种情况下，应该为客户端提供尽可能小的、单独的接口，而不是一个大的总接口。</li>\n</ol>\n<p>在 C++ 中，实现一个接口意味着需要实现该接口中定义的所有方法，因此大的总接口可能会造成实现上的不便。为了使接口的职责单一，应该将大接口中的方法根据其职责不同分别放在不同的小接口中。这样做可以确保每个接口都易于使用，并承担某一单一角色。</p>\n<p>接口应该尽量细化，每个接口只包含一个客户端所需的方法，这种机制也称为 “定制服务”，即为不同的客户端提供宽窄不同的接口。这样做可以提高系统的灵活性和可维护性，同时也减少了客户端因为实现不需要的方法而带来的额外负担。</p>\n<p>接口分离原则鼓励设计者创建更小、更具体的接口，以满足特定的客户端需求，而不是强迫所有客户端都依赖于一个庞大且全面的接口。这样的设计可以使得系统更加模块化，更易于理解和维护。</p>\n<p>例子：鸟与鸵鸟</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Bird <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t+eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+chirp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">class</span> FlyingBird <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t+fly<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tCrow <span class=\"token arrow operator\">--|></span> FlyingBird</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tFlyingBird <span class=\"token arrow operator\">--|></span> Bird</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tOstrich <span class=\"token arrow operator\">--|></span> Bird</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">chirp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Bird</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FlyingBird</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Bird</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">FlyingBird</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Crow</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">FlyingBird</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"乌鸦喝水\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"乌鸦散步\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">chirp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"乌鸦蹦蹦跳跳\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"乌鸦飞翔\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ostrich</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Bird</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"鸵鸟吃东西\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"鸵鸟散步\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">chirp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"鸵鸟蹦蹦跳跳\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"依赖倒置原则\"><a class=\"anchor\" href=\"#依赖倒置原则\">#</a> 依赖倒置原则</h3>\n<p>依赖倒置原则（Dependency Inversion Principle, DIP）是面向对象设计中的一项关键原则，它提出了两个主要的指导方针：高层模块不应该依赖低层模块，两者都应该依赖抽象；抽象不应该依赖于细节，细节应该依赖于抽象。这意味着在设计系统时，应该以抽象的方式定义组件之间的关系，而不是依赖于具体的实现。</p>\n<p>依赖倒置原则的核心在于面向接口编程，而非面向实现编程。遵循这一原则，可以让系统更加灵活和可维护。在代码中，这意味着应当使用接口或抽象类来声明变量类型、参数类型、返回类型以及执行类型转换，而不是直接使用具体类。</p>\n<p>依赖倒置原则是实现开闭原则的重要手段之一。通过依赖抽象而非具体实现，系统可以在不修改源代码的情况下进行扩展。具体类的对象可以通过配置文件来指定，从而在运行时注入到系统中。这样，如果需要改变系统的行为，只需添加新的具体类并在配置文件中进行修改，而无需改动现有的代码。</p>\n<p>为了实现依赖倒置原则，通常采用依赖注入（Dependency Injection, DI）的手法。依赖注入有几种不同的形式：</p>\n<ol>\n<li><strong>构造注入</strong>（Constructor Injection）： 通过构造函数将依赖的对象传递给需要它的类。</li>\n<li><strong>设值注入</strong>（Setter Injection）： 通过 Setter 方法将依赖的对象设置到需要它的类中。</li>\n<li><strong>接口注入</strong>（Interface Injection）： 通过在接口中声明的方法来传递依赖的对象。</li>\n</ol>\n<p>在这些注入方式中，定义时使用的是抽象类型，在运行时再传入具体类型的对象。这样做可以确保系统的高层组件不依赖于具体的低层组件，而是由低层组件依赖于高层组件定义的抽象。</p>\n<p>依赖倒置原则、开闭原则和里氏代换原则经常一起使用。开闭原则是面向对象设计的目标，即软件实体应当对扩展开放，对修改关闭。里氏代换原则是实现开闭原则的基础，确保派生类可以替换其基类。而依赖倒置原则是实现这些目标的手段，通过依赖抽象来减少模块间的耦合。</p>\n<p>综合这些原则，可以设计出灵活、可维护和可扩展的系统。依赖倒置原则通过提升抽象层的地位，降低了系统各部分之间的依赖关系，从而使得系统更容易适应变化。</p>\n<p>例子：银行业务类。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> BankWorker <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t+saveService<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+payService<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+transferService<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tnote for BankWorker \"该类承担了所有的具体业务，</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t如果具体业务有变化，该类就要被修改，</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t因为具体的是容易变化的\"</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BankWorker</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">saveService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理存款业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">payService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理支付业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">transferService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理转账业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">doSaveBusiness</span><span class=\"token punctuation\">(</span>BankWorker <span class=\"token operator\">*</span>worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  worker<span class=\"token operator\">-></span><span class=\"token function\">saveService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">doPayBusiness</span><span class=\"token punctuation\">(</span>BankWorker <span class=\"token operator\">*</span>worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  worker<span class=\"token operator\">-></span><span class=\"token function\">payService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">doTransferBusiness</span><span class=\"token punctuation\">(</span>BankWorker <span class=\"token operator\">*</span>worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  worker<span class=\"token operator\">-></span><span class=\"token function\">transferService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>BankWorker<span class=\"token operator\">></span> <span class=\"token function\">worker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">BankWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">doSaveBusiness</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token function\">doPayBusiness</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">doTransferBusiness</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> BankWorker <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+doBusiness<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+~BankWorker<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">class</span> SaveBusiness <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t+doBusiness<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">class</span> PayBusiness <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t+doBusiness<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">class</span> TransferBusiness <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t+doBusiness<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tSaveBusiness <span class=\"token arrow operator\">--|></span> BankWorker</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tPayBusiness <span class=\"token arrow operator\">--|></span> BankWorker</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tTransferBusiness <span class=\"token arrow operator\">--|></span> BankWorker</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BankWorker</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">BankWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SaveBankWorker</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BankWorker</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理存款业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PayBankWorker</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BankWorker</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理支付业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TransferBankWorker</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BankWorker</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"办理转账业务\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span>BankWorker <span class=\"token operator\">*</span>worker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  worker<span class=\"token operator\">-></span><span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>BankWorker<span class=\"token operator\">></span> <span class=\"token function\">saveWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">SaveBankWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>BankWorker<span class=\"token operator\">></span> <span class=\"token function\">payWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">PayBankWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>BankWorker<span class=\"token operator\">></span> <span class=\"token function\">transferWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">TransferBankWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span>saveWorker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span>payWorker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token function\">doBusiness</span><span class=\"token punctuation\">(</span>transferWorker<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"迪米特法则\"><a class=\"anchor\" href=\"#迪米特法则\">#</a> 迪米特法则</h3>\n<p>迪米特法则（Law of Demeter），也称为最少知识原则（Least Knowledge Principle），是面向对象设计中的一个原则，它规定了一个软件实体应当尽可能少地与其他实体发生相互作用。这个原则的核心在于降低系统组件之间的耦合度，使得系统更加模块化，从而提高系统的可维护性和可扩展性。</p>\n<p>根据迪米特法则，如果一个系统遵循这一原则，那么当系统中的某一个模块需要修改时，对其他模块的影响会降到最低，这使得系统的扩展和维护相对容易。迪米特法则要求限制软件实体之间通信的宽度和深度，从而减少各个模块之间的依赖。</p>\n<p>在实践中，迪米特法则建议我们应该只与直接的朋友类交互，而不是与 “陌生人” 类交互。一个对象的朋友包括：</p>\n<ol>\n<li>当前对象本身（ <code>this</code> ）。</li>\n<li>以参数形式传入到当前对象方法中的对象。</li>\n<li>当前对象的成员对象。</li>\n<li>当前对象的成员对象是一个集合时，集合中的元素。</li>\n<li>当前对象所创建的对象。</li>\n</ol>\n<p>除了这些朋友之外的其他对象都视为 “陌生人”。迪米特法则要求对象只与直接朋友交互，而不与 “陌生人” 直接交互，以此来降低系统的耦合度。</p>\n<p>应用迪米特法则时，需要注意以下几点：</p>\n<ul>\n<li><strong>创建松耦合的类</strong>：在类的设计上，应该尽量降低类之间的耦合度，这样修改一个类时，对其他类的影响最小。</li>\n<li><strong>降低访问权限</strong>：在类的结构设计上，应该尽量降低成员变量和成员函数的访问权限，以减少外部对类的直接干预。</li>\n<li><strong>设计不变类</strong>：在可能的情况下，应该设计类为不变类，即对象的状态在创建后不能被改变。</li>\n<li><strong>减少对其他类的引用</strong>：一个对象对其他对象的引用应该降到最低，尽量通过间接的方式来实现对象间的交互。</li>\n</ul>\n<p>迪米特法则通过引入合理的 “第三者” 来降低现有对象之间的耦合度。例如，如果类 A 需要调用类 C 的方法，但类 A 和类 C 不是朋友关系，那么可以通过类 B 来转发这个调用，使得类 A 和类 C 之间没有直接的依赖关系。</p>\n<p>迪米特法则强调了在设计系统时应该尽量减少对象之间的直接交互，以降低系统的耦合度，提高系统的稳定性和可维护性。通过这种方式，可以构建出更加健壮和灵活的软件系统。</p>\n<p>例如：使用买房者购房的一个例子。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYZUp0TEFZR3RGTnJFaTc5RWxFMzBNQlR5eng5MUV0WG9WQWlkVnNTQWRtaEE_ZT1aVnFQMzc.jpg\" alt=\"\" /></p>\n<p>A 方案，购房者需要挨个楼盘的去知道确切的消息，需要对每个楼盘都有详细的了解，而 B 方案是购房者可以不用知道每个楼盘的具体信息，直接找个中介，告诉中介自己的需求，让中介进行推荐，这样购房 者与楼盘之间的关系就不是那么强相关。</p>\n<p>方案 A 的代码实现</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Building</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">virtual</span> string <span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Building</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">WankeBuilding</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Building</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">WankeBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_quality</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高品质\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"万科楼盘\"</span> <span class=\"token operator\">&lt;&lt;</span> _quality <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的房子被出售\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  string <span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> _quality<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  string _quality<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">HengdaBuilding</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Building</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">HengdaBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_quality</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"低品质\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"恒大楼盘\"</span> <span class=\"token operator\">&lt;&lt;</span> _quality <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"的房子被出售\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  string <span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> _quality<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  string _quality<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  Building <span class=\"token operator\">*</span>pbuidingA <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">WankeBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  Building <span class=\"token operator\">*</span>pbuidingB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">HengdaBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  string demand <span class=\"token operator\">=</span> <span class=\"token string\">\"低品质\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pbuidingA<span class=\"token operator\">-></span><span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> demand<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    pbuidingA<span class=\"token operator\">-></span><span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pbuidingB<span class=\"token operator\">-></span><span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> demand<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    pbuidingB<span class=\"token operator\">-></span><span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>方案 B 的代码实现</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mediator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">Mediator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Building <span class=\"token operator\">*</span>pbuildingA <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">WankeBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Building <span class=\"token operator\">*</span>pbuildingB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">HengdaBuilding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _buildings<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>pbuildingA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    _buildings<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>pbuildingB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  Building <span class=\"token operator\">*</span><span class=\"token function\">findBuilding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>quality<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span>building <span class=\"token operator\">:</span> _buildings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>building<span class=\"token operator\">-></span><span class=\"token function\">getQuality</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> quality<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> building<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">Mediator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span>building <span class=\"token operator\">:</span> _buildings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>building<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">delete</span> building<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  vector<span class=\"token operator\">&lt;</span>Building <span class=\"token operator\">*</span><span class=\"token operator\">></span> _buildings<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  string demand <span class=\"token operator\">=</span> <span class=\"token string\">\"低品质\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  Mediator mediator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  Building <span class=\"token operator\">*</span>pbuilding <span class=\"token operator\">=</span> mediator<span class=\"token punctuation\">.</span><span class=\"token function\">findBuilding</span><span class=\"token punctuation\">(</span>demand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pbuilding<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    pbuilding<span class=\"token operator\">-></span><span class=\"token function\">sale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"没有符合要求的楼盘\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"组合复用原则\"><a class=\"anchor\" href=\"#组合复用原则\">#</a> 组合复用原则</h3>\n<p>组合复用原则（Composite/Aggregate Reuse Principle）是面向对象设计中提倡的一种复用策略，它建议在设计时优先考虑使用组合或聚合等关联关系来复用代码，而不是依赖于继承。这个原则的核心思想是通过将已有的对象纳入新对象中，使新对象能够通过委托调用已有对象的方法来复用功能。</p>\n<p>组合复用原则强调的是在复用时应该尽量使用 “Has-A” 关系，即新对象包含已有对象，这些对象成为新对象的一部分。这种关系是 “黑箱” 复用，新对象不需要了解成员对象的内部实现细节，成员对象的变化对新对象的影响相对较小，从而降低了类与类之间的耦合度。</p>\n<p>相比之下，继承是一种 “白箱” 复用，因为继承会将基类的实现细节暴露给派生类。如果基类发生改变，派生类的实现可能也需要随之改变，这增加了系统的脆弱性。此外，继承而来的实现是静态的，无法在运行时改变，这限制了系统的灵活性。继承还只能在某些特定的环境下使用，比如当类没有被声明为不可继承时。</p>\n<p>组合复用原则的优点包括：</p>\n<ol>\n<li>\n<p><strong>灵活性</strong>：组合提供了更高的灵活性，因为对象之间的依赖关系是在运行时建立的，可以根据需要动态地更换成员对象。</p>\n</li>\n<li>\n<p><strong>降低耦合度</strong>：组合关系使得成员对象的变化对新对象的影响较小，从而降低了系统的耦合度。</p>\n</li>\n<li>\n<p><strong>封装性</strong>：组合关系保持了成员对象的封装性，新对象不需要了解成员对象的内部实现。</p>\n</li>\n<li>\n<p><strong>选择性复用</strong>：新对象可以有选择性地调用成员对象的操作，而不是继承所有基类的方法。</p>\n</li>\n</ol>\n<p>在实际应用中，如果两个类之间是 “Is-A” 关系，即一个类是另一个类的具体类型，可以使用继承。而如果两个类之间是 “Has-A” 关系，即一个类包含另一个类的对象，应该使用组合或聚合。这种区分有助于决定在特定的设计情况下应该使用继承还是组合 / 聚合来实现复用。</p>\n<p>组合复用原则鼓励设计者在构建系统时更多地使用组合关系来复用代码，从而创建出更加灵活、松耦合的系统。这种设计方法有助于提高系统的可维护性和可扩展性，使得系统更容易适应未来的变化。</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Vehicle <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tPersonA <span class=\"token arrow operator\">--|></span> Tesla</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tPersonB <span class=\"token arrow operator\">--|></span> BYD</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPersonC <span class=\"token arrow operator\">--|></span> Geely</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tTesla <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tBYD <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tGeely <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vehicle</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Vehicle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Tesla</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Model Y start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BYD</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"汉EV start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Geely</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Geely LYNK03 start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonA</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Tesla</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonB</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">BYD</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonC</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Geely</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  PersonA pa<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  pa<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  PersonB pb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  pb<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  PersonC pc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  pc<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Vehicle <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">class</span> Person <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t-_vehicle <span class=\"token operator\">:</span> <span class=\"token text string\">(Vehicle *)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t+drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tPersonA <span class=\"token arrow operator\">--|></span> Person</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tPersonB <span class=\"token arrow operator\">--|></span> Person</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tPersonC <span class=\"token arrow operator\">--|></span> Person</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tTesla <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tBYD <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tGeely <span class=\"token arrow operator\">--|></span> Vehicle</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vehicle</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Vehicle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Tesla</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Model Y start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BYD</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"汉EV start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Geely</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Vehicle</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Geely LYNK03 start...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">getVehicle</span><span class=\"token punctuation\">(</span>Vehicle <span class=\"token operator\">*</span>vehicle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    _vehicle <span class=\"token operator\">=</span> vehicle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    _vehicle<span class=\"token operator\">-></span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  Vehicle <span class=\"token operator\">*</span>_vehicle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  Person person<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Vehicle<span class=\"token operator\">></span> <span class=\"token function\">tesla</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">Tesla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Vehicle<span class=\"token operator\">></span> <span class=\"token function\">han</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">BYD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Vehicle<span class=\"token operator\">></span> <span class=\"token function\">geely</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">Geely</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">getVehicle</span><span class=\"token punctuation\">(</span>tesla<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">getVehicle</span><span class=\"token punctuation\">(</span>han<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">getVehicle</span><span class=\"token punctuation\">(</span>geely<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  person<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"七大设计原则的总结\"><a class=\"anchor\" href=\"#七大设计原则的总结\">#</a> 七大设计原则的总结</h3>\n<p>原则的目的只有一个：降低对象之间的耦合，增加程序的可复用性、可扩展性和可维护性。</p>\n<table>\n<thead>\n<tr>\n<th>设计原则名称</th>\n<th>设计原则简介</th>\n<th>重要性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单一职责原则</td>\n<td>类的职责要单一，不能将太多的职责放在一个类中</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>开闭原则</td>\n<td>软件实体对扩展是开放的，但对修改是关闭的，即在不修改一个软件的基础上去扩展其功能</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>里氏替换原则</td>\n<td>在软件系统中，一个可以接受基类对象的地方必然可以接收一个派生类对象</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>依赖倒置原则</td>\n<td>要针对抽象编程，而不是针对具体编程</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>接口隔离原则</td>\n<td>使用多个专门的接口来取代一个统一的接口</td>\n<td>★★☆☆☆</td>\n</tr>\n<tr>\n<td>迪米特法则</td>\n<td>一个软件实体对其他实体的引用越少越好，或者说如果两个类彼此直接通信，那么这两个类就不应当发生直接相互作用，而是通过引入一个第三者发生间接交互</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>合成复用原则</td>\n<td>在系统中应该尽量多使用组合和聚合关联关系，尽量少使用甚至不使用继承关系</td>\n<td>★★★★☆</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"设计模式\"><a class=\"anchor\" href=\"#设计模式\">#</a> 设计模式</h2>\n<p>设计模式分为三种不同类型的模式。</p>\n<p>创建型模式（Creational patterns）5 种：提供对象创建机制，增加现有代码的灵活性和重用</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>模式名称</th>\n<th>学习难度</th>\n<th>使用频率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单例模式</td>\n<td>Singleton Pattern</td>\n<td>★☆☆☆☆</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>简单工厂模式</td>\n<td>Simple Factory Pattern</td>\n<td>★★☆☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>工厂方法模式</td>\n<td>Factory Method Pattern</td>\n<td>★★☆☆☆</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>抽象工厂模式</td>\n<td>Abstract Factory Pattern</td>\n<td>★★★★☆</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>原型模式</td>\n<td>Prototype Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>建造者模式</td>\n<td>Builder Pattern</td>\n<td>★★★☆☆</td>\n<td>★★☆☆☆</td>\n</tr>\n</tbody>\n</table>\n<p>结构型模式（Structural patterns）7 种：解释如何将对象和类组装成更大的结构，同时保持结构的灵活性和高效性。</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>模式名称</th>\n<th>学习难度</th>\n<th>使用频率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>适配器模式</td>\n<td>Adapter Pattern</td>\n<td>★★☆☆☆</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>桥接模式</td>\n<td>Bridge Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>组合模式</td>\n<td>Composite Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>装饰模式</td>\n<td>Decorator Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>外观模式</td>\n<td>Facade Pattern</td>\n<td>★☆☆☆☆</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>享元模式</td>\n<td>Flyweight Pattern</td>\n<td>★★★★☆</td>\n<td>★☆☆☆☆</td>\n</tr>\n<tr>\n<td>代理模式</td>\n<td>Proxy Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★★☆</td>\n</tr>\n</tbody>\n</table>\n<p>行为型模式（Behavioral patterns）11 种：负责有效的沟通和对象之间的责任分配。</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>模式名称</th>\n<th>学习难度</th>\n<th>使用频率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>职责链模式</td>\n<td>Chain of Responsibility Pattern</td>\n<td>★★★☆☆</td>\n<td>★★☆☆☆</td>\n</tr>\n<tr>\n<td>命令模式</td>\n<td>Command Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>解释器模式</td>\n<td>Interpreter Pattern</td>\n<td>★★★★★</td>\n<td>★☆☆☆☆</td>\n</tr>\n<tr>\n<td>迭代器模式</td>\n<td>Iterator Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>中介者模式</td>\n<td>Mediator Pattern</td>\n<td>★★★☆☆</td>\n<td>★★☆☆☆</td>\n</tr>\n<tr>\n<td>备忘录模式</td>\n<td>Memento Pattern</td>\n<td>★★☆☆☆</td>\n<td>★★☆☆☆</td>\n</tr>\n<tr>\n<td>观察者模式</td>\n<td>Observer Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★★★</td>\n</tr>\n<tr>\n<td>状态模式</td>\n<td>State Pattern</td>\n<td>★★★☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>策略模式</td>\n<td>Strategy Pattern</td>\n<td>★☆☆☆☆</td>\n<td>★★★★☆</td>\n</tr>\n<tr>\n<td>模板方法模式</td>\n<td>Template Method Pattern</td>\n<td>★★☆☆☆</td>\n<td>★★★☆☆</td>\n</tr>\n<tr>\n<td>访问者模式</td>\n<td>Visitor Pattern</td>\n<td>★★★★☆</td>\n<td>★☆☆☆☆</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"简单工厂\"><a class=\"anchor\" href=\"#简单工厂\">#</a> 简单工厂</h3>\n<h4 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h4>\n<p>简单工厂模式又叫静态工厂方法模式。提供一个工厂类，在工厂类中做判断，根据传入的类型创造相应的产品。当增加新的产品时，就需要修改工厂类。简单工厂模式提供了专门的工厂类用于创建对象，将对象的创建和对象的使用分离开，它作为一种最简单的工厂模式在软件开发中得到了较为广泛的应用。</p>\n<h4 id=\"类图\"><a class=\"anchor\" href=\"#类图\">#</a> 类图</h4>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">direction</span> TB</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Product <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+~Product<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tnote for Product <span class=\"token string\">\"抽象产品类\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tProductA <span class=\"token arrow operator\">--|></span> Product </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tProductB <span class=\"token arrow operator\">--|></span> Product </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tProductC <span class=\"token arrow operator\">--|></span> Product </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">class</span> ProductFactory <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t+createProduct<span class=\"token text string\">(type ProductType)</span> unuque_ptr~Product~$</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tnote for ProductFactory <span class=\"token string\">\"产品类工厂，该工厂负责生产所有的产品\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tProductFactory <span class=\"token arrow operator\">..|></span> ProductA</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tProductFactory <span class=\"token arrow operator\">..|></span> ProductB</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tProductFactory <span class=\"token arrow operator\">..|></span> ProductC</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">ProductType</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  TypeA<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  TypeB<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  TypeC</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 抽象产品类</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 抽象类的析构函数设置为虚函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductA</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ProductA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductA::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~ProductA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductB</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ProductB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductB::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~ProductB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductC</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token function\">ProductC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ProductC()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductC::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">ProductC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~ProductC()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductFactory</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token keyword\">static</span> unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> <span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span>ProductType type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>      <span class=\"token keyword\">case</span> TypeA<span class=\"token operator\">:</span><span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">unique_ptr</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token keyword\">case</span> TypeB<span class=\"token operator\">:</span><span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">unique_ptr</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      <span class=\"token keyword\">case</span> TypeC<span class=\"token operator\">:</span><span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">unique_ptr</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ProductC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">unique_ptr</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> pa <span class=\"token operator\">=</span> <span class=\"token class-name\">ProductFactory</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span>TypeA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> pb <span class=\"token operator\">=</span> <span class=\"token class-name\">ProductFactory</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span>TypeB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> pc <span class=\"token operator\">=</span> <span class=\"token class-name\">ProductFactory</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span>TypeC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  pa<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  pb<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  pc<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"优点\"><a class=\"anchor\" href=\"#优点\">#</a> 优点</h4>\n<ol>\n<li>工厂类包含必要的判断逻辑，可以决定在什么时候创建哪一个产品类的实例，客户端可以免除直接创建产品对象的职责，而仅仅 “消费” 产品，简单工厂模式实现了对象创建和使用的分离</li>\n<li>客户端无须知道所创建的具体产品类的类名，只需要知道具体产品类所对应的参数即可，对于一些复杂的类名，通过简单工厂模式可以在一定程度减少使用者的记忆量</li>\n<li>通过引入配置文件，可以在不修改任何客户端代码的情况下更换和增加新的具体产品类，在一定程度上提高了系统的灵活性</li>\n</ol>\n<h4 id=\"缺点\"><a class=\"anchor\" href=\"#缺点\">#</a> 缺点</h4>\n<ol>\n<li>由于工厂类集中了所有产品的创建逻辑，职责过重，一旦不能正常工作，整个系统都要受到影响</li>\n<li>使用简单工厂模式势必会增加系统中类的个数（引入新的工程类），增加了系统的复杂度和理解难度</li>\n<li>系统拓展困难，一旦添加了新的产品就不得不修改工厂逻辑，在产品类型较多时，有可能造成工厂逻辑过于复杂，不利于系统的拓展和维护</li>\n<li>简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构</li>\n</ol>\n<h4 id=\"使用场景\"><a class=\"anchor\" href=\"#使用场景\">#</a> 使用场景</h4>\n<ol>\n<li>工厂类负责创建的对象比较少，由于创建的对象较少，不会造成工厂方法中的业务逻辑太过复杂。</li>\n<li>客户端只知道传入工厂类的参数，对于如何创建对象并不关心。</li>\n</ol>\n<h3 id=\"工厂方法\"><a class=\"anchor\" href=\"#工厂方法\">#</a> 工厂方法</h3>\n<h4 id=\"概述-2\"><a class=\"anchor\" href=\"#概述-2\">#</a> 概述</h4>\n<p>在软件开发及运行过程中，经常需要创建对象，但常出现由于需求的变更，需要创建的对象的具体类型也要经常变化。工厂方法通过采取虚函数的方法，实现了使用者和具体类型之间的解耦，可以用来解决这个问题。工厂方法模式对简单工厂模式中的工厂类进一步抽象。核心工厂类不再负责产品的创建，而是演变为一个抽象工厂角色，仅负责定义具体工厂子类必须实现的接口。同时，针对不同的产品提供不同的工厂。即每个产品都有一个与之对应的工厂。这样，系统在增加新产品时就不会修改工厂类逻辑而是添加新的工厂子类，从而弥补简单工厂模式对修改开放的缺陷。定义一个创建对象的接口，让子类决定实例化哪个类。该模式使类对象的创建延迟到子类。</p>\n<h4 id=\"类图-2\"><a class=\"anchor\" href=\"#类图-2\">#</a> 类图</h4>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">direction</span> BT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">class</span> Product <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+~Product<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tProductA <span class=\"token arrow operator\">--|></span> Product </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tProductB <span class=\"token arrow operator\">--|></span> Product </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">class</span> Factory <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t+createProduct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> Product * *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t+~Factory<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tnote for Factory \"A 类型的工厂生产 A 型的产品，</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t产品与工厂对应\"</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">class</span> FactoryA <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t+createProduct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span><span class=\"token text string\">(Product *)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">class</span> FactoryB <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t+createProduct<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span><span class=\"token text string\">(Product *)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tFactoryA <span class=\"token arrow operator\">--|></span> Factory</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tFactoryB <span class=\"token arrow operator\">--|></span> Factory</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tFactoryA <span class=\"token arrow operator\">..|></span> ProductA</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tFactoryB <span class=\"token arrow operator\">..|></span> ProductB</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 产品抽象类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductA</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ProductA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductA::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~ProductA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductB</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ProductB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductB::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~ProductB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Factory</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">virtual</span> Product <span class=\"token operator\">*</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FactoryA</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Factory</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token function\">FactoryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FactoryA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  Product <span class=\"token operator\">*</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">FactoryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~FactoryA()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FactoryB</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Factory</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token function\">FactoryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FactoryB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  Product <span class=\"token operator\">*</span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">FactoryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"~FactoryB()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">// 生产产品 A</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Factory<span class=\"token operator\">></span> <span class=\"token function\">factoryA</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">FactoryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> <span class=\"token function\">productA</span><span class=\"token punctuation\">(</span>factoryA<span class=\"token operator\">-></span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  productA<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\">// 生产产品 B</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> endl <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Factory<span class=\"token operator\">></span> <span class=\"token function\">factoryB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">FactoryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span> <span class=\"token function\">productB</span><span class=\"token punctuation\">(</span>factoryB<span class=\"token operator\">-></span><span class=\"token function\">createProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  productB<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"优点-2\"><a class=\"anchor\" href=\"#优点-2\">#</a> 优点</h4>\n<ol>\n<li>用户只需要知道具体工厂的名称就可得到所要的产品，无须知道产品的具体创建过程。</li>\n<li>灵活性增强，对于新产品的创建，只需多写一个相应的工厂类。</li>\n<li>典型的解耦框架。高层模块只需要知道产品的抽象类，无须关心其他实现类，满足迪米特法则、依赖倒置原则和里氏替换原则。</li>\n<li>对扩展开放对修改关闭；解决了简单工厂的缺点问题。</li>\n</ol>\n<h4 id=\"缺点-2\"><a class=\"anchor\" href=\"#缺点-2\">#</a> 缺点</h4>\n<ol>\n<li>类的个数容易过多，增加复杂度</li>\n<li>增加了系统的抽象性和理解难度</li>\n<li>接口的传入参数类型需要一致，且只能对单一变化量接口使用</li>\n<li>抽象产品只能生产一种产品，此弊端可使用抽象工厂模式解决。</li>\n</ol>\n<h4 id=\"应用场景\"><a class=\"anchor\" href=\"#应用场景\">#</a> 应用场景</h4>\n<ol>\n<li>客户只知道创建产品的工厂名，而不知道具体的产品名。</li>\n<li>创建对象的任务由多个具体子工厂中的某一个完成，而抽象工厂只提供创建产品的接口。</li>\n<li>客户不关心创建产品的细节，只关心产品的品牌</li>\n</ol>\n<h3 id=\"抽象工厂\"><a class=\"anchor\" href=\"#抽象工厂\">#</a> 抽象工厂</h3>\n<p>在软件开发及运行过程中，经常面临着 “一系列相互依赖的对象” 的创建工作；而由于需求的变化，常常 存在更多系列对象的创建问题。</p>\n<p>定义：提供一个接口，该接口负责创建一系列 “相关或者相互依赖的对象”，无需指定它们具体的类。</p>\n<h4 id=\"类图-3\"><a class=\"anchor\" href=\"#类图-3\">#</a> 类图</h4>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> AbsrtactFactory <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+createProductA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductA **</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+createProductB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductB **</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+~AbsrtactFactory<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tnote for AbsrtactFactory \"抽象工厂，提供工厂的接口</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t可以生成两种类型的产品 A 与 B\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">class</span> ConcreteFactory1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t+createProductA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductA **</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t+createProductB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductB **</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">class</span> ConcreteFactory2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t+createProductA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductA **</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t+createProductB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> AbstractProductB **</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tConcreteFactory1 <span class=\"token arrow operator\">--|></span> AbsrtactFactory</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tConcreteFactory2 <span class=\"token arrow operator\">--|></span> AbsrtactFactory</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">class</span> AbsrtactProductA <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void*</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t+~AbsrtactProductA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>*</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">class</span> ProductA1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">class</span> ProductA2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tProductA1 <span class=\"token arrow operator\">--|></span> AbsrtactProductA</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tProductA2 <span class=\"token arrow operator\">--|></span> AbsrtactProductA</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">class</span> AbsrtactProductB <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t+~AbsrtactProductB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>*</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">class</span> ProductB1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">class</span> ProductB2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t+show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tProductB1 <span class=\"token arrow operator\">--|></span> AbsrtactProductB</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tProductB2 <span class=\"token arrow operator\">--|></span> AbsrtactProductB</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tConcreteFactory1 <span class=\"token arrow operator\">..|></span> ProductA1</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tConcreteFactory1 <span class=\"token arrow operator\">..|></span> ProductB1</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tConcreteFactory2 <span class=\"token arrow operator\">..|></span> ProductA2</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tConcreteFactory2 <span class=\"token arrow operator\">..|></span> ProductB2</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// A 类型的抽象产品</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractProductA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">AbstractProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// B 类型的抽象产品</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractProductB</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">AbstractProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductA1</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractProductA</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductA1::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductA2</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractProductA</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductA2::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductB1</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractProductB</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductB1::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductB2</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractProductB</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"void ProductB2::show()\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractFactory</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token keyword\">virtual</span> AbstractProductA <span class=\"token operator\">*</span><span class=\"token function\">createProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">virtual</span> AbstractProductB <span class=\"token operator\">*</span><span class=\"token function\">createProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">AbstractFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ConcreteFactory1</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractFactory</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  AbstractProductA <span class=\"token operator\">*</span><span class=\"token function\">createProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductA1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  AbstractProductB <span class=\"token operator\">*</span><span class=\"token function\">createProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductB1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ConcreteFactory</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">AbstractFactory</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  AbstractProductA <span class=\"token operator\">*</span><span class=\"token function\">createProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductA2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  AbstractProductB <span class=\"token operator\">*</span><span class=\"token function\">createProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ProductB2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  AbstractFactory <span class=\"token operator\">*</span>factory1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ConcreteFactory1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  AbstractProductA <span class=\"token operator\">*</span>productA <span class=\"token operator\">=</span> factory1<span class=\"token operator\">-></span><span class=\"token function\">createProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  AbstractProductB <span class=\"token operator\">*</span>productB <span class=\"token operator\">=</span> factory1<span class=\"token operator\">-></span><span class=\"token function\">createProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  productA<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  productB<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  AbstractFactory <span class=\"token operator\">*</span>factory2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ConcreteFactory2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  productA <span class=\"token operator\">=</span> factory2<span class=\"token operator\">-></span><span class=\"token function\">createProductA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  productB <span class=\"token operator\">=</span> factory2<span class=\"token operator\">-></span><span class=\"token function\">createProductB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  productA<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  productB<span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"优点-3\"><a class=\"anchor\" href=\"#优点-3\">#</a> 优点</h4>\n<ol>\n<li>抽象工厂模式隔离了具体类的生成，使得客户端并不需要知道什么被创建。</li>\n<li>当一个产品族中的多个对象被设计成一起工作时，它能够保证客户端始终只使用同一产品族中的对象；</li>\n<li>增加新的产品族很方便（生成新的具体工厂），无需修改已有系统代码，符合开闭原则；</li>\n</ol>\n<h4 id=\"缺点-3\"><a class=\"anchor\" href=\"#缺点-3\">#</a> 缺点</h4>\n<p>增加新的产品等级结构很复杂，需要修改抽象工厂和所有的具体工厂类，对 “开闭原则” 的支持呈现倾斜性。</p>\n<h4 id=\"应用场景-2\"><a class=\"anchor\" href=\"#应用场景-2\">#</a> 应用场景</h4>\n<ol>\n<li>用户无需关心对象的创建过程，将对象的创建和使用解耦；</li>\n<li>产品等级结构稳定，在设计完成之后不会向系统中增加新的产品等级结构或者删除已有的产品等级结构；</li>\n<li>系统中有多于一个的产品族，而每次只使用其中某一产品族。可以通过配置文件等方式来使用户能够动态改变产品族，也可以很方便的增加新的产品族</li>\n</ol>\n<h3 id=\"观察者模式\"><a class=\"anchor\" href=\"#观察者模式\">#</a> 观察者模式</h3>\n<p>在 GOF 的《设计模式：可复用面向对象软件的基础》一书中对观察者模式是这样定义的：定义对象的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。 当一个对象发生了变化，关注它的对象就会得到通知；这种交互也成为发布 - 订阅（publishsubscribe）。</p>\n<h4 id=\"类图-4\"><a class=\"anchor\" href=\"#类图-4\">#</a> 类图</h4>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">class</span> Subject <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t+attach<span class=\"token text string\">(Observer *)</span> void*</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t+detach<span class=\"token text string\">(Observer *)</span> void*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t+notify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void*</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t+~Subject<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>*</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">class</span> Observer <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token annotation important\">&lt;&lt;Abstract>></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t+update<span class=\"token text string\">(status int)</span> void*</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t+~Observer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>*</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">class</span> ConcreateSubject <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t-_oblist<span class=\"token operator\">:</span> list~Observer *~</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t-_status<span class=\"token operator\">:</span> int</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t+attach<span class=\"token text string\">(Observer *)</span> void</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t+detach<span class=\"token text string\">(Observer *)</span> void</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t+notify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> void</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t+setStaus<span class=\"token text string\">(int)</span> void</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t+getStatus<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> int</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">class</span> ConcreateObserver1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t+update<span class=\"token text string\">(int)</span> void</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">class</span> ConcreateObserver2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t+update<span class=\"token text string\">(int)</span> void</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tConcreateSubject <span class=\"token arrow operator\">--|></span> Subject </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tConcreateObserver1 <span class=\"token arrow operator\">--|></span> Observer</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tConcreateObserver2 <span class=\"token arrow operator\">--|></span> Observer</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tSubject <span class=\"token arrow operator\">..|></span> Observer</pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;list></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>find<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Observer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Subject</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ConcreteSubject</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Subject</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">override</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    _status <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> _status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  list<span class=\"token operator\">&lt;</span>Observer <span class=\"token operator\">*</span><span class=\"token operator\">></span> _obList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">int</span> _status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">Observer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ConcreteObserver</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Observer</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token function\">ConcreteObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ConcreteObserver \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", value = \"</span> <span class=\"token operator\">&lt;&lt;</span> value <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  string _name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ConcreteObserver2</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Observer</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token function\">ConcreteObserver2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">_name</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ConcreteObserver2 \"</span> <span class=\"token operator\">&lt;&lt;</span> _name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", value = \"</span> <span class=\"token operator\">&lt;&lt;</span> value <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  string _name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">ConcreteSubject</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    _obList<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>pObserver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">ConcreteSubject</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>Observer <span class=\"token operator\">*</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pObserver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    _obList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>pObserver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">ConcreteSubject</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span>ob <span class=\"token operator\">:</span> _obList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    ob<span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>_status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>ConcreteSubject<span class=\"token operator\">></span> <span class=\"token function\">pSubject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ConcreteSubject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Observer<span class=\"token operator\">></span> <span class=\"token function\">pObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ConcreteObserver</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  unique_ptr<span class=\"token operator\">&lt;</span>Observer<span class=\"token operator\">></span> <span class=\"token function\">pObserver2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">ConcreteObserver2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lucy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>pObserver<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>pObserver2<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>pObserver2<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  pSubject<span class=\"token operator\">-></span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"优点-4\"><a class=\"anchor\" href=\"#优点-4\">#</a> 优点</h4>\n<ol>\n<li>观察者和被观察者是抽象耦合的</li>\n<li>建立一套触发机制。</li>\n</ol>\n<h4 id=\"缺点-4\"><a class=\"anchor\" href=\"#缺点-4\">#</a> 缺点</h4>\n<ol>\n<li>如果一个被观察者对象有很多的直接和间接的观察者的话，将所有的观察者都通知到会花费很多时间。</li>\n<li>如果在观察者和观察目标之间有循环依赖的话，观察目标会触发它们之间进行循环调用，可能导致 系统崩溃。</li>\n<li>观察者模式没有相应的机制让观察者知道所观察的目标对象是怎么发生变化的，而仅仅只是知道观 察目标发生了变化。</li>\n</ol>\n<h4 id=\"应用场景-3\"><a class=\"anchor\" href=\"#应用场景-3\">#</a> 应用场景</h4>\n<ol>\n<li>一个抽象模型有两个方面，其中一个方面发依赖于另外一个方面。将这些方面封装在独立的对象中 使它们可以各自独立地改变和复用。</li>\n<li>一个对象的改变将导致其它一个或多个对象发生改变，而不知道具体有多少对象将发生改变，可以 降低对象之间的耦合度。</li>\n<li>一个对象必须通知其他对象，而并不知道这些对象是谁。</li>\n<li>需要在系统中创建一个触发链，A 对象的行为将影响 B 对象，B 对象的行为将影响 C 对象……，可以使用观察者模式创建一种链式触发机制</li>\n</ol>\n",
            "tags": [
                "C/C++",
                "现代 C++",
                "C++"
            ]
        },
        {
            "id": "http://cwlrin.github.io/c-cpp/c-sql/SQL-%E4%BC%98%E5%8C%96/",
            "url": "http://cwlrin.github.io/c-cpp/c-sql/SQL-%E4%BC%98%E5%8C%96/",
            "title": "SQL 优化",
            "date_published": "2024-10-10T14:34:25.000Z",
            "content_html": "<h2 id=\"慢查询\"><a class=\"anchor\" href=\"#慢查询\">#</a> 慢查询</h2>\n<p>MySQL 的慢查询日志是一个用于记录执行时间超过特定阈值的 SQL 查询的工具，它能帮助快速定位和优化这些查询。</p>\n<p>启用慢查询日志需要修改 MySQL 配置文件，并设置执行时间阈值。启用后，所有超过这个时间的查询都会被记录到指定的日志文件中。</p>\n<p>通过分析这些日志，可以采取多种措施来优化 SQL 查询，包括改进索引、重写查询或调整数据库配置。</p>\n<h3 id=\"设置\"><a class=\"anchor\" href=\"#设置\">#</a> 设置</h3>\n<h4 id=\"默认设置\"><a class=\"anchor\" href=\"#默认设置\">#</a> 默认设置</h4>\n<p>慢查询日志的位置：慢查询日志默认处于未开启状态。</p>\n<pre><code class=\"language-mysql\">show variables like '%slow%'; # 获取慢查询日志的相关信息\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjRDVvUUF5Y1BKSHN1UEYwRTg2LXVjQmdaWkxXWHcyaVhCZ1dnZld5d29SYlE_ZT1OWEFnWWU.jpg\" alt=\"\" /></p>\n<p>慢查询 SQL 的时间阈值：默认阈值为 10 s。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'%long_query%'</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZSUJFYk1ZWndOUHJRSWxuTThZemF3QnZXcVM3bk5VSy1IaUdlR200dTlSOGc_ZT1zakVMR3E.jpg\" alt=\"\" /></p>\n<h4 id=\"修改配置\"><a class=\"anchor\" href=\"#修改配置\">#</a> 修改配置</h4>\n<p>开启慢查询文件</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> slow_query_log <span class=\"token operator\">=</span> <span class=\"token keyword\">on</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- show variables like '%slow%';</span></pre></td></tr></table></figure><p>更改耗时 SQL 阈值</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> long_query_time <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- show variables like '%long_query%';</span></pre></td></tr></table></figure><p>修改回默认设置 (测试完成之后，改回来)</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> slow_query_log <span class=\"token operator\">=</span> <span class=\"token keyword\">off</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">set</span> <span class=\"token keyword\">global</span> long_query_time <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /www/server/data/mysql-slow.log</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0Vlb29LOFZONnh4S3JDR1BrWFV0WmlvQkhuQkhQVVNLODhjeS1FaUtvMEdoV0E_ZT1vV1pOcEw.jpg\" alt=\"\" /></p>\n<p>日志的内容:</p>\n<pre><code>SQL 执行的时间\n用户名 、用户的IP信息、线程ID号\n执行花费的时间  执行获得锁的时间  获得的结果行数 扫描的数据行数\n这 SQL 执行的具体时间\n具体的 SQL 语句\n</code></pre>\n<h2 id=\"explain\"><a class=\"anchor\" href=\"#explain\">#</a> EXPLAIN</h2>\n<p>MySQL 中的  <code>EXPLAIN</code>  是一个用于分析查询语句执行计划的工具。它提供了关于查询如何执行的详细信息，包括数据如何被检索、使用的索引、表连接方式以及数据过滤过程等。通过分析  <code>EXPLAIN</code>  的输出，用户可以识别查询性能的瓶颈，比如全表扫描或未使用索引，并据此采取优化措施，如调整索引策略或重写查询逻辑。此外， <code>EXPLAIN</code>  也用于验证优化效果，通过比较优化前后的执行计划来确保优化措施的有效性。</p>\n<p>简而言之， <code>EXPLAIN</code>  以可视化的方式帮助我们理解 SQL 查询的执行状态和计划。</p>\n<p>而我们使用  <code>EXPLAIN</code>  只需要在待查询语句前面加上 explain 关键字，就可以了。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> c<span class=\"token punctuation\">.</span>class_name<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>student_name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> class c</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> student st <span class=\"token keyword\">ON</span> c<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span>class_id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWMldZY29QamVCUGhiQVFCZWlicWVjQjRuMlNmQWphVFkxTkNQSDRFeFQzNkE_ZT11YVlDTGg.jpg\" alt=\"\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXPLAIN</span> <span class=\"token keyword\">SELECT</span> c<span class=\"token punctuation\">.</span>class_name<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>student_name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> class c</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> student st <span class=\"token keyword\">ON</span> c<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span>class_id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"hhttps://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VlbFgwdHVXSG54RGdyRFRtc2M1aW93QnZGZXNhOVd5cF9wT2YwandBSzJFSnc_ZT1RbVdvNVM.jpg\" alt=\"\" /></p>\n<h3 id=\"id\"><a class=\"anchor\" href=\"#id\">#</a> id</h3>\n<p><code>EXPLAIN</code>  语句的输出结果中， <code>id</code>  列是一个重要的标识符，它为每个  <code>SELECT</code>  语句分配一个唯一的序列号。这个序列号可以帮助我们理解查询的逻辑执行顺序，即查询中各个部分的执行顺序。</p>\n<p><code>id</code>  值通常反映了查询的逻辑顺序，即查询的不同部分是如何组合在一起的。例如，如果一个查询包含多个表连接操作， <code>id</code>  值可以帮助我们理解这些连接操作是如何按顺序执行的。</p>\n<p>需要注意的是， <code>id</code>  值并不总是代表实际的物理执行顺序。在某些特殊情况下，如子查询、复杂表达式或特定类型的表连接（如嵌套循环连接），实际的执行顺序可能会与  <code>id</code>  值所指示的逻辑顺序不同。</p>\n<p><code>id</code>  相同，执行顺序由上至下。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUQmtQdE0wNGpCR3FJZG96OTFKcDl3QnF6QTBKQzFPbUdoM2ZNd2J3enZwSVE_ZT12Q3hTZUY.jpg\" alt=\"\" /></p>\n<p><code>id</code>  不同， <code>id</code>  值越大，优先级越高，越先被执行。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRMlZiMkpkdG9WTW1rNnZ1ekZCejVBQkJYeGN3ZDVZa01tS0oyRjhwbmxqa2c_ZT1iQ2VYT1Y.jpg\" alt=\"\" /></p>\n<p><code>id</code>  既有相同又有不同，不同的  <code>id</code>  值， <code>id</code>  值越大，优先级越高，越先被执行；相同的  <code>id</code>  值，按照从上到下的顺序执行。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUcXhLNUJuOWNwTnNQVVExTnlwM3M0QlotcW5IVzgyY1VYZlcyekFOSm1DM1E_ZT1oYjhDeTM.jpg\" alt=\"\" /></p>\n<h3 id=\"select_type\"><a class=\"anchor\" href=\"#select_type\">#</a> select_type</h3>\n<p><code>select_type</code>  表示  <code>select</code>  的查询类型，主要用于区分各种复杂的查询，例如普通查询、联合查询、子查询等。</p>\n<p><code>select_type</code>  的常见类型:</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SIMPLE</td>\n<td>简单的查询   (查询中不包含子查询或者 UNION)</td>\n</tr>\n<tr>\n<td>PRIMARY</td>\n<td>外层查询 (查询中若包含任何复杂的子部分)</td>\n</tr>\n<tr>\n<td>SUBQUERY</td>\n<td>子查询</td>\n</tr>\n<tr>\n<td>DERIVED</td>\n<td>派生表</td>\n</tr>\n<tr>\n<td>UNION</td>\n<td>一般属于第二个 SELECT,  出现在 UNION 之后，则被标记为 UNION</td>\n</tr>\n<tr>\n<td>UNION RESULT</td>\n<td>从 UNION 表获取结果的 SELECT</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSWnEwVGRNb2FKUGdITUpvSzJ2QXJZQmhUaWZjYWxjOFZtTE5VWTVzMkgtY3c_ZT1lUHprMGo.jpg\" alt=\"\" /></p>\n<h3 id=\"table\"><a class=\"anchor\" href=\"#table\">#</a> table</h3>\n<p><code>table</code>  表示表名。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSWnEwVGRNb2FKUGdITUpvSzJ2QXJZQmhUaWZjYWxjOFZtTE5VWTVzMkgtY3c_ZT1lUHprMGo.jpg\" alt=\"\" /></p>\n<h3 id=\"partitions\"><a class=\"anchor\" href=\"#partitions\">#</a> partitions</h3>\n<p><code>partitions</code>  分区：只对设置了分区的表有意义，暂时忽略。</p>\n<h3 id=\"type\"><a class=\"anchor\" href=\"#type\">#</a> type</h3>\n<p><code>type</code> :   <code>type</code>  字段的作用，用以显示 MySQL 决定使用哪种方式来访问表。</p>\n<p>对于  <code>type</code>  字段，从性能的好坏划分，可以分为:</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- system > const > eq_ref > ref > fulltext > ref_or_null > index_merge > unique_subquery > index_subquery > range > index > ALL</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>常见字段</th>\n<th style=\"text-align:left\">表示含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>system</strong></td>\n<td style=\"text-align:left\">系统表，或者极少量数据，往往不需要进行磁盘 IO</td>\n</tr>\n<tr>\n<td><strong>const</strong></td>\n<td style=\"text-align:left\">常量连接 (常数级时间复杂度，基本上是命中主键)</td>\n</tr>\n<tr>\n<td><strong>eq_ref</strong></td>\n<td style=\"text-align:left\">多表关联查询时，主键索引或唯一索引作为关联条件进行等值扫描</td>\n</tr>\n<tr>\n<td><strong>re f</strong></td>\n<td style=\"text-align:left\">非主键或者非唯一索引等值扫描</td>\n</tr>\n<tr>\n<td><strong>range</strong></td>\n<td style=\"text-align:left\">范围扫描</td>\n</tr>\n<tr>\n<td><strong>index</strong></td>\n<td style=\"text-align:left\">全索引扫描 (比如修改表中数据，导致所有索引结构变化)</td>\n</tr>\n<tr>\n<td><strong>ALL</strong></td>\n<td style=\"text-align:left\">全表扫描</td>\n</tr>\n<tr>\n<td>...</td>\n<td style=\"text-align:left\">...</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VkTkt4clRIUG5KUGdXY1FNWTg3ZHJ3QkE5Nk1vUlhSTFNGSjYxaUtIUkRNZlE_ZT1uZ2k1M3E.jpg\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUX3pkRF9URHpkRGdSTkJWN1djUlhRQlF0cmswcDI0Y05WeFR5RHNBLXA1akE_ZT1yVmZKekM.jpg\" alt=\"\" /></p>\n<h3 id=\"possible_keys\"><a class=\"anchor\" href=\"#possible_keys\">#</a> possible_keys</h3>\n<p><code>possible_keys</code>  列在  <code>EXPLAIN</code>  的输出中显示了 MySQL 优化器在查询过程中可能考虑使用的索引。这些索引是优化器在初步解析查询时认为可能有助于执行查询的索引。</p>\n<p><code>possible_keys</code>  列出了所有可能被用来优化查询的索引。这包括了查询中涉及的字段上定义的索引，以及复合索引中包含的索引。</p>\n<p>在查询优化的早期阶段，优化器会考虑所有可能的索引。然而，在优化过程的后期，优化器可能会基于统计信息和成本估算来决定哪些索引实际上是不需要的，因此有些索引可能不会被实际使用。</p>\n<p>最终是否使用这些索引取决于优化器的决策，优化器会根据查询的成本和效益来选择最佳的执行计划。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VkdUFoRGQ0RGtOSHBMSE42Z2JXN3U0QlFOWnlKYmJZRkotLXFHWGFrd0Z1UlE_ZT14b3FoWVE.jpg\" alt=\"\" /></p>\n<h3 id=\"key\"><a class=\"anchor\" href=\"#key\">#</a> key</h3>\n<p><code>key</code> : SQL 执行中实际使用到的索引，如果为  <code>NULL</code>  ，则没有使用索引。</p>\n<h3 id=\"key_len\"><a class=\"anchor\" href=\"#key_len\">#</a> key_len</h3>\n<p><code>key_len</code>  是  <code>EXPLAIN</code>  输出中的一个列，它表示查询中实际使用到的索引的长度（以字节为单位）。这个长度是根据索引中使用的字段类型和大小计算得出的。</p>\n<p>不同的数据类型有不同的长度，例如  <code>int</code>  类型通常是 4 字节， <code>long</code>  类型通常是 8 字节， <code>float</code>  类型通常是 4 字节。</p>\n<h3 id=\"ref\"><a class=\"anchor\" href=\"#ref\">#</a> ref</h3>\n<p><code>ref</code> : 表示将哪个字段或常量和  <code>key</code>  列所使用的字段进行比较。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTemlJcmpXYlpWTHRxdTB0WFpBQTNzQjJGTkFDc3VZSC1YRkRUalVWVXlDVXc_ZT1VWGQ2NVE.jpg\" alt=\"\" /></p>\n<h3 id=\"filtered\"><a class=\"anchor\" href=\"#filtered\">#</a> filtered</h3>\n<p><code>filtered</code>  表示数据库估计在应用查询条件后，表中剩余行数的百分比。</p>\n<p>如果  <code>rows</code>  为 1000， <code>filtered</code>  为 50%，则预计有 500 行满足查询条件。 <code>filtered</code>  值越大，说明索引过滤效果越好；值越小，说明索引过滤效果越差，甚至可能未利用索引。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaRVROVTVzSk1aS29WekNZcW9HRnRjQkkxamw5THNfdFJaT0VydVpPSlZOREE_ZT1pZEY2dk8.jpg\" alt=\"\" /></p>\n<h3 id=\"extra\"><a class=\"anchor\" href=\"#extra\">#</a> Extra</h3>\n<p><code>Extra</code> : 包含不适合在其他列中显示但十分重要的额外信息 (附加信息) , 该列显示了 MySQL 在查询过程中的一些详细信息。</p>\n<table>\n<thead>\n<tr>\n<th><strong>值</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Using filesort</td>\n<td style=\"text-align:left\">说明 mysql 会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取，也称为文件排序.</td>\n</tr>\n<tr>\n<td>Using temporary</td>\n<td style=\"text-align:left\">使了用临时表保存中间结果，MySQL 在对查询结果排序时使用临时表。</td>\n</tr>\n<tr>\n<td>USING index</td>\n<td style=\"text-align:left\">是否用了覆盖索引</td>\n</tr>\n<tr>\n<td>Using where</td>\n<td style=\"text-align:left\">表明使用了 where 过滤</td>\n</tr>\n<tr>\n<td>Impossible where</td>\n<td style=\"text-align:left\">where 子句的值总是 false，不能用来获取任何元组</td>\n</tr>\n<tr>\n<td>...</td>\n<td style=\"text-align:left\">...</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUalJ2VDViV1ZKR2tBRnpWT0hrSm1BQkJadl9xZTJPTFZHakx1R09KS0RvUWc_ZT1WdUFnNnQ.jpg\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVb3JiRDZaX1FGRG1Hc1lVVldpLW1zQm1jUUJXME5BalNZa1pUazVnVzNtcnc_ZT1qcEdJaW0.jpg\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VmUTdXbHI2dVdsTnNBYlQ3N3hkTUZZQkNWbW5nUXNPdmtXVjUyekZlNGsxNmc_ZT12czZxTVE.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "C/C++",
                "数据库",
                "SQL"
            ]
        },
        {
            "id": "http://cwlrin.github.io/misc/log4cpp-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "url": "http://cwlrin.github.io/misc/log4cpp-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "title": "log4cpp 简单使用",
            "date_published": "2024-09-09T08:56:41.000Z",
            "content_html": "<h2 id=\"日志系统\"><a class=\"anchor\" href=\"#日志系统\">#</a> 日志系统</h2>\n<h3 id=\"日志系统的重要性\"><a class=\"anchor\" href=\"#日志系统的重要性\">#</a> 日志系统的重要性</h3>\n<ol>\n<li><strong>错误跟踪</strong>：当系统出现问题时，日志是诊断问题的重要工具。通过分析日志，可以追踪错误发生的原因和上下文。</li>\n<li><strong>安全审计</strong>：日志可以记录安全相关的事件，如登录尝试、权限变更等，这对于检测和响应安全威胁至关重要。</li>\n<li><strong>性能监控</strong>：日志可以帮助监控系统性能，通过分析日志中的性能指标，可以发现潜在的性能瓶颈。</li>\n<li><strong>系统维护</strong>：日志提供了系统运行的历史记录，有助于理解系统的运行模式和预测可能的故障。</li>\n</ol>\n<h3 id=\"日志系统的分类\"><a class=\"anchor\" href=\"#日志系统的分类\">#</a> 日志系统的分类</h3>\n<ol>\n<li><strong>业务日志</strong>：记录业务操作的详细情况，如交易处理、订单状态变更等，有助于业务分析和问题追踪。</li>\n<li><strong>系统日志</strong>：记录系统运行时的关键信息，如启动、关闭、错误、警告等，有助于系统维护和故障排查。</li>\n</ol>\n<h3 id=\"日志系统的设计原则\"><a class=\"anchor\" href=\"#日志系统的设计原则\">#</a> 日志系统的设计原则</h3>\n<ol>\n<li><strong>性能影响最小化</strong>：日志系统应该设计为对系统性能的影响尽可能小，避免成为性能瓶颈。</li>\n<li><strong>可配置性</strong>：日志系统应该允许配置不同的日志级别和输出格式，以适应不同的需求。</li>\n<li><strong>可靠性</strong>：日志系统本身应该是高度可靠的，确保在任何情况下都能记录日志。</li>\n<li><strong>易于查询和分析</strong>：日志应该易于查询和分析，可以考虑使用专门的日志分析工具。</li>\n<li><strong>安全和隐私</strong>：确保日志中不包含敏感信息，遵守相关的数据保护法规。</li>\n<li><strong>灵活的存储和管理</strong>：日志应该可以存储在不同的介质上，并提供灵活的管理策略，如日志轮转、归档和删除。</li>\n</ol>\n<h2 id=\"日志系统的设计\"><a class=\"anchor\" href=\"#日志系统的设计\">#</a> 日志系统的设计</h2>\n<h3 id=\"日志系统的设计原则-2\"><a class=\"anchor\" href=\"#日志系统的设计原则-2\">#</a> 日志系统的设计原则</h3>\n<p>在设计一个日志系统时，应该考虑以下几个关键点：</p>\n<ol>\n<li><strong>灵活性</strong>：日志系统应该能够灵活地适应不同的需求，包括不同的日志级别、格式和输出目标。</li>\n<li><strong>可扩展性</strong>：随着系统的发展，日志系统应该能够容易地扩展新的功能和特性。</li>\n<li><strong>性能</strong>：日志系统的性能影响应该最小化，以避免对主应用程序的性能造成负面影响。</li>\n<li><strong>可靠性</strong>：日志系统应该是可靠的，即使在高负载或异常情况下也能保证日志数据不丢失。</li>\n<li><strong>易于配置和使用</strong>：应该能够容易地配置和使用日志系统，而不需要深入了解其内部实现。</li>\n</ol>\n<h3 id=\"日志系统的四个主要部分\"><a class=\"anchor\" href=\"#日志系统的四个主要部分\">#</a> 日志系统的四个主要部分</h3>\n<ol>\n<li><strong>记录器</strong>：负责捕获和记录日志的原始信息，如时间戳、日志级别、发生位置和线程信息。</li>\n<li><strong>过滤器</strong>：根据预设的条件（如日志级别、日志内容等）来决定是否记录某条日志。</li>\n<li><strong>格式化器</strong>：将日志信息格式化为指定的格式，如日期、时间、日志级别和消息内容的组合。</li>\n<li><strong>输出器</strong>：负责将格式化后的日志信息输出到不同的目的地，如控制台、文件、数据库或远程日志服务器。</li>\n</ol>\n<p>下面以一条日志的生命周期为例说明日志库是怎么工作的。</p>\n<p>一条日志的生命周期：</p>\n<ol>\n<li>产生：  <code>info(“log information.”)</code> ；</li>\n<li>经过记录器，记录器去获取日志发生的时间、位置、线程信息等等信息；</li>\n<li>经过过滤器，决定是否记录；</li>\n<li>经过格式化器处理成设定格式后传递给输出器。例如输出  <code>2018-3-22 10:00:00 [info] log information.</code>  这样格式的日志到文件中。日志的输出格式由格式化器实现，输出目的地则由输出器决定；</li>\n<li>这条日志信息生命结束。</li>\n</ol>\n<h2 id=\"log4cpp-安装\"><a class=\"anchor\" href=\"#log4cpp-安装\">#</a> log4cpp 安装</h2>\n<h3 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h3>\n<p>下载压缩包，下载地址：<a href=\"https://sourceforge.net/projects/log4cpp/files/Windows\">https://sourceforge.net/projects/log4cpp/files/Windows</a></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTenZOS3dHYzZ4Tmd0SnlTcTNMRjVFQkozbG1yT3lVQWJHelJTbVpsMlZCSmc_ZT1NYUdMcDg.jpg\" alt=\"\" /></p>\n<p>安装：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">tar</span> xzvf log4cpp-1.1.4rc3.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">cd</span> log4cpp</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>./configure  <span class=\"token comment\"># 进行自动化构建，自动生成 makefile</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span> <span class=\"token comment\"># 安装，把头文件和库文件拷贝到系统路径下</span></pre></td></tr></table></figure><p>安装后，默认头文件路径为： <code>/usr/local/include/log4cpp</code> ，默认 lib 库路径为： <code>/usr/local/lib</code></p>\n<p>打开 log4cpp 官网 <a href=\"https://log4cpp.sourceforge.net/\">Log for C++ Project (sourceforge.net)</a></p>\n<p>拷贝 Simple example 的内容，编译运行</p>\n<p>编译指令： <code>g++ log4cppTest.cc -llog4cpp -lpthread</code></p>\n<p>运行时可能会报错：</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSLTM1QmE3aC1SSXA4OVBDNThLdllVQkRva2dPcnNnVW5yZnRQTG85Z2MzaVE_ZT1TeVdldVk.jpg\" alt=\"\" /></p>\n<p>解决方法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /etc</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> ld.so.conf</pre></td></tr></table></figure><p>将默认的 lib 库路径写入，再重新加载</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VXeHl0aVZ0cElKQ3ZJTktmbjZsM3RjQjVqOTQ4VjlfS2w1cnV2bDR2MmlEMkE_ZT1YZUUyTko.jpg\" alt=\"\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>shell</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> ldconfig</pre></td></tr></table></figure><p>让动态链接库为系统所共享</p>\n<p>ld.so.cache 执行了  <code>$ sudo ldconfig</code>  之后，会更新该缓存文件，会将所有动态库信息写入到该文件。当可执行程序需要加载相应动态库时，会从这里查找。</p>\n<p>完成这些操作后，再使用上面的编译指令去编译示例代码。</p>\n<h3 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h3>\n<p>参考：<a href=\"https://blog.csdn.net/cpp_learner/article/details/128738417\">C++ Log4cpp 跨平台日志库使用记录 (Window 与 Linux)</a></p>\n<h2 id=\"log4cpp-的核心组件\"><a class=\"anchor\" href=\"#log4cpp-的核心组件\">#</a> log4cpp 的核心组件</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Appender.hh\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/BasicLayout.hh\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Category.hh\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/FileAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Layout.hh\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/OstreamAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Priority.hh\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> log4cpp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 基类指针指向派生类对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">/* Appender * appender1 = new OstreamAppender(\"console\", &amp;std::cout); */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 创建输出器对象</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// OstreamAppender 的构造函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// 第一个参数代表目的地名称（随便写）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 第二个参数是一个 ostream*，真正决定了日志的目的地</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  OstreamAppender<span class=\"token operator\">*</span> appender1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">OstreamAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">// 输出器绑定布局</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  appender1<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">BasicLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">// 创建输出器对象</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// FileAppender 的构造函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">// 第一个参数代表目的地名称（随便写）</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">// 第二个参数代表日志所保存到的文件名</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  FileAppender<span class=\"token operator\">*</span> appender2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">FileAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"program.log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 输出器绑定布局</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  appender2<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">BasicLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">// 创建根节点级别的 Category 对象</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token comment\">// 在程序中以引用的形式使用</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  Category<span class=\"token operator\">&amp;</span> root <span class=\"token operator\">=</span> <span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token comment\">// 设置系统的优先级</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>Priority<span class=\"token double-colon punctuation\">::</span>WARN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token comment\">// 添加目的地 (绑定输出器)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>appender1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">// 创建叶子节点级别的 Category 对象（root 下一级的）</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token comment\">// 会继承父节点的优先级和目的地</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token comment\">// 前一个 sub1 是引用的名称，供程序员在代码中使用</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token comment\">// 后一个 sub1 (getInstance 的参数) 代表日志来源</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  Category<span class=\"token operator\">&amp;</span> sub1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token comment\">// 也可以重新设置门槛（系统优先级）</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>Priority<span class=\"token double-colon punctuation\">::</span>ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>appender2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token comment\">/* sub1.setAdditivity (false);// 不继承父节点的目的地 */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token comment\">//root 的子节点 </span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token comment\">/* Category&amp; sub2 = Category::getInstance(\"sub2\"); */</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token comment\">//sub1 的子节点</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token comment\">/* Category&amp; sub11 = Category::getInstance(\"sub1.sub11\"); */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token comment\">// 写入日志</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token comment\">// 函数的名称直接对应该日志信息的优先级</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">//  use of functions for logging messages</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root warn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">crit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1 crit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1 error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1 warn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token comment\">// printf-style for logging variables</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d + %d == %s ?\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token comment\">// use of streams for logging messages</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  root <span class=\"token operator\">&lt;&lt;</span> Priority<span class=\"token double-colon punctuation\">::</span>ERROR <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Streamed root error\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  root <span class=\"token operator\">&lt;&lt;</span> Priority<span class=\"token double-colon punctuation\">::</span>INFO <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Streamed root info\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  sub1 <span class=\"token operator\">&lt;&lt;</span> Priority<span class=\"token double-colon punctuation\">::</span>ERROR <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Streamed sub1 error\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  sub1 <span class=\"token operator\">&lt;&lt;</span> Priority<span class=\"token double-colon punctuation\">::</span>WARN <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Streamed sub1 warn\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token comment\">// or this way:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">errorStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Another streamed error\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"日志目的地appender\"><a class=\"anchor\" href=\"#日志目的地appender\">#</a> 日志目的地（Appender）</h3>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWWDYzY0xJMjJST2hVUllxOExzYmp3QkxfMGJER3NWWDh6R1o3QnpwWmF5YWc_ZT1HTFRZQTY.jpg\" alt=\"\" /></p>\n<h4 id=\"ostreamappender-类\"><a class=\"anchor\" href=\"#ostreamappender-类\">#</a>  <code>OstreamAppender</code>  类</h4>\n<p><code>OstreamAppender</code>  类的构造函数在 log4cpp 库中用于初始化日志记录器，以便将日志消息输出到一个指定的输出流（ostream）。在 C++ 中，ostream 是一个用于输出数据到不同目的地（如标准输出、文件等）的类。</p>\n<p>在 log4cpp 的  <code>OstreamAppender</code>  类中，构造函数通常具有以下形式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">OstreamAppender</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OstreamAppender</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>ostream<span class=\"token operator\">*</span> target<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol>\n<li><strong>name</strong>: 这是一个  <code>std::string</code>  类型的参数，用于指定日志记录器的名称。这个名称用于在配置文件中标识这个特定的日志记录器。</li>\n<li><strong>target</strong>: 这是一个指向  <code>std::ostream</code>  的指针，指向你想要日志消息输出到的目标。这可以是  <code>std::cout</code> （标准输出）， <code>std::cerr</code> （标准错误），或者指向一个文件的  <code>std::ofstream</code>  对象。</li>\n</ol>\n<h4 id=\"fileappender-类\"><a class=\"anchor\" href=\"#fileappender-类\">#</a>  <code>FileAppender</code>  类</h4>\n<p><code>FileAppender</code>  类在 log4cpp 库中用于将日志信息输出到文件。这个类提供了两个构造函数，允许你以不同的方式初始化日志文件的输出。</p>\n<p>构造函数 1</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">FileAppender</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FileAppender</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> append<span class=\"token punctuation\">,</span> mode_t mode <span class=\"token operator\">=</span> <span class=\"token number\">00644</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数:</p>\n<ul>\n<li><code>name</code> : 日志记录器的名称。</li>\n<li><code>fileName</code> : 日志信息将要写入的文件名。</li>\n<li><code>append</code> : 布尔值，如果为  <code>true</code> ，则日志信息将追加到文件末尾；如果为 false，则文件会被截断（即原有内容会被删除）。</li>\n<li><code>mode</code> : 文件的权限模式，通常使用八进制表示法。默认值为 00644，表示文件所有者具有读写权限，而组用户和其他用户只有读权限。</li>\n</ul>\n<p>构造函数 2</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">FileAppender</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FileAppender</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> std<span class=\"token double-colon punctuation\">::</span>FILE<span class=\"token operator\">*</span> fd<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数:</p>\n<ul>\n<li><code>name</code> : 日志记录器的名称。</li>\n<li><code>fd</code> : 已经打开的文件描述符，日志信息将写入到这个文件描述符指向的文件。</li>\n</ul>\n<p>功能说明</p>\n<ul>\n<li><strong>构造函数 1</strong>: 这个构造函数是最常见的用法，它允许你指定日志文件的名称、是否追加以及文件的权限模式。这种方式下， <code>FileAppender</code>  会负责打开和关闭文件。</li>\n<li><strong>构造函数 2</strong>: 这个构造函数允许你传递一个已经打开的文件描述符。这种方式下， <code>FileAppender</code>  不会关闭文件，因为文件的打开和关闭由调用者控制。这种方式通常用于文件已经被外部程序打开，并且希望  <code>FileAppender</code>  直接使用这个文件描述符进行日志写入的场景。</li>\n</ul>\n<h4 id=\"rollingfileappender-类\"><a class=\"anchor\" href=\"#rollingfileappender-类\">#</a>  <code>RollingFileAppender</code>  类</h4>\n<p><code>RollingFileAppender</code>  的构造函数用于初始化日志文件滚动记录器。构造函数允许你指定日志文件的名称、最大文件大小、备份文件数量、是否追加到现有文件以及文件的权限。</p>\n<p>以下是  <code>RollingFileAppender</code>  构造函数的一般形式：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">RollingFileAppender</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RollingFileAppender</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> layout<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  size_t maxFileSize <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> maxBackupIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">bool</span> append <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  mode_t mode <span class=\"token operator\">=</span> <span class=\"token number\">00644</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>参数解释</strong>：</p>\n<ol>\n<li><code>filename</code> : 日志文件的名称。</li>\n<li><code>layout</code> : 用于格式化日志消息的布局对象。</li>\n<li><code>maxFileSize</code> : 日志文件达到这个大小时，将触发滚动。单位通常是字节。</li>\n<li><code>maxBackupIndex</code> : 指定可以保留的旧日志文件的数量。例如，如果设置为 3，则会保留 3 个旧文件。</li>\n<li><code>append</code> : 布尔值，表示是否追加到现有日志文件。如果为 true，则追加；如果为 false，则覆盖。</li>\n<li><code>mode</code> : 用于设置文件权限的模式。这是一个位掩码，用于定义文件的权限。</li>\n</ol>\n<p><strong>构造函数的作用</strong>：</p>\n<ul>\n<li><strong>初始化日志文件</strong>：根据提供的文件名创建或打开日志文件。</li>\n<li><strong>设置布局</strong>：使用提供的布局对象来格式化日志消息。</li>\n<li><strong>设置滚动策略</strong>：根据  <code>maxFileSize</code>  和  <code>maxBackupIndex</code>  参数设置滚动策略。</li>\n<li><strong>设置文件模式</strong>：根据  <code>mode</code>  参数设置文件的权限。</li>\n</ul>\n<p>当日志文件达到预设的大小限制时，旧的日志文件会被重命名，新的日志文件被创建来继续记录日志的过程。这种机制有助于控制日志文件的大小，避免无限制地增长，同时保留历史日志记录以供分析。</p>\n<p>以下是滚动机制的详细步骤：</p>\n<ol>\n<li><strong>检查文件大小</strong>：每当有日志消息写入时， <code>RollingFileAppender</code>  会检查当前日志文件的大小。</li>\n<li><strong>触发滚动</strong>：如果当前日志文件的大小超过了  <code>setMaxFileSize</code>  方法设置的最大文件大小，就会触发滚动。</li>\n<li><strong>重命名旧文件</strong>：触发滚动后， <code>RollingFileAppender</code>  会将当前的日志文件重命名。重命名的规则通常是在文件名后面添加一个后缀，后缀通常是数字，表示这是第几个备份文件。例如，如果  <code>maxBackupIndex</code>  设置为 3，那么可能会有 example.log.1、example.log.2、example.log.3 这样的文件。</li>\n<li><strong>删除最旧的备份</strong>：如果有超过  <code>maxBackupIndex</code>  设置数量的备份文件，最旧的备份文件会被删除，以释放空间。</li>\n<li><strong>创建新文件</strong>：滚动完成后，会创建一个新的日志文件，文件名与原始日志文件相同，用于继续记录新的日志消息。</li>\n<li><strong>继续记录</strong>：新的日志文件创建后，日志记录操作会继续在这个新文件中进行。</li>\n</ol>\n<h3 id=\"日志布局layout\"><a class=\"anchor\" href=\"#日志布局layout\">#</a> 日志布局（Layout）</h3>\n<p>示例代码中使用的是  <code>BasicLayout</code> ，也就是默认的日志布局，这样一条日志最开始的信息就是日志产生时距离 1970.1.1 的秒数，不方便观察。</p>\n<p>实际使用时可以用  <code>PatrrenLayout</code>  对象来定制化格式，类似于  <code>printf</code>  的格式化输出</p>\n<p>在 log4cpp 中， <code>PatternLayout</code>  类的构造函数用于初始化日志的模式布局。这种布局方式允许你定义日志消息的格式，这通常包括日期、日志级别、消息内容等。</p>\n<p><strong>无参构造函数</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">PatternLayout</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这个构造函数不接受任何参数。它将使用默认的日志模式。默认模式通常是  <code>%m%n</code> ，其中  <code>%m</code>  表示日志消息， <code>%n</code>  是行分隔符。</p>\n<p><strong>带参数的构造函数</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">PatternLayout</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">&amp;</span> pattern<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这个构造函数接受一个字符串参数，允许你在创建 PatternLayout 对象时直接指定日志的格式。这里的 pattern 参数是你希望日志消息遵循的模式。</p>\n<p>参数解释：</p>\n<ol>\n<li><code>%c</code>  - 日志事件的类别（logger name）\n<ul>\n<li>例如： <code>%c&#123;1&#125;</code>  表示仅包含 logger name 的第一个字符。</li>\n</ul>\n</li>\n<li><code>%d</code>  - 日志事件的日期\n<ul>\n<li>例如： <code>%d&#123;%a %b %d %H:%M:%S %Y&#125;</code>  表示按星期、月份、日期、小时、分钟、秒、年份的格式输出日期。</li>\n</ul>\n</li>\n<li><code>%m</code>  - 日志事件的消息\n<ul>\n<li>表示日志消息的文本。</li>\n</ul>\n</li>\n<li><code>%n</code>  - 平台特定的行分隔符\n<ul>\n<li>在 Unix/Linux 上是换行符  <code>\\n</code> ，在 Windows 上是回车换行  <code>\\r\\n</code> 。</li>\n</ul>\n</li>\n<li><code>%p</code>  - 日志事件的优先级（日志级别）\n<ul>\n<li>例如： <code>DEBUG</code> 、 <code>INFO</code> 、 <code>WARN</code> 、 <code>ERROR</code> 、 <code>FATAL</code> 。</li>\n</ul>\n</li>\n<li><code>%r</code>  - 自日志事件创建到当前时间的毫秒数。</li>\n<li><code>%t</code>  - 当前线程的名字。</li>\n<li><code>%x</code>  - 与当前线程关联的 NDC（Nested Diagnostic Context）。</li>\n<li><code>%%</code>  - 字面上的百分号（%）</li>\n</ol>\n<p>转换模式还可以包含自定义的日期格式，使用 % d 后跟花括号 {} 内的格式字符串。例如：</p>\n<ul>\n<li><code>%d&#123;HH: mm: ss&#125;</code>  - 24 小时制的小时、分钟和秒。</li>\n<li><code>%d&#123;dd MMM yyyy&#125;</code>  - 日、月份缩写和年份。</li>\n</ul>\n<p>转换模式还可以包含可选的修饰符，如：</p>\n<ul>\n<li><code>%-5c</code>  - 左对齐，至少占 5 个字符的宽度。</li>\n<li><code>%5c</code>  - 右对齐，至少占 5 个字符的宽度。</li>\n<li><code>%.2c</code>  - 截断，取 logger name 的前两个字符。</li>\n</ul>\n<p>转换模式还可以包含可选的格式化信息，如：</p>\n<ul>\n<li><code>%d&#123;%a %b %d %H:%M:%S %Y&#125;</code>  - 完整的日期和时间。</li>\n</ul>\n<p>使用这些转换符号，你可以创建非常灵活的日志格式，以满足你的特定需求。例如，一个常见的日志格式可能是：</p>\n<pre><code>%d&#123;%Y-%m-%d %H:%M:%S&#125; [%c] %-5p %m%n\n</code></pre>\n<p>这个格式将输出如下的日志行：</p>\n<pre><code>2024-09-25 14:35:59 [com.example.MyLogger] INFO  This is a log message.\n</code></pre>\n<p>其中：</p>\n<ul>\n<li><code>%d&#123;%Y-%m-%d %H:%M:%S&#125;</code>  输出日期和时间。</li>\n<li><code>[%c]</code>  输出日志类别（logger name）。</li>\n<li><code>%-5p</code>  输出日志级别，至少占 5 个字符的宽度。</li>\n<li><code>%m</code>  输出日志消息。</li>\n<li><code>%n</code>  输出行分隔符。</li>\n</ul>\n<p>注意：当日志系统有多个日志目的地时，每一个目的地  <code>Appender</code>  都需要设置一个布局  <code>Layout</code> （一对一关系）</p>\n<h3 id=\"日志记录器category\"><a class=\"anchor\" href=\"#日志记录器category\">#</a> 日志记录器（Category）</h3>\n<p>在 log4cpp 库中，创建  <code>Category</code>  对象的过程可以通过以下步骤进行：</p>\n<ol>\n<li>\n<p><strong>创建根类别</strong>：首先，使用  <code>getRoot</code>  方法创建一个根类别对象。这个对象是日志系统的顶级类别，可以为其设置日志优先级和附加器（Appender）。</p>\n</li>\n<li>\n<p><strong>设置根类别属性</strong>：接下来，可以为根类别对象设置优先级和附加器，这些设置将影响所有未明确设置优先级和附加器的子类别。</p>\n</li>\n<li>\n<p><strong>创建子类别</strong>：然后，使用  <code>getInstance</code>  方法创建子类别对象。这些子类别对象将继承根类别的优先级和附加器设置，但也可以在需要时重写这些设置。</p>\n</li>\n<li>\n<p><strong>修改子类别属性</strong>：子类别对象可以进一步修改其优先级和附加器，以满足特定模块的日志需求。</p>\n</li>\n<li>\n<p><strong>隐式创建根对象</strong>：如果未显式创建根对象，直接使用  <code>getInstance</code>  方法创建子类别时，log4cpp 会隐式地创建一个根对象。</p>\n</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRNmdxZDlJajJwSmttSXJPbll4UXMwQjZjYWJLOUtYM0J1MUxsbkowSS1LLVE_ZT12eEhsNE8.jpg\" alt=\"image-20231124171810154.png\" /></p>\n<p><strong>子类别继承父类别信息</strong>：子类别可以继承父类别的优先级和附加器信息。</p>\n<p><strong>示例代码</strong>：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建根类别对象并设置优先级和附加器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>log4cpp<span class=\"token double-colon punctuation\">::</span>Category <span class=\"token operator\">&amp;</span>root <span class=\"token operator\">=</span> log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>root<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>log4cpp<span class=\"token double-colon punctuation\">::</span>Priority<span class=\"token double-colon punctuation\">::</span>WARN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>appender1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 创建子类别对象并添加附加器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>log4cpp<span class=\"token double-colon punctuation\">::</span>Category <span class=\"token operator\">&amp;</span>sub1 <span class=\"token operator\">=</span> log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传入的字符串 sub1 就会是日志中记录下的日志来源</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>appender2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>简化创建子类别</strong>：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 一行代码创建子类别对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>log4cpp<span class=\"token double-colon punctuation\">::</span>Category<span class=\"token operator\">&amp;</span> sub1 <span class=\"token operator\">=</span> log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"salesDepart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sub1<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>log4cpp<span class=\"token double-colon punctuation\">::</span>Priority<span class=\"token double-colon punctuation\">::</span>WARN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>appender1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>注意事项</strong>：</p>\n<ul>\n<li><code>sub1</code>  是一个引用，用于操作  <code>Category</code>  对象，包括设置优先级、添加附加器和记录日志。</li>\n<li><code>getInstance</code>  的参数  <code>salesDepart</code>  定义了日志信息中的类别名称，也就是日志的来源，对应布局中的  <code>%c</code>  占位符。</li>\n<li>通常，为了清晰地识别日志来源，子类别的名称应与  <code>getInstance</code>  的参数保持一致。</li>\n</ul>\n<h3 id=\"日志优先级priority\"><a class=\"anchor\" href=\"#日志优先级priority\">#</a> 日志优先级（Priority）</h3>\n<p>在 log4cpp 日志系统中，我们关注两类优先级：一是日志记录器（Category 对象）的优先级，二是具体日志条目的优先级。设置 Category 对象时，需要指定其优先级。当记录一条日志时，如使用  <code>logger.debug(&quot;this is a debug message&quot;)</code> ，这条日志的优先级即为 DEBUG 级别。简而言之：</p>\n<p><strong>日志系统有一个阈值优先级 A，日志条目有一个指定优先级 B。</strong></p>\n<p><strong>只有当 B 大于或等于 A 时，该日志条目才会被记录；如果 B 低于 A，则该日志条目将被忽略。</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">LOG4CPP_EXPORT</span> Priority <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">typedef</span> <span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    EMERG <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    FATAL <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ALERT <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    CRIT <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ERROR <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    WARN <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    NOTICE <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    INFO <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    DEBUG <span class=\"token operator\">=</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    NOTSET <span class=\"token operator\">=</span> <span class=\"token number\">800</span> <span class=\"token comment\">// 此值不代表有效的优先级</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> PriorityLevel<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 数值越小，表示优先级越高；数值越大，表示优先级越低</span></pre></td></tr></table></figure><h2 id=\"定制日志系统\"><a class=\"anchor\" href=\"#定制日志系统\">#</a> 定制日志系统</h2>\n<p>模仿示例代码的形式去设计定制化的日志系统：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/OstreamAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/FileAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/RollingFileAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Category.hh\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Priority.hh\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/PatternLayout.hh\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> log4cpp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// 1. 创建布局对象</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>ptn1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  ptn1<span class=\"token operator\">-></span><span class=\"token function\">setConversionPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c [%p] %m%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>ptn2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ptn2<span class=\"token operator\">-></span><span class=\"token function\">setConversionPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c [%p] %m%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>ptn3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  ptn3<span class=\"token operator\">-></span><span class=\"token function\">setConversionPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c [%p] %m%n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// 2. 创建输出器对象</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>pos <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">new</span> <span class=\"token function\">OstreamAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  pos<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>ptn1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>pfile <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">new</span> <span class=\"token function\">FileAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"log.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  pfile<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>ptn2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">auto</span> pRoll <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">RollingFileAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rolling\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"res.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token comment\">// 输出器与布局绑定</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  pRoll<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>ptn3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token comment\">// 3. 创建记录器对象</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token comment\">// 引用名 salesDepart 是在代码中使用的，表示 Category 对象</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">// 参数中 salesDepart 是获取冂志来源时返回的记录器的名字</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token comment\">// 一般让两者相同，方便理解</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  Category <span class=\"token operator\">&amp;</span> sub1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token comment\">// 4. 设置优先级</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>Priority<span class=\"token double-colon punctuation\">::</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">// 5. 设置输出器</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>pfile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>pRoll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token comment\">// 6. 写入日志</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">--</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">emerg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is an emerg msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a fatal msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is an alert msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">crit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a crit msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is an error msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a warn msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">notice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a notice msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is an info msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sub1<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a debug msg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token comment\">// 7. 回收资源</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在设计日志系统时多次使用了  <code>new</code>  语句，这些核心组件的构造函数具体细节我们也并不清楚，但可以知道的是这个过程必然会申请资源，所以规范的写法在日志系统退出时要调用  <code>shutdown</code>  回收资源。</p>\n<h2 id=\"log4cpp-的单例实现\"><a class=\"anchor\" href=\"#log4cpp-的单例实现\">#</a> log4cpp 的单例实现</h2>\n<p>参考：<a href=\"https://blog.csdn.net/weixin_43679037/article/details/116889618\">C++ day07 log4cpp 的实际使用习题 (有答案)</a></p>\n<p>MyLogger.h</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">__MY_LOGGER_H__</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">__MY_LOGGER_H__</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Category.hh\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> log4cpp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mylogger</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 单例类创建函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">static</span> Mylogger <span class=\"token operator\">*</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 释放单例类</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 警告</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// 错误</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 检测</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// 通知</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token function\">Mylogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// 析构函数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">Mylogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">static</span> Mylogger <span class=\"token operator\">*</span>_pInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">//category，定义错误等级</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  Category <span class=\"token operator\">&amp;</span>_mycat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// 宏定义，用于绑定输出错误日志的函数及错误行号</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">prefix</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\" \"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>__FUNCTION__<span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token expression\"><span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\" \"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__LINE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span></span><span class=\"token string\">\" \"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token expression\"><span class=\"token operator\">+</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">// 定义具体错误类型</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">LogError</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>  <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">LogInfo</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>  <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">LogWarn</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>  <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">LogDebug</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>  <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// __MY_LOGGER_H__</span></span></pre></td></tr></table></figure><p>MyLogger.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MyLogger.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/PatternLayout.hh\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/OstreamAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/FileAppender.hh\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"log4cpp/Priority.hh\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Mylogger <span class=\"token operator\">*</span>Mylogger<span class=\"token double-colon punctuation\">::</span>_pInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Mylogger <span class=\"token operator\">*</span><span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">==</span> _pInstance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    _pInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Mylogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> _pInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_pInstance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">delete</span> _pInstance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    _pInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mylogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token function\">_mycat</span><span class=\"token punctuation\">(</span>log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mycat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token comment\">// 日志的格式</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>ppl1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  ppl1<span class=\"token operator\">-></span><span class=\"token function\">setConversionPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c [%p] %m %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>ppl2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">PatternLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  ppl2<span class=\"token operator\">-></span><span class=\"token function\">setConversionPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %c [%p] %m %n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token comment\">// 日志的目的地</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>poa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">OstreamAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OstreamAppender123\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>cout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出到终端</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  poa<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>ppl1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token comment\">// 输出到日志文件</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>pfa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">FileAppender</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FileAppender123\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wd.log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  pfa<span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>ppl2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>poa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">addAppender</span><span class=\"token punctuation\">(</span>pfa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token comment\">// DEBUG 及以上危险等级的日志都要输出</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  _mycat<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>Priority<span class=\"token double-colon punctuation\">::</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">// 析构函数就是执行 shutdown () 文件，整体退出</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token operator\">~</span><span class=\"token function\">Mylogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>TestLog.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MyLogger.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 测试用，在实际中不用</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>string <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  string s1 <span class=\"token operator\">=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>__FUNCTION__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__LINE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">return</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 实际使用日志返利</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  Mylogger <span class=\"token operator\">*</span>ps1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  ps1<span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"helloworld\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"helloworld\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"helloworld\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token class-name\">Mylogger</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"helloworld\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pstr <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">int</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token comment\">// 可变参数输出</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, %d, %s %d\\n\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">,</span> pstr<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">//test2 在实际中不用</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token constant\">__FILE__</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"   \"</span> <span class=\"token operator\">&lt;&lt;</span> __FUNCTION__ <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token constant\">__LINE__</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"log4cpp-配置文件读取\"><a class=\"anchor\" href=\"#log4cpp-配置文件读取\">#</a> log4cpp 配置文件读取</h2>\n<p>如果想要更灵活地使用 log4cpp，可以使用读取配置文件的方式</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// log4cpp.properties</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">log4cpp.rootCategory</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">DEBUG, rootAppender</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">log4cpp.category.sub1</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">DEBUG, A1, A2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">log4cpp.category.sub1.sub2</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">DEBUG, A3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.rootAppender</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">ConsoleAppender</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.rootAppender.layout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">PatternLayout</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.rootAppender.layout.ConversionPattern</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">%d [%p] %m%n</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A1</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">FileAppender</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A1.fileName</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">A1.log</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A1.layout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">BasicLayout</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A2</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">FileAppender</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A2.threshold</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">WARN</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A2.fileName</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">A2.log</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A2.layout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">PatternLayout</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A2.layout.ConversionPattern</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">%d [%p] %m%n</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">RollingFileAppender</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3.fileName</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">A3.log</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3.maxFileSize</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">200</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3.maxBackupIndex</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3.layout</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">PatternLayout</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key attr-name\">log4cpp.appender.A3.layout.ConversionPattern</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">%d [%p] %m%n</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;log4cpp/Category.hh></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;log4cpp/PropertyConfigurator.hh></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  std<span class=\"token double-colon punctuation\">::</span>string initFileName <span class=\"token operator\">=</span> <span class=\"token string\">\"log4cpp.properties\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">PropertyConfigurator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>initFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  log4cpp<span class=\"token double-colon punctuation\">::</span>Category<span class=\"token operator\">&amp;</span> root <span class=\"token operator\">=</span> log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  log4cpp<span class=\"token double-colon punctuation\">::</span>Category<span class=\"token operator\">&amp;</span> sub1 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  log4cpp<span class=\"token double-colon punctuation\">::</span>Category<span class=\"token operator\">&amp;</span> sub2 <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sub1.sub2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Storm is coming\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received storm warning\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Closing all hatches\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  sub2<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hiding solar panels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  sub2<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solar panels are blocked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  sub2<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Applying protective shield\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  sub2<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unfolding protective shield\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  sub2<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solar panels are shielded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  sub1<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All hatches closed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  root<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ready for storm.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  log4cpp<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Category</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "杂项",
                "工具",
                "C++"
            ]
        },
        {
            "id": "http://cwlrin.github.io/c-cpp/c-base/%E8%BF%9B%E7%A8%8B%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4/",
            "url": "http://cwlrin.github.io/c-cpp/c-base/%E8%BF%9B%E7%A8%8B%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4/",
            "title": "进程虚拟内存空间",
            "date_published": "2024-07-17T11:29:10.000Z",
            "content_html": "<h2 id=\"进程虚拟内存空间\"><a class=\"anchor\" href=\"#进程虚拟内存空间\">#</a> 进程虚拟内存空间</h2>\n<h3 id=\"虚拟内存空间\"><a class=\"anchor\" href=\"#虚拟内存空间\">#</a> 虚拟内存空间</h3>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZZjV4VTNUWHNkQm9DblFpMHlENlVrQndtZEJuSHhmbEpGb3JGeU1kQnZELXc_ZT1uV3J4bmI.jpg\" alt=\"\" /></p>\n<p>将 C 程序的内存管理任务完全交给操作系统，虽然听起来是一种简化的方法，但实际上可能会带来一系列问题：</p>\n<ol>\n<li><strong>进程隔离性</strong>：操作系统需要确保不同进程之间的内存空间相互隔离，以防止一个进程访问或破坏另一个进程的数据。如果 C 程序直接管理物理内存，这种隔离性很难实现，因为程序可能无意中访问到其他进程的内存区域，或者操作系统难以跟踪和限制每个进程的内存访问。</li>\n<li><strong>数据安全性</strong>：当程序直接与物理内存交互时，数据的安全性和完整性难以得到保障。恶意程序或错误操作可能会破坏内存中的数据，影响系统的稳定性和可靠性。</li>\n<li><strong>内存碎片化</strong>：直接操作物理内存可能导致内存碎片化问题。随着时间的推移，内存的分配和释放可能导致内存块变得零散，难以找到足够大的连续内存区域来满足新的内存请求。这不仅降低了内存的利用率，还可能影响程序的性能。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWSHYxa1BPSERoSHVab2ZSUEpxVmtrQmRsZUJCRFQyelNIY19adWNXbXl0MUE_ZT1UY0FjMTQ.jpg\" alt=\"\" /></p>\n<p><strong>虚拟内存</strong> 是现代操作系统中的一项核心特性，它为每个运行中的进程提供了一个独立的、虚拟的地址空间。这个空间通常被设计为连续的，与物理内存的实际布局无关。</p>\n<p>术语 “虚拟” 指的是这些地址空间并不是物理内存的直接映射，而是通过操作系统和内存管理单元（MMU）的协同工作，将虚拟地址转换为物理地址。</p>\n<p>当进程开始执行时，它看到的是一个由操作系统为其专门配置的连续虚拟内存空间。这个空间使得进程能够访问到比物理内存更大的内存量，而无需关心物理内存的实际分布。</p>\n<p>这种设计极大地简化了内存管理的复杂性，特别是对于程序员而言。程序员编写的 C/C++ 程序所处理的内存，实际上是属于进程自己的虚拟内存。在这个上下文中，所提到的内存地址实际上是虚拟地址，它们由操作系统负责映射到物理内存地址。</p>\n<p>实际上虚拟内存空间可以看作是操作系统和物理内存之间的一个抽象层。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYUWc4X1hacFh4QmxXQzFkWThqQnc0QjVPLUluWXZCc0p4TVNOaVpmdzVkbUE_ZT1QaFRJbzU.jpg\" alt=\"\" /></p>\n<p>虚拟内存技术为操作系统带来了显著的优势，主要体现在以下几个方面：</p>\n<ol>\n<li><strong>简化内存管理</strong>：操作系统仅需维护从虚拟地址到物理地址的映射关系，这大大简化了内存的分配和回收机制，提高了内存管理的效率。</li>\n<li><strong>提升系统安全性</strong>：每个进程拥有独立的虚拟内存空间，这降低了进程间相互干扰的风险，增强了系统的安全性和稳定性。</li>\n<li><strong>灵活的内存使用</strong>：虚拟内存技术允许操作系统采用更灵活的内存管理策略。例如，操作系统可以利用磁盘空间作为虚拟内存，从而支持大型应用程序的运行，即使物理内存有限。</li>\n<li><strong>内存复用</strong>：物理内存可以被多个进程共享，但每个进程在自己的虚拟地址空间中看到的是独立的内存区域，从而实现了内存的有效复用。</li>\n</ol>\n<h3 id=\"虚拟内存空间模型\"><a class=\"anchor\" href=\"#虚拟内存空间模型\">#</a> 虚拟内存空间模型</h3>\n<p>虚拟内存空间的组织结构遵循从低地址到高地址的顺序，涵盖了以下几个关键区域：</p>\n<ol>\n<li><strong>代码段（Code Segment）</strong>：\n<ul>\n<li>代码段通常位于虚拟内存空间的最低地址处，用于存储程序编译后的可执行指令。这些指令通常被标记为只读，以防止在程序运行时被意外修改。</li>\n<li>C 程序员通常不需要直接操作代码段，因为它们在程序编译和加载时就已经确定。</li>\n</ul>\n</li>\n<li><strong>数据段（Data Segment）</strong>：\n<ul>\n<li>数据段用于存储具有静态存储期限的全局数据，包括全局变量和被  <code>static</code>  关键字修饰的局部变量和全局变量。</li>\n<li>此外，数据段还可能包含程序运行时的只读数据，例如字符串字面值。</li>\n</ul>\n</li>\n<li><strong>堆空间（Heap）</strong>：\n<ul>\n<li>堆空间是 C 程序员最常操作的内存区域，涉及动态内存分配和管理。C 语言的内存管理主要指的是对堆空间的管理。</li>\n<li>堆空间的大小可以根据程序的需求动态调整，通常占据虚拟内存空间的大部分。</li>\n</ul>\n</li>\n<li><strong>栈空间（Stack）</strong>：\n<ul>\n<li>栈空间对于 C 语言的函数调用至关重要，它确保了函数调用的顺序和流程。栈空间遵循 “先进后出” 的原则，随着函数调用从高地址向低地址增长。</li>\n<li>栈空间的大小相对有限，通常用于存储局部变量和函数调用的上下文信息。</li>\n</ul>\n</li>\n<li><strong>内核区域（Kernel Space）</strong>：\n<ul>\n<li>内核区域是操作系统内核专用的内存区域，用于存储内核代码和数据结构。应用程序通常无法直接访问内核空间。</li>\n<li>当应用程序进行系统调用时，会从用户态切换到内核态，此时可以访问内核区域。</li>\n</ul>\n</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRNVBSWkF3NFRSTXJyNVRXNEE5QWk0QkdNR3NiQnU1VGFEOHMwYWV6QnF1Nmc_ZT1oeGhndGQ.jpg\" alt=\"image-20240514103259178.png\" /></p>\n<p>虚拟内存空间通常被划分为两个主要区域，分别是用户区域和内核区域，这两个区域在访问权限和用途上有着明显的区别：</p>\n<ol>\n<li><strong>用户区域（User Space）</strong>：\n<ul>\n<li>用户区域是进程可以自由访问和修改的内存区域。它包括了 <strong>代码段、数据段、堆空间和栈空间</strong>，这些区域共同构成了用户进程的地址空间。</li>\n<li>用户区域的设计允许进程执行正常的计算任务和数据处理，同时保证了进程之间的隔离，防止一个进程干扰另一个进程的运行。</li>\n</ul>\n</li>\n<li><strong>内核区域（Kernel Space）</strong>：\n<ul>\n<li>内核区域是操作系统专用的内存区域，用于存放操作系统的核心功能和数据结构。与用户区域不同，普通用户进程无法直接访问内核区域。</li>\n<li>内核区域主要用于操作系统与硬件之间的交互，如文件系统操作、I/O 通信、网络通信等。这些操作通常涉及到系统资源的管理和硬件设备的控制。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"地址和地址值\"><a class=\"anchor\" href=\"#地址和地址值\">#</a> 地址和地址值</h2>\n<h3 id=\"内存地址\"><a class=\"anchor\" href=\"#内存地址\">#</a> 内存地址</h3>\n<p><strong>内存地址</strong> 是计算机系统中用来定位内存中特定位置的数值。在现代计算机架构中，内存地址用于访问存储在随机存取存储器（RAM）中的数据。</p>\n<p>内存地址的概念基于这样一个事实：计算机的内存被组织成一个线性的地址空间，每个地址对应一个特定的字节。由于计算机的最小寻址单位通常是一个字节（8 位），因此每个内存地址都指向一个字节大小的内存单元。</p>\n<p>可以形象地将虚拟内存空间比作一个巨大的数组，其中每个元素都是一个字节。在这个数组中，每个元素的位置由其在数组中的索引来确定，而在内存中，这个位置就是内存地址。这意味着每个内存地址都唯一地对应于内存中的一个字节，允许 CPU 和操作系统访问和操作存储在该位置的数据。</p>\n<h3 id=\"地址值\"><a class=\"anchor\" href=\"#地址值\">#</a> 地址值</h3>\n<p>在计算机科学中，&quot;地址&quot; 和 &quot;地址值&quot; 通常指的是内存中特定位置的标识符。地址值的确定取决于系统的位数，即 32 位或 64 位。</p>\n<p>当我们在 C 语言中声明一个整型变量  <code>a</code>  并赋予它值 999 时，这个值需要在内存中以二进制形式存储。整数值 999 在内存中的表示取决于计算机的字节序。</p>\n<p>整数值 999 的二进制表示是  <code>1111100111</code> （如果我们假设  <code>int</code>  是 8 位的，这实际上是 999 的补码表示）。在 32 位或 64 位系统中， <code>int</code>  类型通常是 32 位的，因此这个值会被扩展到 32 位。如果计算机使用 <strong>小端存储法</strong>（Little-Endian），那么在内存中的存储顺序将是： 低地址 1111100111000000000000000000000000 这意味着最低有效字节（LSB）存储在最低的内存地址上，而最高有效字节（MSB）存储在最高的内存地址上。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0ViNUk2T1pvak9aSHJFZEN5b0FNeFNNQlRSbmpFZmFNcGZQLVFobnJMbWdPTmc_ZT1YcG5hR2o.jpg\" alt=\"\" /></p>\n<h4 id=\"32-位平台\"><a class=\"anchor\" href=\"#32-位平台\">#</a> 32 位平台</h4>\n<p>在 32 位系统中，虚拟内存空间可以有高达 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{32}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span> 个不同的地址，这相当于 4GB 的内存空间。每个地址都对应一个唯一的内存位置。</p>\n<p>例如，如果某个字节的内存地址是： 00000000000000001010101000101100 这个二进制数就是该字节的地址值。</p>\n<p>为了提高可读性，地址值通常以十六进制形式表示，例如： 0x0000AA2C 十六进制表示法不仅更简洁，而且更符合程序员的阅读习惯。</p>\n<p>对于上述地址的下一个字节，地址值将是： 00000000000000001010101000101101 转换为十六进制表示为： 0x0000AA2D</p>\n<h4 id=\"64-位平台\"><a class=\"anchor\" href=\"#64-位平台\">#</a> 64 位平台</h4>\n<p><strong>64 位系统架构</strong> 允许计算机访问极大的内存空间。在这种架构中，地址总线有 64 位宽，理论上可以寻址 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">64</span></span></span></span></span></span></span></span></span></span></span></span> 个不同的地址，这相当于 16 艾字节（EB）或者说是 1.84 亿太字节（TB）的虚拟地址空间。</p>\n<p>尽管理论上存在如此巨大的地址空间，但实际应用中，现代的 64 位硬件和操作系统往往没有充分利用所有这些位。这主要有以下几个原因：</p>\n<ol>\n<li><strong>硬件限制</strong>：目前的物理内存技术尚未能提供接近  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">64</span></span></span></span></span></span></span></span></span></span></span></span>  个地址所需的内存量。</li>\n<li><strong>应用需求</strong>：大多数应用程序和操作系统还没有达到需要如此庞大内存空间的需求。</li>\n</ol>\n<p>因此，现代的 64 位操作系统通常会使用更少的位数来寻址虚拟内存空间。例如，许多系统实际上只使用 48 位来进行寻址，这仍然提供了一个非常大的地址空间，足以满足当前和未来一段时间内的需求。</p>\n<h3 id=\"变量的地址\"><a class=\"anchor\" href=\"#变量的地址\">#</a> 变量的地址</h3>\n<p>在编程语言如 C 语言中，每个变量在内存中都占有一块特定的空间，而 <strong>变量地址</strong> 指的是这块空间的起始位置，即该空间第一个字节的内存地址。这使得我们可以访问和操作存储在该位置的数据。</p>\n<p>以一个 32 位整数变量为例，它在内存中占据 4 个字节。当我们谈论这个变量的地址时，我们指的是这连续 4 个字节的起始地址。在 C 语言中，可以通过取地址运算符  <code>&amp;</code>  来获取变量的地址。例如，如果我们有一个整数变量  <code>a</code> ，表达式  <code>&amp;a</code>  将返回变量  <code>a</code>  在内存中的地址。</p>\n<p>重要的是要理解，即使变量可能占据多个字节，变量的地址仍然是指向它在内存中的第一个字节。这有助于我们在使用指针和进行内存操作时，准确地定位和访问数据。</p>\n<h3 id=\"小端存储法\"><a class=\"anchor\" href=\"#小端存储法\">#</a> 小端存储法</h3>\n<p>在计算机体系结构中，Intel 和 AMD 等主流的 32 位和 64 位处理器通常采用 <strong>小端存储法</strong>（Little-Endian）来存储数据。这种方法将多字节数据的最低有效位（Least Significant Byte, LSB）存储在较低的内存地址上。虽然这种方法可能在直观上不如大端存储法直观，但它在实际应用中广泛使用。</p>\n<p>相对地，<strong>大端存储法</strong>（Big-Endian）则将数据的最高有效位（Most Significant Byte, MSB）存储在较低的内存地址上。这种方法在某些情况下更符合人们的直觉，因为它将 “更重要” 的字节放在前面。</p>\n<p><strong>大端存储法</strong> 在特定场景下特别有用，尤其是在 <strong>计算机网络</strong> 中传输数据时。网络协议通常要求使用大端存储法来确保数据在不同计算机系统之间传输时的一致性和正确性。这是因为大端存储法在网络协议中被广泛采用，它有助于简化网络通信和数据交换的过程。</p>\n<h2 id=\"缓冲区\"><a class=\"anchor\" href=\"#缓冲区\">#</a> 缓冲区</h2>\n<h3 id=\"缓冲区的概念\"><a class=\"anchor\" href=\"#缓冲区的概念\">#</a> 缓冲区的概念</h3>\n<p><strong>缓冲区定义</strong>：缓冲区是计算机内存中专门分配的一块区域，用于暂存数据。它的主要目的是缓解输入 / 输出（I/O）设备与中央处理器（CPU）及内存之间速度不匹配的问题。</p>\n<p><strong>缓冲区的作用</strong>：通过使用缓冲区，系统可以临时存储从慢速设备（如硬盘、网络或用户输入设备）读取的数据，或者待发送到这些设备的数据。这样，CPU 可以继续执行其他任务，而不是等待数据传输完成，从而提高了整体的计算效率。</p>\n<p><strong>性能提升</strong>：缓冲区的存在显著提升了 I/O 操作的性能。例如，在读写文件时，数据可以先读入缓冲区，然后 CPU 可以逐步从缓冲区读取数据进行处理，而不是直接与慢速的存储设备交互，这样可以大幅度提高数据处理速度。同样，在与外部设备如键盘和显示器进行交互时，缓冲区也起到了类似的作用，改善了交互速率和用户体验。</p>\n<h3 id=\"执行过程\"><a class=\"anchor\" href=\"#执行过程\">#</a> 执行过程</h3>\n<p>具体如下（以  <code>printf</code>  和  <code>scanf</code>  为例）：</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VmYzMwX3hMQkxGS29acjVIZ2c0YUFJQmUxdEd6UXpkUXlpTE5lb2I2TUVpZVE_ZT1xUTJGbjc.jpg\" alt=\"202310100939887.png\" /></p>\n<ol>\n<li><strong>标准输入（stdin）</strong>：\n<ul>\n<li>stdin 是标准输入流，用于从输入源读取数据。</li>\n<li>默认情况下，stdin 的数据来源是键盘。</li>\n</ul>\n</li>\n<li><strong>标准输出（stdout）</strong>：\n<ul>\n<li>stdout 是标准输出流，用于向输出目的地写入数据。</li>\n<li>默认情况下，stdout 的输出目的地是终端显示器。</li>\n</ul>\n</li>\n<li><strong>缓冲区的管理</strong>：\n<ul>\n<li>C 语言标准库自动管理这些输入输出流资源，程序员可以通过函数调用从 stdin 读取数据，向 stdout 写入数据。</li>\n</ul>\n</li>\n<li><strong>缓冲区的重定向</strong>：\n<ul>\n<li>程序员可以使用重定向技术改变数据的输入来源和输出目的地。</li>\n<li>例如，可以将文件作为输入源，使得 stdin 从文件读取数据。</li>\n<li>同时，可以将 stdout 的输出写入到文件或屏幕。</li>\n</ul>\n</li>\n<li><strong>scanf 和 printf 的过程</strong>：\n<ul>\n<li><code>scanf</code>  函数用于从 stdin 读取数据。</li>\n<li><code>printf</code>  函数用于向 stdout 写入数据。</li>\n</ul>\n</li>\n<li><strong>缓冲区的优势</strong>：\n<ul>\n<li>通过缓冲区，程序员无需考虑数据的具体来源和目的地，可以进行统一处理。</li>\n<li>这种设计提高了程序的灵活性和效率。</li>\n</ul>\n</li>\n<li><strong>实际应用</strong>：\n<ul>\n<li>例如，当 stdin 的数据来源被重定向为文件 a 时，程序会从文件 a 读取数据。</li>\n<li>同时，stdout 的输出可以被写入到另一个文件或显示在屏幕上。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"缓冲区为什么可以提升-io-操作的性能\"><a class=\"anchor\" href=\"#缓冲区为什么可以提升-io-操作的性能\">#</a> 缓冲区为什么可以提升 I/O 操作的性能？</h3>\n<p><strong>缓冲区提升性能的原理</strong>：缓冲区通过暂存从外部设备流入或流出的数据，减少了 CPU 因等待低速设备数据传输而产生的空闲时间。这种方式允许 CPU 和 I/O 设备并行工作，从而提高了整体的系统效率。</p>\n<p><strong>内核区域的作用</strong>：内核区域是操作系统中用于执行底层硬件控制操作的内存区域。它负责管理文件操作、进程和线程的资源管理、网络通信等关键任务。在这个区域内，操作系统和硬件紧密协作，以确保数据能够高效地在外部设备和内核区域之间传输。</p>\n<p><strong>系统调用的机制</strong>：用户进程不能直接访问内核区域。为了获取内核区域中的数据，用户进程必须通过系统调用来请求操作系统内核的服务。系统调用提供了一种安全的方式来访问受保护的资源，并执行需要高权限的操作。</p>\n<p><strong>性能考虑</strong>：系统调用涉及到用户态和内核态之间的切换，这是一个资源密集型的过程。因此，为了优化性能，应当尽量减少系统调用的次数。通过使用缓冲区和其他技术，可以减少对系统调用的依赖，从而提升系统的整体性能。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRMi1ZZW5DSXBoS21UVXhLc3hUY0lZQjlYQkVVQ0VqOG9CTzc3eHJGemlnb2c_ZT14bXVhMEM.jpg\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYUlhVdjdqWl85QnFsd3J0cUlhanFnQktNSjFIU2hJSl9wSFNGZnpGRW5xNnc_ZT1ib1QySmI.jpg\" alt=\"\" /></p>\n<p>缓冲区通过减少 I/O 操作过程中的系统调用次数，显著提高了整体的 I/O 性能。系统调用是昂贵的操作，因为它们涉及到用户态和内核态之间的切换。通过使用缓冲区，数据可以先存储在缓冲区中，然后一次性地进行系统调用，从而减少了频繁切换的需要。</p>\n<p>缓冲区充当了一种防错机制，即使程序员对 I/O 操作的内部机制不够了解，也可以通过缓冲区保证操作的性能达到一定的标准。这种机制降低了因编程错误导致性能问题的风险。</p>\n<p>虽然缓冲区带来了性能上的提升，但它也存在一些缺点。缓冲区需要占用额外的内存空间，这可能会在内存资源有限的情况下成为一个问题。此外，缓冲区可能会引入数据传输的延迟，因为数据需要先写入缓冲区，然后再从缓冲区写入最终目的地。</p>\n<h3 id=\"缓冲区刷新机制\"><a class=\"anchor\" href=\"#缓冲区刷新机制\">#</a> 缓冲区刷新机制</h3>\n<p>缓冲区通常具备自动刷新的能力，这是一种在满足特定条件时触发数据传输的机制。这种机制对于管理数据流动和优化性能至关重要。</p>\n<ol>\n<li><strong>输入缓冲区</strong>：对于输入缓冲区，通常不需要考虑刷新问题。当输入缓冲区中有数据时，可以读取；当数据被读取完毕后，输入缓冲区为空，进一步的读取操作将不会获得更多数据。</li>\n<li><strong>输出缓冲区</strong>：与输入缓冲区不同，输出缓冲区需要刷新机制。如果输出缓冲区的数据不被刷新（即写入目的地），它们将一直保留在缓冲区中，导致数据无法正确输出。</li>\n<li><strong>缓冲区类型</strong>：\n<ul>\n<li><strong>全缓冲区</strong>：当缓冲区满时，会自动刷新，常见于文件缓冲区。</li>\n<li><strong>行缓冲区</strong>：当缓冲区遇到换行符时，会自动刷新，如标准输出  <code>stdout</code>  的缓冲区。</li>\n<li><strong>不缓冲</strong>：数据一旦写入，立即刷新，不保留任何数据，如标准错误  <code>stderr</code>  的缓冲区。</li>\n</ul>\n</li>\n<li><strong>注意事项</strong>：\n<ul>\n<li>缓冲区满时会自动刷新。</li>\n<li>程序结束时，标准流的缓冲区也会自动刷新，但不应依赖此机制。</li>\n<li>缓冲区刷新的具体行为可能因编译器和平台而异。</li>\n<li>可以使用  <code>fflush</code>  函数手动刷新  <code>stdout</code>  和文件流的缓冲区，但对于  <code>stdin</code>  输入缓冲区的刷新，C 标准并未定义其行为，因此这种操作是未定义的，不应依赖此操作来清空输入缓冲区。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"栈区\"><a class=\"anchor\" href=\"#栈区\">#</a> 栈区</h2>\n<h3 id=\"栈帧\"><a class=\"anchor\" href=\"#栈帧\">#</a> 栈帧</h3>\n<p>在 C 语言程序中，函数调用会经历一系列的内存管理操作，这些操作与栈帧的概念密切相关：</p>\n<ol>\n<li><strong>栈帧的创建</strong>：每次调用函数时，系统会在栈上为该函数分配一个内存区域，称为 “栈帧”。每个栈帧都是独立的，包含了该函数的局部变量、参数、返回地址等信息。</li>\n<li><strong>局部变量的作用域</strong>：由于不同函数的栈帧相互独立，局部变量仅在创建它们的函数内部有效。这意味着局部变量的生命周期与函数的执行期间一致。</li>\n<li><strong>函数调用的过程</strong>：当一个函数被调用时，其栈帧被 “压入”（push）栈中，这个过程称为 “入栈”。此时，局部变量开始分配空间并生效。</li>\n<li><strong>函数调用结束</strong>：当函数执行完毕，其栈帧被 “弹出”（pop）栈中，这个过程称为 “出栈”。随着栈帧的销毁，局部变量的生命周期结束，它们所占用的内存空间被释放。</li>\n<li><strong>自动存储期</strong>：在 C 语言中，局部变量的这种生命周期被称为 “自动存储期”，因为它们的创建和销毁是自动管理的，不需要程序员显式操作。</li>\n</ol>\n<p>虽然虚拟内存空间中的栈采用了与数据结构栈相同的原则，但它们在实现上可能有所不同。虚拟内存空间的栈是由操作系统和编译器共同管理的，而数据结构栈通常是由程序员在程序中显式实现的。</p>\n<p>对于以下函数：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>入栈顺序为  <code>main -&gt; test -&gt; test2</code> ，出栈顺序则相反。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTSk11UXh1Nk90Qm1fNFlWZ3J1YjI0Qk1Ea3R0TG9OSTh1Y1JEUTV3RjJaMkE_ZT1oSk9vQ2w.jpg\" alt=\"202401021347007.png\" /></p>\n<p>栈的 “先进后出”（LIFO）特性对程序的执行流程有着决定性的影响。这意味着在程序中，先被调用的函数将在后被调用的函数之后结束执行。这种特性确保了程序在函数调用时的顺序性和内存管理的有效性。</p>\n<p>在 C 语言程序中， <code>main</code>  函数是程序的入口点，它最先被调用。根据栈的特性， <code>main</code>  函数也将是最后结束的函数。当  <code>main</code>  函数执行完毕并返回时，它标志着整个程序的执行结束，进程随之结束。</p>\n<p>虚拟内存空间中的栈区域对于程序的执行至关重要。它不仅负责存储局部变量和函数调用的上下文信息，还决定了函数调用的顺序。每次函数调用时，新的栈帧被压入栈顶；函数执行完毕后，其栈帧被弹出，释放内存空间。这一过程确保了程序能够按照预定的顺序执行，并且有效地管理内存资源。</p>\n<h3 id=\"栈区域内存管理的特点\"><a class=\"anchor\" href=\"#栈区域内存管理的特点\">#</a> 栈区域内存管理的特点</h3>\n<p><strong>栈内存管理的特点</strong>：栈区域的内存管理以其简单性和高效性而著称。这种管理机制由操作系统和编译器共同协作完成，确保了函数调用和局部变量的生命周期得到正确管理。</p>\n<p>在栈的内存管理中，一个关键的组件是栈顶指针（Stack Pointer）。这个指针始终指向当前栈帧的顶部，即当前正在执行的函数的栈帧。当一个函数被调用时，一个新的栈帧被创建并压入栈顶；当函数返回时，该栈帧被弹出，栈顶指针相应地向下移动。</p>\n<p>栈顶指针所标记的当前栈帧包含了当前函数的局部变量、参数、返回地址等信息。这个栈帧代表了当前正在执行的函数的执行上下文，是程序执行流程中不可或缺的部分。</p>\n<h3 id=\"函数调用和栈帧管理\"><a class=\"anchor\" href=\"#函数调用和栈帧管理\">#</a> 函数调用和栈帧管理</h3>\n<h4 id=\"入栈\"><a class=\"anchor\" href=\"#入栈\">#</a> 入栈</h4>\n<p>当一个函数被调用时，会发生一系列的内存管理操作，这些操作涉及到栈帧的创建和销毁。在 C 语言中，这些操作通常由编译器和操作系统共同完成。</p>\n<ol>\n<li><strong>栈帧进栈</strong>：当函数被调用时，一个新的栈帧（Stack Frame）被创建并压入栈顶。这个过程涉及到为函数的局部变量、参数和返回地址分配内存空间。</li>\n<li><strong>SP 指针的变化</strong>：栈指针（Stack Pointer，通常表示为 SP）在函数调用时会减少，以腾出空间来存储新的栈帧。减少的量等于新调用函数栈帧的大小。</li>\n<li><strong>栈帧的组成</strong>：每个栈帧包含了函数的局部变量、函数参数、返回地址等信息。这些信息在函数执行期间是活跃的，并在函数返回时被销毁。</li>\n<li><strong>函数返回</strong>：当函数执行完毕并准备返回时，它的栈帧从栈中弹出，SP 指针相应地增加，恢复到函数调用前的值。这个过程释放了函数的局部变量所占用的内存空间。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VmbEhJREZ3VnBCQnMwQ29SRXVMb1lJQkxiRHprUWR3c191UmtIRnplZlEzX3c_ZT1pZFExTW4.jpg\" alt=\"202311082026062.png\" /></p>\n<h4 id=\"出栈\"><a class=\"anchor\" href=\"#出栈\">#</a> 出栈</h4>\n<ol>\n<li><strong>函数返回</strong>：当一个函数完成其执行并准备返回时，它会通过 <code>return</code>  语句将控制权交还给调用者。</li>\n<li><strong>出栈过程</strong>：随着函数的返回，之前为该函数创建的栈帧需要从栈中移除，这个过程称为 “出栈”。</li>\n<li><strong>SP 寄存器指针</strong>：栈指针（Stack Pointer，通常表示为 SP）在函数出栈时会增加。增加的量等于该函数栈帧的大小，这样 SP 指针就会指向新的栈顶。</li>\n<li><strong>恢复状态</strong>：出栈过程还会恢复调用者的栈帧状态，包括局部变量、参数和返回地址等。这样，调用者可以继续从函数调用前的状态执行。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSYm1aTk5GLUhSTHM5SXl6b0Z0MWVvQm5oOElqQThmdGFDU2FMSXg0ZXFGaVE_ZT1ORWRxZ2Y.jpg\" alt=\"202311082026358.png\" /></p>\n<h3 id=\"栈区域内存管理的优点和缺点\"><a class=\"anchor\" href=\"#栈区域内存管理的优点和缺点\">#</a> 栈区域内存管理的优点和缺点</h3>\n<p>优点：</p>\n<ol>\n<li><strong>简单高效</strong>：栈内存的分配和释放过程非常直接和快速。当一个函数被调用时，它的局部变量和栈帧被自动压入栈中；当函数返回时，这些内容被自动弹出，无需程序员手动管理。</li>\n<li><strong>自动内存管理</strong>：使用栈内存时，程序员不需要担心内存泄漏或内存释放的问题，因为栈的内存管理是自动的。</li>\n<li><strong>线程安全</strong>：每个线程都有自己的栈，这意味着局部变量是线程隔离的，避免了多线程环境下的数据竞争和同步问题。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li><strong>栈空间有限</strong>：由于栈空间通常较小，它不适合存储大型数据结构，如大数组或大字符串。</li>\n<li><strong>缺乏动态性</strong>：在编译时，栈帧的大小就已经确定，这意味着栈上的数据结构不能在运行时动态调整大小。</li>\n<li><strong>数据无法共享</strong>：由于栈是线程隔离的，栈上的数据不能在不同线程之间共享，这在需要跨线程数据交互的场景中可能是一个缺点。</li>\n</ol>\n",
            "tags": [
                "C/C++",
                "C 语言基础"
            ]
        },
        {
            "id": "http://cwlrin.github.io/misc/Doxygen-%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B/",
            "url": "http://cwlrin.github.io/misc/Doxygen-%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B/",
            "title": "Doxygen 语法简介",
            "date_published": "2024-07-10T08:10:50.000Z",
            "content_html": "<p><code>Doxygen</code>  是一种广泛使用的文档生成工具，它允许开发者通过遵循特定的注释规范来提取文档。编写注释时，遵循  <code>Doxygen</code>  的语法规则至关重要，因为这样不仅可以生成格式统一、易于导航的文档，还能提高文档的可读性和专业性。如果注释不符合  <code>Doxygen</code>  的标准格式，生成的文档可能会显得杂乱无章，难以为其他开发者或用户所理解。</p>\n<h2 id=\"特殊命令简介\"><a class=\"anchor\" href=\"#特殊命令简介\">#</a> 特殊命令简介</h2>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>字段名</th>\n<th>语法</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@file</td>\n<td>文件名</td>\n<td>file [&lt; name &gt;]</td>\n<td></td>\n</tr>\n<tr>\n<td>@brief</td>\n<td>简介</td>\n<td brief=\"\" description=\"\">brief</td>\n<td></td>\n</tr>\n<tr>\n<td>@author</td>\n<td>作者</td>\n<td list=\"\" of=\"\" authors=\"\">author</td>\n<td></td>\n</tr>\n<tr>\n<td>@mainpage</td>\n<td>主页信息</td>\n<td>mainpage [(title)]</td>\n<td></td>\n</tr>\n<tr>\n<td>@date</td>\n<td>年 - 月 - 日</td>\n<td date=\"\" description=\"\">date</td>\n<td></td>\n</tr>\n<tr>\n<td>@author</td>\n<td>版本号</td>\n<td version=\"\" number=\"\">version</td>\n<td></td>\n</tr>\n<tr>\n<td>@copyright</td>\n<td>版权</td>\n<td copyright=\"\" description=\"\">copyright</td>\n<td></td>\n</tr>\n<tr>\n<td>@param</td>\n<td>参数</td>\n<td parameter=\"\" description=\"\">param [(dir)] &lt; parameter-name&gt;</td>\n<td></td>\n</tr>\n<tr>\n<td>@return</td>\n<td>返回</td>\n<td description=\"\" of=\"\" the=\"\" return=\"\" value=\"\">return</td>\n<td></td>\n</tr>\n<tr>\n<td>@retval</td>\n<td>返回值</td>\n<td description=\"\">retval</td>\n<td></td>\n</tr>\n<tr>\n<td>@bug</td>\n<td>漏洞</td>\n<td bug=\"\" description=\"\">bug</td>\n<td></td>\n</tr>\n<tr>\n<td>@details</td>\n<td>细节</td>\n<td detailed=\"\" description=\"\">details</td>\n<td></td>\n</tr>\n<tr>\n<td>@pre</td>\n<td>前提条件</td>\n<td description=\"\" of=\"\" the=\"\" precondition=\"\">pre</td>\n<td></td>\n</tr>\n<tr>\n<td>@see</td>\n<td>参考</td>\n<td references=\"\">see</td>\n<td></td>\n</tr>\n<tr>\n<td>@link</td>\n<td>连接 (与 @see 类库，{@link <a href=\"http://www.google.com\">www.google.com</a>})</td>\n<td>link &lt; link-object&gt;</td>\n<td></td>\n</tr>\n<tr>\n<td>@throw</td>\n<td>异常描述</td>\n<td exception=\"\" description=\"\">throw &lt; exception-object&gt;</td>\n<td></td>\n</tr>\n<tr>\n<td>@todo</td>\n<td>待处理</td>\n<td paragraph=\"\" describing=\"\" what=\"\" is=\"\" to=\"\" be=\"\" done=\"\">todo</td>\n<td></td>\n</tr>\n<tr>\n<td>@warning</td>\n<td>警告信息</td>\n<td warning=\"\" message=\"\">warning</td>\n<td></td>\n</tr>\n<tr>\n<td>@deprecated</td>\n<td>弃用说明。可用于描述替代方案，预期寿命等</td>\n<td description=\"\">deprecated</td>\n<td></td>\n</tr>\n<tr>\n<td>@example</td>\n<td>弃用说明。可用于描述替代方案，预期寿命等</td>\n<td description=\"\">deprecated</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"文件注释\"><a class=\"anchor\" href=\"#文件注释\">#</a> 文件注释</h2>\n<p>一般放在文件开头</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @file 文件名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @brief 简介</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @details 细节</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @author 作者</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @version 版本号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @date 年 - 月 - 日</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @copyright 版权</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> */</span></pre></td></tr></table></figure><h2 id=\"结构体注释\"><a class=\"anchor\" href=\"#结构体注释\">#</a> 结构体注释</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * @brief 类的详细描述</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  */</span></pre></td></tr></table></figure><h2 id=\"函数注释\"><a class=\"anchor\" href=\"#函数注释\">#</a> 函数注释</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  * @brief 函数描述</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * @param 参数描述</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  * @return 返回描述</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  * @retval 返回值描述</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  */</span></pre></td></tr></table></figure><h2 id=\"常量变量注释\"><a class=\"anchor\" href=\"#常量变量注释\">#</a> 常量 / 变量注释</h2>\n<p>一般常量 / 变量可以有两种形式：</p>\n<ul>\n<li>常量 / 变量上一行注释</li>\n<li>常量 / 变量后注释</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义一个整型变量 a</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @brief 定义一个整型变量 a</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*!&lt; 定义一个整型变量 a */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">/**&lt; 定义一个整型变量 a */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//!&lt; 定义一个整型变量 a</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">///&lt; 定义一个整型变量 a</span></pre></td></tr></table></figure>",
            "tags": [
                "杂项",
                "工具"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/",
            "title": "软考中级——事务管理",
            "date_published": "2024-05-24T06:26:08.000Z",
            "content_html": "<h1 id=\"事务的基本概念\"><a class=\"anchor\" href=\"#事务的基本概念\">#</a> 事务的基本概念</h1>\n<h2 id=\"事务\"><a class=\"anchor\" href=\"#事务\">#</a> 事务</h2>\n<p>事务：是一系列的数据库操作，是数据库应用程序的逻辑单位，即应用程序对数据库的操作都应该以事务的方式进行。</p>\n<p>事务是一个操作序列，这些操作 “要么都做，要么都不做”。</p>\n<p>事务定义的语句如下：</p>\n<ol>\n<li><code>BEGIN TRANSACTION</code> ：事务开始。</li>\n<li><code>END TRANSACTION</code> ：事务结束。</li>\n<li><code>COMMIT</code> ：事务提交。该操作表示事务成功地结束，它将通知事务管理器该事务的所有更新操作现在可以被提交或永久地保留。</li>\n<li><code>ROLLBACK</code> ：事务回滚。该操作表示事务非成功地结束，它将通知事务管理器出故障了，数据库可能处于不一致状态，该事务的所有更新操作必须回滚或撤销。</li>\n</ol>\n<div class=\"note default\">\n<p>例：从账户 A 转入账户 B 金额 x 元。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">BEGIN</span> <span class=\"token keyword\">TRANSACTION</span> <span class=\"token comment\">-- 事务开始 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">read</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 读账户 A 的余额 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A <span class=\"token operator\">=</span> A <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- A 账户金额减去 x 元 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">IF</span><span class=\"token punctuation\">(</span>A <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>“ 金额不足，不能转账 ”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">ROLLBACK</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 撤销该事务 ， 回到事务执行前的状态</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">ELSE</span> <span class=\"token keyword\">write</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 写入账户 A 的余额 </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">read</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">-- 读账户 B 的余额 </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>B <span class=\"token operator\">=</span> B <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">write</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">-- 提交事务 </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">END</span> <span class=\"token keyword\">TRANSACTION</span> <span class=\"token comment\">-- 事务结束</span></pre></td></tr></table></figure></div>\n<h2 id=\"sql-中事务的开始与结束\"><a class=\"anchor\" href=\"#sql-中事务的开始与结束\">#</a> SQL 中事务的开始与结束</h2>\n<p>SQL 标准规定当一条 SQL 语句被执行，就隐式地开始了一个事务，SQL 中的  <code>Commit work</code>  和  <code>Rollback work</code>  语句之一会结束一个事务。</p>\n<ol>\n<li>\n<p><code>Commit work</code> ：提交当前事务。这意味着该事务所做的更新在数据库中永久保存。一但事务被提交后，一个新的事务自动开始。</p>\n</li>\n<li>\n<p><code>Rollback work</code> ：回滚当前事务。这意味着将撤销该事务对数据库的更新。</p>\n</li>\n</ol>\n<p>注意：如果事务已经执行了  <code>Commit work</code> ，就不能再用  <code>Rollback</code>  来撤销。</p>\n<h2 id=\"事务的特性\"><a class=\"anchor\" href=\"#事务的特性\">#</a> 事务的特性</h2>\n<p>事务具 4 个特性：原子性、一致性、隔离性和持久性。</p>\n<ol>\n<li>原子性：事务的所有操作在数据库中要么都做要么都不做。</li>\n<li>一致性：一个事务独立执行的结果，将保持数据的一致性，即数据不会因为事务的执行而遭受破坏。</li>\n<li>隔离性：一个事务的执行不能被其他事务干扰。并发事务在执行过程中可能会对同一数据进行操作，这些事务的操作应该不会相互干扰，是相互隔离的。</li>\n<li>持久性：一个事务一旦提交，它对数据库的改变必须是永久的，即使系统出现故障也是如此</li>\n</ol>\n<h2 id=\"事务的状态\"><a class=\"anchor\" href=\"#事务的状态\">#</a> 事务的状态</h2>\n<p>事务是数据库的基本执行单元，如果事务成功执行，则数据库从一个一致状态进入另一个一致状态。如果因为某种原因事务没能成功执行，但其已经对数据库进行了修改，这时候可能会导致数据库处于不一致的状态，需要对事务已经造成的变更进行撤销（回滚）。</p>\n<ol>\n<li>活动状态：事务的初始状态，事务执行时处于这个状态。</li>\n<li>部分提交状态：当操作序列的最后一条语句执行后，事务就处于部分提交状态。 这时，事务虽然已经完全执行，但由于实际输出可能还临时驻留在内存中，在事务成功完成前还有可能出现硬件故障，因此，部分提交状态并不等于事务成功执行。</li>\n<li>失败状态：由于硬件或逻辑错误，使得事务不能继续正常执行，事务就进入了失败状态，处于失败状态的事务必须回滚。这样，事务就进入了中止状态。</li>\n<li>中止状态：事务回滚并且数据库恢复到事务开始执行前的状态。</li>\n<li>提交状态：当事务成功完成后，称事务处于提交状态。只有事务处于提交状 后，才能说事务已经提交。</li>\n</ol>\n<p>事务的状态转换：</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVYnR6V0gzMXY1TWtvTkFqZEYyTzEwQnF1T3ZTVkdIQWZsSmFnZnFHc240WlE_ZT1ZY29meWI.png\" alt=\"QQ20240520141750.png\" /></p>\n<ul>\n<li><code>BEGIN TRANSACTION</code> ：开始运行事务，使事务进入活动状态</li>\n<li><code>END TRANSACTION</code> ：说明事物中的所有读写操作都已完成，使事务进入部分提交状态，把事务的所有操作对数据库的影响存入数据库。</li>\n<li><code>COMMIT</code> ：标志事务已经成功地完成，事务中的所有操作对数据库的影响已经安全地存入数据库，事务进入提交状态，结束事务的运行。</li>\n<li><code>ABORT</code> ：标志事务进入失败状态，系统撤销事务中所有操作对数据库和其他事务的影响，结束事务的运行。</li>\n</ul>\n<h1 id=\"数据库的并发控制\"><a class=\"anchor\" href=\"#数据库的并发控制\">#</a> 数据库的并发控制</h1>\n<h2 id=\"事务调度\"><a class=\"anchor\" href=\"#事务调度\">#</a> 事务调度</h2>\n<h3 id=\"串行调度\"><a class=\"anchor\" href=\"#串行调度\">#</a> 串行调度</h3>\n<p>是指多个事务依次串行执行，且只有当一个事务的所有操作都执行完成才执行另一个事务的所有操作。</p>\n<div class=\"note default\">\n<p>例：有两个事务 T0 和 T1，事务 T0 从账号 A 转 2000 元到账号 B；事务 T1 从账号 A 转 20% 的款到账号 B。T0 和 T1 的定义如下所示。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZT3dEbnR3RmY5RWxpMWZaY0dtLWVVQmdwdHc2NjhrTlZfNzQwNkMtTzBmSkE_ZT1DUmRrUXY.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZT3dEbnR3RmY5RWxpMWZaY0dtLWVVQmdwdHc2NjhrTlZfNzQwNkMtTzBmSkE_ZT13WXptd2s.png\" alt=\"\" /></p>\n</div>\n<h3 id=\"并发调度\"><a class=\"anchor\" href=\"#并发调度\">#</a> 并发调度</h3>\n<p>利用分时的方法同时处理多个事务。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSVWdEeF9fVW5OSHE5dHBiS24xVE00QlhsT1dSVEpFWEgtek9ObFNDR3JoS2c_ZT1XVGU3TDQ.png\" alt=\"\" /></p>\n<h3 id=\"可恢复调度\"><a class=\"anchor\" href=\"#可恢复调度\">#</a> 可恢复调度</h3>\n<p>指满足这样的条件的调度：当事务 T<sub>j</sub> 要读事务 T<sub>i</sub> 写的数据时，T<sub>i</sub> 事务必须要先于事务 T<sub>j</sub> 提交。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjbXE4MHBZMm9wQnQtdTJHQ09WZFdBQkRaT1Y2ZVBxMWJXS1k5RWZLVmFid2c_ZT1XTFFWSGw.png\" alt=\"\" /></p>\n<div class=\"note primary\">\n<p>某银行信息系统有两项业务对应的事务 T1、T2 与存款关系有关。其中，转账业务：T1 (A,B,50)， 从账户 A 向账户 B 转 50 元；计息业务：T2，对当前所有账户的余额计算利息，余额为 X*1.01。针对上述业务流程，回答下列问题：</p>\n<ol>\n<li>若当前账户 A 余额为 100 元，账户 B 余额为 200 元。有两个事务分别为 T1 (A, B, 50），T2。可能的串行执行为：T1→T2 或 T2→T1，请计算串行执行结果。</li>\n<li>若上述两个事务的一个并发调度顺序如下图所示，请问调度是否正确，为什么？</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZZ09nV2RJYk1SSXNsOGpSUVVvSk8wQktoNnM3eTE2c2MtdnNQWV90dGxhSGc_ZT1sZ050cjY.png\" alt=\"\" /></p>\n</div>\n<h2 id=\"并发操作带来的问题\"><a class=\"anchor\" href=\"#并发操作带来的问题\">#</a> 并发操作带来的问题</h2>\n<p>并发操作带来的数据不一致性有三类：丢失修改、不可重复读和读脏数据。</p>\n<h3 id=\"丢失修改\"><a class=\"anchor\" href=\"#丢失修改\">#</a> 丢失修改</h3>\n<p>两个事务对同一个数据进行修改，导致事务 A 对数据库的 修改被事务 B 的修改所覆盖。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRWEJyb29tWTNaRGp6TVFITUpNcV8wQng1Z3h5V0JTNDVVcHhxUUZmWFV5X0E_ZT1FZWxMWlQ.png\" alt=\"\" /></p>\n<h3 id=\"不可重复读\"><a class=\"anchor\" href=\"#不可重复读\">#</a> 不可重复读</h3>\n<p>事务对同一数据进行两次读取的结果不同。原因是两 次读取的间隙数据被另一事务修改了。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VkNEpWNmtpTllaQ294dnk1WkpYbUlZQlEwSWplZGhKQlRjbFpHVWZiVGN3MVE_ZT16TGdUMGQ.png\" alt=\"\" /></p>\n<h3 id=\"读脏数据\"><a class=\"anchor\" href=\"#读脏数据\">#</a> 读脏数据</h3>\n<p>某事务读取的数据是其它事务修改后的值，但该修改后 来又被撤销了。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRb01wLTVPR3J4QXRQN3JZQmRKVnI0QnFNVkRZdEw2OFNpSl9XZ05EQUltd3c_ZT1aR0E0YWg.png\" alt=\"\" /></p>\n<h2 id=\"并发调度的可串行性\"><a class=\"anchor\" href=\"#并发调度的可串行性\">#</a> 并发调度的可串行性</h2>\n<p>多个事务的并发执行是正确的，当且仅当其结果与某一次序串行地执行它们的结果相同，称这种调度策略是可串行化的调度。</p>\n<p>可串行性是并发事务正确性的准则。即：一个给定的并发调度，当且仅当它是可串行化的才认为是正确调度。</p>\n<h2 id=\"并发控制技术\"><a class=\"anchor\" href=\"#并发控制技术\">#</a> 并发控制技术</h2>\n<p>并发事务如果对数据读写时不加以控制，会破坏事务的隔离性和一致性。为了保持事务的隔离性，系统必须对事务之间的相互作用加以控制，最典型的方式就是加锁。</p>\n<ol>\n<li>排它锁（Exclusive Locks, 简称 X 锁）：也称为写锁，用于对数据进行写操作时进行锁定。如果事务 T 对数据 A 加上 X 锁后，就只允许事务 T 对数据 A 进行读取和修改，其他事务对数据 A 不能再加任何锁， 也不能读取和修改数据 A，直到事务 T 释放 A 上的锁。</li>\n<li>共享锁（Share Locks, 简称 S 锁）：也称为读锁，用于对数据进行读操作时进行锁定。如果事务 T 对数据 A 加上了 S 锁后，事务 T 就只能读数据 A 但不可以修改，其他事务可以再对数据 A 加 S 锁来读取， 只要数据 A 上有了 S 锁，任何事务都只能再对其加 S 锁读取而不能加 X 锁修改。</li>\n</ol>\n<h2 id=\"封锁协议\"><a class=\"anchor\" href=\"#封锁协议\">#</a> 封锁协议</h2>\n<ol>\n<li>一级封锁协议：是指事务 T 在修改数据 A 之前必须先对其加 X 锁，直 到事务结束才释放 X 锁。解决了丢失修改的问题。</li>\n<li>二级封锁协议：是一级封锁协议加上事务 T 在读取数据 A 之前必须对其加上 S 锁，读完后即可释放 S 锁。解决了读脏数据的问题。</li>\n<li>三级封锁协议：是一级封锁协议加上事务 T 在读取数据 A 之前必须对其加上 S 锁，直到事务结束才释放 S 锁。解决了不可重复读的问题。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>封锁协议</th>\n<th>要求</th>\n<th>可解决</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>一级封锁协议</td>\n<td>修改前加 X 锁，事务结束后释放</td>\n<td>丢失修改</td>\n</tr>\n<tr>\n<td>二级封锁协议</td>\n<td>在一级之上再规定：读取前加 S 锁，读完后释放</td>\n<td>丢失修改、读脏</td>\n</tr>\n<tr>\n<td>三级封锁协议</td>\n<td>在一级之上再规定：读取前加 S 锁，事务结束后释放</td>\n<td>丢失修改、读脏，不可重复读</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"两段锁协议\"><a class=\"anchor\" href=\"#两段锁协议\">#</a> 两段锁协议</h2>\n<p>两段锁协议（2PL）：是指同一事务对任何数据进行读写之前必须对该数据加锁； 在释放一个封锁之后，该事务不再申请和获得任何其他封锁。</p>\n<p>所谓 “两段” 的含义是：事务分为两个阶段。第一阶段是获得封锁，也称为扩展阶段。第二阶段是释放封锁，也称为收缩阶段。</p>\n<p>T1：Slock A...Slock B...Xlock C...Unlock B...Unlock A...Unlock C</p>\n<p>T2：Slock A...Unlock A...Slock B...Xlock C...Unlock C...Unlock B</p>\n<p>如果事务遵循两段锁协议，那么它们的并发调度是可串行化的。两段锁是可串行化的充分条件，但不是必要条件。即：遵循两段锁协议，一定是可串行化的；不遵循两段锁协议，可能是可串行化的，也可能不是。</p>\n<p>注意：采用两段锁协议也有可能产生死锁，这是因为每个事务都不能及时解除被封锁的数据，可能会导致多个事务都要求对方已经封锁的数据而不能继续运行。</p>\n<h2 id=\"事务的隔离级别\"><a class=\"anchor\" href=\"#事务的隔离级别\">#</a> 事务的隔离级别</h2>\n<ol>\n<li><code>READ UNCOMMITTED</code> （读未提交）：可避免丢失修改。</li>\n<li><code>READ COMMITTED</code> （读已提交）：可避免丢失修改、读脏数据。</li>\n<li><code>REPEATABLE READ</code> （可重复读）：可避免丢失修改、读脏数据，不可重复读。</li>\n<li><code>SERIALIZABLE</code> （串行化）：最高级别，可避免丢失修改、读脏数据、不可重复读、幻读。</li>\n</ol>\n<p>幻读：事务 A 查询得到 N 条数据，然后事务 B 又插入了 M 条数据，或者改变了这 N 条数 据之外的 M 条符合事务 A 搜索条件的数据，导致事务 A 再次搜索发现有 N+M 条数据了， 就产生了幻读。</p>\n<div class=\"note primary\">\n<p>某航空售票系统负责所有本地起飞航班的机票销售业务，并设有多个机票销售网点。各售票网点使用相同的售票程序。 假设系统有如下业务及规则。</p>\n<ol>\n<li>\n<p>售票程序中用到的伪指令如表 11-2 所示。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">伪指令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">R(A, x)</td>\n<td style=\"text-align:center\">返回航班 A 当前的剩余机票数给变量 x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">W(A, x)</td>\n<td style=\"text-align:center\">将当前数据库中航班 A 的剩余机票数设置为变量 x 的值</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>若某售票网点一次售出 a 张航班 A 的机票，则售票程序的伪指令序列为：R (A, X)；W (A, x-a)。</p>\n</li>\n</ol>\n<p>根据上述业务及规则，完成下列问题。<br />\n【问题 1】</p>\n<p>假设有两个售票网点同时销售航班 A 的机票，那么在数据库服务器端可能出现如下的调度：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A：R1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，R2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，W1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>，W2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>； </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>B：R1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，R2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，W2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>，W1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C：R1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，W1<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>，R2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>，W2<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> x<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>；</pre></td></tr></table></figure><p>其中 Ri (A, x)，Wi (A, x) 分别表示第 i 个销售网点的读写操作，其余类同。 假设当前航班 A 剩余 10 张机票，请分析上述三个调度各自执行完后的剩余票数，并指出错误的调度及产生错误的原因。</p>\n<p>【问题 2】</p>\n<ol>\n<li>判定事务并发执行正确性的准则是什么？如何保证并发事务正确地执行？</li>\n<li>采用相应的加锁、解锁指令，重写售票程序的伪指令序列，以保证正确的并发调度。</li>\n</ol>\n</div>\n<h1 id=\"数据库的备份与恢复\"><a class=\"anchor\" href=\"#数据库的备份与恢复\">#</a> 数据库的备份与恢复</h1>\n<h2 id=\"数据库系统故障的种类\"><a class=\"anchor\" href=\"#数据库系统故障的种类\">#</a> 数据库系统故障的种类</h2>\n<h3 id=\"事务故障\"><a class=\"anchor\" href=\"#事务故障\">#</a> 事务故障</h3>\n<p>是由于程序执行错误而引起事务非预期的、异常终止的故障。</p>\n<p>通常有如下两类错误引起事务执行失败：</p>\n<ol>\n<li>逻辑错误。如非法输入、找不到数据、溢出、超出资源限制等原 因引起的事务执行失败。</li>\n<li>系统错误。系统进入一种不良状态（如死锁），导致事务无法继续执行。</li>\n</ol>\n<h3 id=\"系统故障\"><a class=\"anchor\" href=\"#系统故障\">#</a> 系统故障</h3>\n<p>是指硬件故障、软件（如 DBMS、OS 或应用程序）漏洞的影响，导致丢失了内存中的信息，影响正在执行的事务，但未破坏存储在外存上的信息。</p>\n<h3 id=\"介质故障\"><a class=\"anchor\" href=\"#介质故障\">#</a> 介质故障</h3>\n<p>是指数据库的存储介质发生故障，如磁盘损坏、瞬间强 磁场干扰等。这种故障直接破坏了数据库，会影响到所有正在读取这部 分数据的事务。</p>\n<h2 id=\"数据库备份\"><a class=\"anchor\" href=\"#数据库备份\">#</a> 数据库备份</h2>\n<p>数据转储是将数据库自制到另一个磁盘或磁带上保存起来的过程，又称为数据备份。</p>\n<ol>\n<li>静态转储和动态转储。静态转储是指在转储期间不允许对数据库进行任何存取、修改操作；动态转储是在转储期间允许对数据库进行存取、修改操作，因此， 转储和用户事务可并发执行。</li>\n<li>海量转储和增量转储。海量转储是指每次转储全部数据；增量转储是指每次只转储上次转储后更新过的数据。</li>\n<li>日志文件。在事务处理的过程中，DBMS 把事务开始、事务结束以及对数据库的插入、删除和修改的每一次操作写入日志文件。</li>\n<li>数据库镜像。为了避免磁盘介质出现故障影响数据库的可用性，许多 DBMS 提供数据库镜像功能用于数据库恢复。</li>\n</ol>\n<h2 id=\"数据库恢复\"><a class=\"anchor\" href=\"#数据库恢复\">#</a> 数据库恢复</h2>\n<p>要使数据库在发生故障后能够恢复，必须建立冗余数据，在故障发生后利用这些冗余数据实施数据<br />\n库恢笔，常用的是数据转储和日志文件。</p>\n<h3 id=\"故障恢复的两个操作\"><a class=\"anchor\" href=\"#故障恢复的两个操作\">#</a> 故障恢复的两个操作</h3>\n<ol>\n<li>撤销事务 (UNDO)：将未完成的事务撤销，使数据库恢复到事务执行前的正确状态。<br />\n撤销事务的过程：反向扫描日志文件（由后向前扫描），查找事务的更新操作；对该事务的更新操作执行逆操作，用日志文件记录中更新前的值写入数据库，插入的记录从数据库中删除，删除的记录重新插入数据库中；继续反向扫描日志文件，查找该事务的其它更新操作并执行逆操作直至事务开始标志。</li>\n<li>重做事务 (REDO)：将已提交的事务重新执行。<br />\n重做事务的过程：从事务的开始标志起，正向扫描日志文件，重新执行日志文件登记的该事务对数据库的所有操作，直至事务结束标识</li>\n</ol>\n<h3 id=\"故障恢复策略\"><a class=\"anchor\" href=\"#故障恢复策略\">#</a> 故障恢复策略</h3>\n<h4 id=\"事务故障的恢复\"><a class=\"anchor\" href=\"#事务故障的恢复\">#</a> 事务故障的恢复</h4>\n<p>事务故障是事务在运行至正常终止点（SUMMIT 或 ROLLBACK）前终止，日志文件只有该事务的开始标识而没有结束标识。对这类故障的恢复通常是通过撤销（UNDO）产生故障的事务，使数据库恢复到该事务执行前的正确状态来完成的。<br />\n具体做法：</p>\n<ol>\n<li>反向扫描日志文件，查找该事务的更新操作。</li>\n<li>对事务的更新操作执行逆操作。</li>\n<li>继续反向扫描日志文件，查找该事务的其他更新操作，并做同样的处理，直到事务的开始标志。</li>\n</ol>\n<p>注：事务故障的恢复是由系统自动完成的，对用户是透明的。</p>\n<h4 id=\"系统故障的恢复\"><a class=\"anchor\" href=\"#系统故障的恢复\">#</a> 系统故障的恢复</h4>\n<p>系统故障会使数据库的数据不一致：<br />\n一是未完成的事务对数据库的更新可能已经写入数据库；<br />\n二是已提交的事务对数据库的更新可能还在缓冲区没来得及写入数据库。<br />\n因此对于系统故障，恢复操作是 UNDO+REDO：</p>\n<ol>\n<li>撤销故障发生时未完成的事务（UNDO）。</li>\n<li>重做已经提交的事务（REDO）。</li>\n</ol>\n<h4 id=\"介质故障的恢复\"><a class=\"anchor\" href=\"#介质故障的恢复\">#</a> 介质故障的恢复</h4>\n<p>介质故障时数据库遭到破坏，需要重装数据库，一般需要 DBA 的参与，装载故障前最近一次的备份和故障前的日志文件副本，再按照系统故障的恢复过程执行撤销（UNDO）和重做（REDO）来恢复。</p>\n<p>检查点机制（CHECKPOINT)：在日志中设置检查点，当发生故障需要利用日志文件恢复时，反向扫描日志文件，找到检查点，确认检查点时刻正在执行的事务（活动事务），即检查点前有事务开始标志但没有事务结束标志。<br />\n对于检查点后提交的事务，执行 REDO（重做）<br />\n对于检查点后未提交的事务，执行 UNDO（撤销）</p>\n<div class=\"note primary\">\n<p>【说明】<br />\n如果一个数据库恢复系统采用检查点机制，且其日志文件如表 5-1 所示，第一列表示日志记录编号，第二列表示日志记录内容，&lt;Ti，START&gt; 表示事务 Ti 开始执，&lt;Ti，COMMIT &gt; 表示事务 Ti 提交，&lt;Ti，D，V1，V2 &gt; 表示事务 Ti 将数据项 D 的值由 V1 修改为 V2，<br />\n请回答以下问题。<br />\n【问题 1】（6 分）<br />\n假设系统开始执行前 X=100, Y=50, Z=10，系统出错恢复后，X，Y，Z 各自的数值是多少？<br />\n【问题 2】（4 分）<br />\n系统发生事务故障时，故障恢复有撤销事务（UNDO）和重做事务（REDO）两个操作，<br />\n请给出系统恢复时需要 REDO 的事务列表和需要 UNDO 的事务列表。<br />\n【问题 3】（5 分）<br />\n请简要描述系统出错后，基于检查点的恢复过程。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VXQmJ1U2tjVEJCRmo2TDFiTVQ4aUpjQnpGYzIyR2Z5VWx6OW11ckJrXzRtS0E_ZT1pc050VUk.png\" alt=\"\" /></p>\n</div>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E4%BA%91%E8%AE%A1%E7%AE%97%E4%B8%8E%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E4%BA%91%E8%AE%A1%E7%AE%97%E4%B8%8E%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/",
            "title": "软考中级——云计算与大数据处理",
            "date_published": "2024-05-15T11:24:10.000Z",
            "content_html": "<h1 id=\"云计算基础知识\"><a class=\"anchor\" href=\"#云计算基础知识\">#</a> 云计算基础知识</h1>\n<p>权威定义：云计算是一种将可伸缩、弹性、共享的物理和虚拟资源池以按需自服务的方式供应和管理，并提供网络访问的模式。</p>\n<p>狭义：云计算是一种提供资源的网络，使用者可以随时获取 “云” 上的资源，按需求量使用，并且可以看成是无限扩展的，只要按使用量付费就可以。</p>\n<p>是以一种方便的使用方式和服务模式，通过互联网按需访问资源池模型（例如网络、服务器、存储、应用程序和服务），以快速和最少的管理工作为用户提供服务</p>\n<h1 id=\"云计算的关键特征\"><a class=\"anchor\" href=\"#云计算的关键特征\">#</a> 云计算的关键特征</h1>\n<h2 id=\"关键特征\"><a class=\"anchor\" href=\"#关键特征\">#</a> 关键特征</h2>\n<ul>\n<li>广泛的网络接入</li>\n<li>可测量的服务</li>\n<li>多租户</li>\n<li>按需自服务</li>\n<li>快速的弹性和可扩展性</li>\n<li>资源池化</li>\n</ul>\n<h2 id=\"其它关键特征\"><a class=\"anchor\" href=\"#其它关键特征\">#</a> 其它关键特征</h2>\n<ul>\n<li>虚拟化技术</li>\n<li>可靠性高</li>\n<li>性价比高</li>\n</ul>\n<h1 id=\"云计算的分类\"><a class=\"anchor\" href=\"#云计算的分类\">#</a> 云计算的分类</h1>\n<h2 id=\"按云部署模式和云应用范围分类\"><a class=\"anchor\" href=\"#按云部署模式和云应用范围分类\">#</a> 按云部署模式和云应用范围分类</h2>\n<h3 id=\"公有云\"><a class=\"anchor\" href=\"#公有云\">#</a> 公有云</h3>\n<p>一般是被一个云计算服务提供商所拥有，该组织将云计算服务销售给公众，公有云通常在远离客 户建筑物的地方托管（一般为云计算服务提供商建立的数据中心）</p>\n<h3 id=\"社区云\"><a class=\"anchor\" href=\"#社区云\">#</a> 社区云</h3>\n<p>云的基础设施被一些组织所共享，并为一个有共同关注点的社区服务。可以是该组织或某个第三方负责管理。</p>\n<h3 id=\"私有云\"><a class=\"anchor\" href=\"#私有云\">#</a> 私有云</h3>\n<p>云的基础设施是为一个客户单独使用而构建的，因而提供对数据、安全性和服务质量的最有效控制。私有云可部署在企业数据中心中，也可部署在一个主机托管场所，被一个单一的组织拥有或租用。</p>\n<h3 id=\"混合云\"><a class=\"anchor\" href=\"#混合云\">#</a> 混合云</h3>\n<p>云的基础设施由以上两种或两种以上的云（私有、社区或公有）组成。</p>\n<h2 id=\"按云计算的服务层次和服务类型分类\"><a class=\"anchor\" href=\"#按云计算的服务层次和服务类型分类\">#</a> 按云计算的服务层次和服务类型分类</h2>\n<h3 id=\"基础设施即服务\"><a class=\"anchor\" href=\"#基础设施即服务\">#</a> 基础设施即服务</h3>\n<p>基础设施即服务（Infrastructure as a Service,IaaS），提供虚拟化的计算资源，如虚拟机、存储、网络和操作系统。其核心技术是虚拟化。</p>\n<h3 id=\"平台即服务\"><a class=\"anchor\" href=\"#平台即服务\">#</a> 平台即服务</h3>\n<p>平台即服务（Platform as a Service,PaaS），为开发、测试和管理软件应用程序提供按需开发的环境。其核心技术是分布式并行计算。PaaS 实际上是指将软件研发的平台作为一种服务。</p>\n<h3 id=\"软件即服务\"><a class=\"anchor\" href=\"#软件即服务\">#</a> 软件即服务</h3>\n<p>软件即服务（Software as a Service,SaaS），通过互联网提供按需软件付费应用程序，云计算提供商托管和管理软件应用程序，并允许用户连接到应用程序并通过互联网访问应用程序。客户可以自己定制、配置、组装来得到满足自身需求 的软件系统。</p>\n<h1 id=\"云关键技术\"><a class=\"anchor\" href=\"#云关键技术\">#</a> 云关键技术</h1>\n<p>虚拟化技术 、分布式数据存储 、并行计算、运营支撑管</p>\n<h1 id=\"大数据处理基础知识\"><a class=\"anchor\" href=\"#大数据处理基础知识\">#</a> 大数据处理基础知识</h1>\n<p>大数据的特征一般采用 5V 来描述：</p>\n<ol>\n<li>多样性（Variety）：数据类型繁多。除了以往的以文本为主的结构化数据，非结构化数据越来越多，如音频，视频，图片，地理位置信息等。</li>\n<li>速度（Velocity）：处理速度快。一方面是数据的增长速度快，另一方面是要求数据访问、处理、交付的速度快，通常要求具有时效性。是大数据区别于传统数据挖掘的最显著特征。</li>\n<li>大量（Volume）：数据体量巨大。聚合在一起供分析的数据规模非常庞大。</li>\n<li>价值（Value）：价值密度低。大数据的本质是需要从海量数据中获取具有高价值的数据。</li>\n<li>真实性（Veracity)：是指数据是来自于各种、各类信息系统网络以及网络终端的行为或痕迹。</li>\n</ol>\n<h1 id=\"大数据处理流程\"><a class=\"anchor\" href=\"#大数据处理流程\">#</a> 大数据处理流程</h1>\n<p>从大数据生命周期的角度看，大数据处理的基本流程包括：数据采集、数据分析和数据解释。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVRlFSVU1oMWFWQWdvMURfLUx4MFdRQkl6TFVpUjYyVWtoWGtDNW40eGhhbEE_ZT1LN24weHo.png\" alt=\"\" /></p>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/",
            "title": "软考中级——数据库设计",
            "date_published": "2024-05-11T07:51:17.000Z",
            "content_html": "<h1 id=\"数据库设计概述\"><a class=\"anchor\" href=\"#数据库设计概述\">#</a> 数据库设计概述</h1>\n<h2 id=\"数据库应用系统的生命期\"><a class=\"anchor\" href=\"#数据库应用系统的生命期\">#</a> 数据库应用系统的生命期</h2>\n<p>数据库应用系统的生命周期分为<strong>数据库规划、需求描述与分析、数据库与应用程序设计、数据库设 计实现、测试、运行维护</strong> 6 个阶段。</p>\n<h3 id=\"数据库规划\"><a class=\"anchor\" href=\"#数据库规划\">#</a> 数据库规划</h3>\n<p>数据库规划的任务是确定软件的开发目标及可行性。该阶段应该给出问题定义、可行性分析和项目开发计划。</p>\n<h3 id=\"需求描述与分析\"><a class=\"anchor\" href=\"#需求描述与分析\">#</a> 需求描述与分析</h3>\n<p>需求描述与分析是以用户的角度，从系统中的数据和业务规则入手，收集和整理用户的信息，以特定的方式加以描述，是下一步工作的基础。</p>\n<h3 id=\"数据库与应用程序设计\"><a class=\"anchor\" href=\"#数据库与应用程序设计\">#</a> 数据库与应用程序设计</h3>\n<p>数据库的设计是对用户数据的组织和存储设计；应用程序设计是在数据库设计基础上对数据操作及业务实现的设计，包括事务设计和用户界面设计。</p>\n<h3 id=\"数据库设计实现\"><a class=\"anchor\" href=\"#数据库设计实现\">#</a> 数据库设计实现</h3>\n<p>数据库设计实现是依照设计，使用 DBMS 支持的数据定义语言实现数据库的建立，用高级语言编写应用程序。</p>\n<h3 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h3>\n<p>测试是在数据库系统投入使用之前，通过精心制订的测试计划和测试数据来测试系统的性能是否满足设计要求，以便发现问题。</p>\n<h3 id=\"运行维护\"><a class=\"anchor\" href=\"#运行维护\">#</a> 运行维护</h3>\n<p>数据库应用系统经过测试、试运行后即可正式投入运行。运行维护是系统投入使用后，必须不断地对其进行评价、调整和修改，直至系统消亡。</p>\n<h2 id=\"数据库设计的一般策略\"><a class=\"anchor\" href=\"#数据库设计的一般策略\">#</a> 数据库设计的一般策略</h2>\n<p>数据库设计的一般策略有两种：自顶向下和自底向上。</p>\n<h2 id=\"数据库设计的基本步骤\"><a class=\"anchor\" href=\"#数据库设计的基本步骤\">#</a> 数据库设计的基本步骤</h2>\n<p>一般将数据库设计分为如下 6 个阶段：</p>\n<ol>\n<li>用户需求分析。</li>\n<li>概念结构设计。</li>\n<li>逻辑结构设计。</li>\n<li>物理结构设计。</li>\n<li>数据库实施阶段。</li>\n<li>数据库运行和维护阶段。</li>\n</ol>\n<h1 id=\"系统需求分析\"><a class=\"anchor\" href=\"#系统需求分析\">#</a> 系统需求分析</h1>\n<h2 id=\"需求分析的任务-方法和目标\"><a class=\"anchor\" href=\"#需求分析的任务-方法和目标\">#</a> 需求分析的任务、方法和目标</h2>\n<p>需求分析阶段的任务：综合各个用户的应用需求，对现实世界要处理的对象（组织、部门和企业等）进行详细调查，在了解现行系统的概况，确定新系统功能的过程中，收集支持系统目标的基础数据及处理方法。</p>\n<h3 id=\"信息要求\"><a class=\"anchor\" href=\"#信息要求\">#</a> 信息要求</h3>\n<p>用户需要在系统中保存哪些信息，由这些保存的信息要得到什么样的信息，这些信息以及信息间应当满足的完整性要求。</p>\n<h3 id=\"处理要求\"><a class=\"anchor\" href=\"#处理要求\">#</a> 处理要求</h3>\n<p>用户在系统中要实现什么样的操作功能，对保存信息的处理过程和方式，各种操作处理的频度、响应时间要求、处理方式等以及处理过程中的安全性要求和完整性要求。</p>\n<h3 id=\"系统要求\"><a class=\"anchor\" href=\"#系统要求\">#</a> 系统要求</h3>\n<p>包括安全性要求、使用方式要求和可扩充性要求。</p>\n<ul>\n<li>安全性要求：系统有几种用户使 用，每一种用户的使用权限如何。</li>\n<li>使用方式要求：用户的使用环境是什么，平均有多少用户同时使用，最高峰有多少用户同时使用，有无查询相应的时间要求等。</li>\n<li>可扩充性要求：对未来功能、性能和应用访问的可扩充性的要求。</li>\n</ul>\n<h2 id=\"需求分析阶段的文档\"><a class=\"anchor\" href=\"#需求分析阶段的文档\">#</a> 需求分析阶段的文档</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZRUgxWGVSeFhoSnFnY3FBU0VrOHJ3QlgzM0hzdjRsS2NrWXp1WG9ZSnlpT0E_ZT1Ja3dKMmU.png\" alt=\"\" /></p>\n<p>需求分析阶段的成果是系统需求说明书，主要包括<strong>数据流图、数据字典、各种说明性表格、统计输出表和系统功能结构图</strong>等。</p>\n<p>数据字典（Data Dictionary, DD）是各类数据描述的集合，它是关于数据库中数据的描述，即元数据，而不是数据本身。如用户将向数据库中输入什么信息，从数据库中要得到什么信息，各类信息的内容和结构，信息之间的联系等。</p>\n<p>数据字典包括<strong>数据项、数据结构、数据流、数据存储和处理过程</strong> 5 个部分</p>\n<h1 id=\"概念结构设计\"><a class=\"anchor\" href=\"#概念结构设计\">#</a> 概念结构设计</h1>\n<p>概念结构设计是在需求分析的基础上，依照需求分析中的信息要求，对用户信息加以分类、聚集和概括，建立信息模型。</p>\n<p>概念结构设计最著名最常用的方法是实体 - 联系方法，简称 E - R 方法。它将现实世界的信息结构统 一用实体、属性以及实体之间的联系来描述。</p>\n<p>概念结构设计工作步骤包括：选择局部应用、逐一设计分 E-R 图和 E-R 图合并。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0ViX2JIb0NucGZWRmhselI3OWxJcVIwQnVWWVVLaFRjUUFYTldCcjctdUd0aWc_ZT12MnhpeE8.png\" alt=\"\" /></p>\n<h2 id=\"选择局部应用\"><a class=\"anchor\" href=\"#选择局部应用\">#</a> 选择局部应用</h2>\n<p>选择适当层次的数据流图，让这一层的每一部分对应一个局部应用，实现某一项功能，从这一层入手，就能很好地设计分 E-R 图。</p>\n<h2 id=\"逐一设计分-e-r-图\"><a class=\"anchor\" href=\"#逐一设计分-e-r-图\">#</a> 逐一设计分 E-R 图</h2>\n<p>划分好各个局部应用之后，就要对每一个局部应用逐一设计分 E-R 图，又称为局部 E-R 图。</p>\n<p>现实生活中许多事物，作为实体还是属性没有明确的界定，这需要根据具体情况而定，一般遵循以下两条准则：</p>\n<ol>\n<li>\n<p>属性不可再分，即属性不再具有需要描述的性质，不能有属性的属性。</p>\n</li>\n<li>\n<p>属性不能与其他实体发生联系，联系是实体与实体间的联系。</p>\n</li>\n</ol>\n<h2 id=\"e-r-图合并\"><a class=\"anchor\" href=\"#e-r-图合并\">#</a> E-R 图合并</h2>\n<p>根据局部应用设计好各局部 E-R 图之后，就可以对各分 E-R 图进行合并。合并的目的在于解决冲突，消除冗余。</p>\n<p>分 E-R 图合并时，它们之间存在的冲突主要有以下三类：</p>\n<ol>\n<li>属性冲突：同一属性可能会存在于不同的分 E-R 图中，由于设计人员不同或是出发点不同，对属性的类型、取值范围、数据单位等可能会不一致。</li>\n<li>命名冲突：相同意义的属性，在不同的分 E-R 图上有着不同的命名，或是名称相同的属性在不同的分 E-R 图中代表着不同的意义，这些也需要进行统一。</li>\n<li>结构冲突：同一实体在不同的分 E-R 图中有不同的属性，同一对象在某一分 E-R 图中被抽象为实体而在另一分 E-R 图中又被抽象为属性。</li>\n</ol>\n<h1 id=\"逻辑结构设计\"><a class=\"anchor\" href=\"#逻辑结构设计\">#</a> 逻辑结构设计</h1>\n<p>逻辑结构设计就是在概念结构设计的基础上进行数据模型设计，可以是层次模型、 网状模型和关系模型。</p>\n<p>逻辑结构设计阶段的主要工作步骤包括<strong>确定数据模型、将 E-R 图转换成指定的数据模型、确定完整性约束和确定用户视图</strong>。</p>\n<h2 id=\"e-r-图向关系模式的转换\"><a class=\"anchor\" href=\"#e-r-图向关系模式的转换\">#</a> E-R 图向关系模式的转换</h2>\n<ol>\n<li>\n<p>实体向关系模式的转换</p>\n</li>\n<li>\n<p>联系向关系模式的转换</p>\n</li>\n</ol>\n<h2 id=\"关系模式的规范化\"><a class=\"anchor\" href=\"#关系模式的规范化\">#</a> 关系模式的规范化</h2>\n<p>由 E-R 图转换得来的初始关系模式并不能完全符合要求，还会有数据冗余、更新异常存在，这就需要经过进 一步的规范化处理。</p>\n<ol>\n<li>根据语义确定各关系模式的数据依赖。</li>\n<li>根据数据依赖确定关系模式的范式，判断关系模式是否达到了 3NF 或 4NF。</li>\n<li>如果关系模式不符合要求，要进行分解，达到 3NF、BCNF 或 4NF。</li>\n<li>关系模式的评价及修正。有时根据处理要求，可能还需要增加部分冗余以满足处理要求，这就需要做部分关系模式的处理，分解、合并或增加冗余属性，提高存储效率和处理效率。</li>\n</ol>\n<h2 id=\"确定完整性约束\"><a class=\"anchor\" href=\"#确定完整性约束\">#</a> 确定完整性约束</h2>\n<h2 id=\"用户视图的确定\"><a class=\"anchor\" href=\"#用户视图的确定\">#</a> 用户视图的确定</h2>\n<ol>\n<li>根据数据流图确定处理过程使用的视图。</li>\n<li>根据用户类别确定不同用户使用的视图。</li>\n</ol>\n<h1 id=\"数据库的物理设计\"><a class=\"anchor\" href=\"#数据库的物理设计\">#</a> 数据库的物理设计</h1>\n<p>数据库在物理设备上的存储结构与存取方法称为数据库的物理结构，它依赖于给定的计算机系统。为一个给定的逻辑数据模型设计一个最适合应用要求的物理结构的过程，就是数据库的物理设计。</p>\n<h2 id=\"数据库物理设计工作过程\"><a class=\"anchor\" href=\"#数据库物理设计工作过程\">#</a> 数据库物理设计工作过程</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjTXg3MFF5cHpWTXNsbl9Qc25fRjZnQlp2MzYzeTFZbFFadERMcGo4TFFROHc_ZT15c0dGRnA.png\" alt=\"\" /></p>\n<h2 id=\"数据库物理设计工作步骤\"><a class=\"anchor\" href=\"#数据库物理设计工作步骤\">#</a> 数据库物理设计工作步骤</h2>\n<p>物理设计的主要工作步骤包括：<strong>确定数据分布、存储结构和访问方式。</strong></p>\n<h3 id=\"确定数据分布\"><a class=\"anchor\" href=\"#确定数据分布\">#</a> 确定数据分布</h3>\n<ol>\n<li>\n<p>根据不同应用分布数据。</p>\n</li>\n<li>\n<p>根据处理要求确定数据的分布。</p>\n</li>\n<li>\n<p>对数据的分布存储必然会导致数据的逻辑结构的变化，要对关系模式做新的调整，回到数据库 逻辑设计阶段做必要的修改。</p>\n</li>\n</ol>\n<h3 id=\"确定数据的存储结构\"><a class=\"anchor\" href=\"#确定数据的存储结构\">#</a> 确定数据的存储结构</h3>\n<p>存储结构具体指数据文件中记录之间的物理结构。</p>\n<p>为提高数据的访问速度，通常会采用索引技术。在物理设计阶段，要根据数据处理和修改要求， 确定数据库文件的索引字段和索引类型。</p>\n<h3 id=\"确定数据的访问方式\"><a class=\"anchor\" href=\"#确定数据的访问方式\">#</a> 确定数据的访问方式</h3>\n<ol>\n<li>存储记录结构设计。</li>\n<li>存储记录布局。</li>\n<li>存取方法的设计</li>\n</ol>\n<h1 id=\"数据库运行维护与管理\"><a class=\"anchor\" href=\"#数据库运行维护与管理\">#</a> 数据库运行维护与管理</h1>\n<h2 id=\"数据库重组和重构\"><a class=\"anchor\" href=\"#数据库重组和重构\">#</a> 数据库重组和重构</h2>\n<p>数据库重组是指在不改变数据库逻辑和物理结构的情况下，去除数据库存储文件中的废弃空间以及碎片空间中的指针链，使数据库记录在物理上紧连。</p>\n<p>数据库系统运行过程中，会因为一些原因而对数据库的结构做修改，称为数据库重构。重构包括表结构的修改和视图的修改。</p>\n<h2 id=\"数据库系统的审计\"><a class=\"anchor\" href=\"#数据库系统的审计\">#</a> 数据库系统的审计</h2>\n<p>审计是一种 DBMS 工具，它记录数据库资源和权限的使用情况。启用审计功能，可以产生审计跟 踪信息，包括哪些数据库对象受到了影响，谁在什么时候执行了这些操作。</p>\n<p>审计是被动的，它只能跟踪对数据库的修改而不能防止，但作为一个安全性手段，起到对非法 入侵的威慑作用，可以据此追究非法入侵者的法律责任。</p>\n<p>审计功能的开启会影响系统的性能。</p>\n<h2 id=\"数据库的存储管理\"><a class=\"anchor\" href=\"#数据库的存储管理\">#</a> 数据库的存储管理</h2>\n<p>在数据库系统运行过程中，随着数据的不断变更，会影响到系统的响应效率。通过以下手段进行存储管理， 可有效地提高系统性能。</p>\n<ol>\n<li>索引文件和数据文件分开存储，事务日志文件存储在高速设备上。</li>\n<li>适时修改数据文件和索引文件的页面大小。</li>\n<li>定期对数据进行排序。</li>\n<li>增加必要的索引项。</li>\n</ol>\n<h2 id=\"数据安全性管理\"><a class=\"anchor\" href=\"#数据安全性管理\">#</a> 数据安全性管理</h2>\n<ol>\n<li>建立网络安全，主要是防火墙的设置。</li>\n<li>操作系统级安全，进行登录用户的管理。</li>\n<li>DBMS 级安全，对访问数据库的用户进行密码验证。</li>\n<li>角色和用户的授权管理。</li>\n<li>建立视图和存储过程加强安全性。</li>\n<li>使用审计功能，为追究非法入侵者法律责任提供证据，发现安全漏洞。</li>\n</ol>\n<h2 id=\"sql-语句的编码检验\"><a class=\"anchor\" href=\"#sql-语句的编码检验\">#</a> SQL 语句的编码检验</h2>\n<ol>\n<li>尽可能地减少多表查询或建立物化视图。</li>\n<li>以不相关子查询替代相关子查询。</li>\n<li>只检索需要的列。</li>\n<li>用带 IN 的条件子句等价替换 OR 子句。</li>\n<li>经常提交 COMMIT，以尽早释放锁</li>\n</ol>\n<h2 id=\"表设计的评价\"><a class=\"anchor\" href=\"#表设计的评价\">#</a> 表设计的评价</h2>\n<ol>\n<li>如果频繁的访问是对两个相关的表进行连接操作，则考虑将其合并。</li>\n<li>如果频繁的访问只是在表中的某一部分字段上进行，则考虑分解表，将该部分单独作为一个表。</li>\n<li>对于更新很少的表，引入物化视图。</li>\n</ol>\n<h2 id=\"索引维护和改进\"><a class=\"anchor\" href=\"#索引维护和改进\">#</a> 索引维护和改进</h2>\n<ol>\n<li>如果查询是瓶颈，则在关系上建立适应的索引，通常在作为查询条件的属性上建立索引，可以提高查询效率。</li>\n<li>如果更新是瓶颈，每次更新都会重建表上的索引，引起效率的降低，则考虑删除某些索引。</li>\n<li>选择适当的索引类型，如果是经常使用范围查询，则 B 树索引比散列索引更高效。</li>\n<li>将有利于大多数据查询和更新的索引设为聚簇索引。</li>\n</ol>\n<h1 id=\"er-图向关系模式的转换\"><a class=\"anchor\" href=\"#er-图向关系模式的转换\">#</a> ER 图向关系模式的转换</h1>\n<h2 id=\"实体向关系模式的转换\"><a class=\"anchor\" href=\"#实体向关系模式的转换\">#</a> 实体向关系模式的转换</h2>\n<p>ER 图中的每一个实体单独转换成一个关系模式，实体名对应关系模式的名称，实体的属性转换为关系模式的属性，实体标识符就是关系的码。</p>\n<p>班主任（<ins>工号</ins>，姓名，身份证号，住址）</p>\n<p>班级（<ins>班级编号</ins>，名称，人数）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZY2VtYTV3ZHhCSmlETTQtN2tDUjdFQnVPV0dFaUlya0lXbmwtZm9kRmZtekE_ZT1YQW1RdU0.png\" alt=\"\" /></p>\n<h2 id=\"一对一联系的转换-1-1\"><a class=\"anchor\" href=\"#一对一联系的转换-1-1\">#</a> 一对一联系的转换 (1: 1)</h2>\n<p>通常一对一联系不需要将其转换为一个独立的关系模式，只需要将联系归并到关联的两个实体的任意一方，给待归并的一方实体属性集中增加另一方实体的码和该联系的属性即可，归并后的实体码保持不变。</p>\n<p>班主任（<ins>工号</ins>，姓名，身份证号，住址，班级编号，任职时间）</p>\n<p>或： 班级（<ins>班级编号</ins>，名称，人数，班主任工号，任职时间）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVTjA1cm9UUWs1THF6WWpUWVZSQUlJQlVfdUNGWjN2TWhvSnJIQUpveFljMGc_ZT1QZkIyQ08.png\" alt=\"\" /></p>\n<h2 id=\"一对多联系的转换-1\"><a class=\"anchor\" href=\"#一对多联系的转换-1\">#</a> 一对多联系的转换 (1: *)</h2>\n<p>通常一对多联系也不需要将其转换为一个独立的关系模式，只需要将联系归并到关联的两个实体的多方，给待归并的多方实体属性集中增加一方实体的码和该联系的属性即可，归并后的多方实体码保持不变。</p>\n<p>员工（<ins>工号</ins>，姓名，身份证号，公司编号，入职时间，离职时间）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0Vidk9GeGdEMFc1RGpQQkF3aThEWldZQnJKRkRJemxfN1oxNDRPOGNLaUlieGc_ZT1oZGJhOFc.png\" alt=\"\" /></p>\n<h2 id=\"多对多联系的转换\"><a class=\"anchor\" href=\"#多对多联系的转换\">#</a> 多对多联系的转换 (*: *)</h2>\n<p>多对多联系只能转换成一个独立的关系模式，关系模式的名称取联系的名称，关系模式的属性 取该联系所关联的两个多方实体的码及联系的属性，关系的码是多方实体的码构成的属性组。</p>\n<p>选修（<ins>学号</ins>，课程编号，成绩，出勤率）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRNXlIRlJ3RmlOSG5fMVdodThwMFIwQkRKZnRJSlFEeDdxLUx5b1dpaFVDOGc_ZT1SMmVmNFA.png\" alt=\"\" /></p>\n<h2 id=\"多对多对多联系的转换\"><a class=\"anchor\" href=\"#多对多对多联系的转换\">#</a> 多对多对多联系的转换 (*: *: *)</h2>\n<p>三方联系的多对多对多（*：*：*）也是一样，只能转换成一个独立的关系模式，关系模式的属性取三方实体的码及联系的属性，关系模式的码为三方实体的码组成的属性组。如：一个供应商可 以给多个项目供应多种零件，一个项目可以使用多个供应商供应的多种零件。</p>\n<p>供应（<ins>供应商编号</ins>，项目编号，零件编号，供应数量）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYMWJjV1k4QmhsQXFrbnBucWxjX1k4Qk9XTEFUa0N2RmNYcUtJczU3UmpQelE_ZT1yNDdSSnk.png\" alt=\"\" /></p>\n<h2 id=\"一些特殊情况\"><a class=\"anchor\" href=\"#一些特殊情况\">#</a> 一些特殊情况</h2>\n<p>假设被检测者可以选择一家或多家医院做核酸检测，但是同一天只做一次核酸检测。</p>\n<p>检测（<ins>医院名称</ins>，被检测者身份证号，检测日期，检测结果）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZQlIzOU1oSXVWTnN3aGZtWHVEVm9zQklSUW84Ul9XNjFoMDBRaHpxU0x4cEE_ZT02WlJ5Ulk.png\" alt=\"\" /></p>\n<p>接种（<ins>被接种者身份证号</ins>，接种日期，医院名称，供应商名称）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZOEJONUZ1M3RsQW1MT3I4N2NSUTJ3QkpZQWcyaElDbDZVUVRmRTZ3dnRNYXc_ZT1wQXkwdlg.png\" alt=\"\" /></p>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8C%E7%9F%A5%E8%AF%86/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E8%A1%8C%E7%9F%A5%E8%AF%86/",
            "title": "软考中级——系统开发和运行知识",
            "date_published": "2024-05-07T11:19:23.000Z",
            "content_html": "<h1 id=\"软件生存周期\"><a class=\"anchor\" href=\"#软件生存周期\">#</a> 软件生存周期</h1>\n<p>软件生存周期包括<strong>可行性分析与项目开发计划、需求分析、概要设计、详细设计、编码和单元 测试、综合测试及维护</strong>阶段。</p>\n<h2 id=\"可行性分析与项目开发计划\"><a class=\"anchor\" href=\"#可行性分析与项目开发计划\">#</a> 可行性分析与项目开发计划</h2>\n<p>主要任务是确定软件的开发目标及可行性。该阶段应该给出问题定义、可行性分析和项目开发计划。</p>\n<h2 id=\"需求分析\"><a class=\"anchor\" href=\"#需求分析\">#</a> 需求分析</h2>\n<p>需求分析阶段的任务不是具体地解决问题，而是准确地确定软件系统必须做什么，确定软件系统的功能、性能、数据和界面等要求，从而确定系统的逻辑模型。</p>\n<h2 id=\"概要设计\"><a class=\"anchor\" href=\"#概要设计\">#</a> 概要设计</h2>\n<p>在本阶段，开发人员需要将确定的功能需求转换成相应的体系结构。概要设计就是设计软件的结构，明确软件有哪些模块组成，模块的层次以及功能。与此同时，还要设计应用系统的总体数据结构和数据库结构。</p>\n<h2 id=\"详细设计\"><a class=\"anchor\" href=\"#详细设计\">#</a> 详细设计</h2>\n<p>主要任务就是对每个模块完成的功能进行描述，不是编写程序，而是设计出程序的详细规格说明， 使程序员可以根据它们写出实际的程序代码</p>\n<h2 id=\"编码和单元测试\"><a class=\"anchor\" href=\"#编码和单元测试\">#</a> 编码和单元测试</h2>\n<p>就是把每个模块的结构转换成计算机可接受的程序代码，即写成某种特定程序设计语言表示的源 程序清单，并仔细测试编写出每一个模块。</p>\n<h2 id=\"综合测试\"><a class=\"anchor\" href=\"#综合测试\">#</a> 综合测试</h2>\n<p>综合测试阶段的关键任务是通过各种类型的测试（及相应的调试）使软件达到预定的要求。最基本的测试是集成测试和验收测试。</p>\n<h2 id=\"维护\"><a class=\"anchor\" href=\"#维护\">#</a> 维护</h2>\n<p>维护阶段是软件生存期中时间最长的阶段。软件一旦交付正式投入运行后便进入软件维护阶段。 该阶段的关键任务是通过各种必要的维护活动使系统持久地满足用户的需要。每一项维护活动都应该准确地记录下来，作为正式的文档资料加以保存。</p>\n<h1 id=\"软件生存周期模型\"><a class=\"anchor\" href=\"#软件生存周期模型\">#</a> 软件生存周期模型</h1>\n<h2 id=\"瀑布模型\"><a class=\"anchor\" href=\"#瀑布模型\">#</a> 瀑布模型</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWQ0tCcTAtbnFsQ2c3OU56N0dpVk5vQnE3UlhmMlNydWVCYjZIc3BZRnJMZlE_ZT03TzZqbXU.png\" alt=\"\" /></p>\n<p>瀑布模型是将软件生存周期各个活动规定为依线性顺序连接的若 干阶段的模型。它规定了由前至后、相互衔接的固定次序，如同瀑布流水，逐级下落。</p>\n<p>瀑布模型假设，一个待开发的系统需求是 完整的、简明的、一致的，而且可以先于设计和实现完成之前产生。</p>\n<p>优点：容易理解，管理成本低；强调开发的阶段性早期计划及需求调查和产品测试。</p>\n<p>不足：客户必须能够完整、正确和清晰地表达他们的需要；在开始的两个或三个阶段中，很难评估真正的进度状态；当接近项目结束时，出现了大量的集成和测试工作；直到项目结束之前，都不能演示系统的能力。</p>\n<p>在瀑布模型中，需求或设计中的错误往往只有到了项目后期才能够被发现，对于项目风险的控 制能力较弱，从而导致项目常常延期完成，开发费用超预算。</p>\n<h2 id=\"增量模型\"><a class=\"anchor\" href=\"#增量模型\">#</a> 增量模型</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VURFZwM2lsTWgxR3BRY1JIcjAyeEVVQjBuUnl4aGlGczVVUXpDa05FZDROdXc_ZT1rMnpmS1Q.png\" alt=\"\" /></p>\n<p>增量模型融合了瀑布模型的基本成分和原型实现的迭代特征，它假设可以将需求分段为一系列增量产品，每一增量可以分别地开发。该模型采用随着日程时间的进展而交错的线性序列，每一个线性序列产生软件的一个可发布的 “增量”。增量模型强调每一个增量均发布一个可操作的产品。</p>\n<p>优点：第一个可交付版本所需要的成本和时间很少；开发由增量表示的小系统所承担的风险不大； 由于很快发布了第一个版本，因此可以减少用户需求的变更；运行增量投资，即在项目开始时，可以仅对一个或两个增量投资。</p>\n<p>不足：如果没有对用户的变更要求进行规划，那么产生的初始增量可能会造成后来增量的不稳定； 如果需求不像早期思考的那样稳定和完整，那么一些增量就可能需要重新开发，重新发布；管理发 生的成本、进度和配置的复杂性，可能会超出组织的能力。</p>\n<h2 id=\"演化模型\"><a class=\"anchor\" href=\"#演化模型\">#</a> 演化模型</h2>\n<p>主要针对事先不能完整定义需求的软件开发，是在快速开发一个原型的基础上，根据用户在使用原型的过程中提出的意见和建议对原型进行改进，获得原型的新版本。重复这一过程，最终可得到令用户满意的软件产品。</p>\n<p>优点：任何功能一经开发就能进入测试，以便验证是否符合产品的需求，可以帮助引导出高质量的产品要求。</p>\n<p>缺点：如果不加控制地让用户接触开发中尚未稳定的功能，可能对开发人员及用户都会产生负面影响。</p>\n<h2 id=\"螺旋模型\"><a class=\"anchor\" href=\"#螺旋模型\">#</a> 螺旋模型</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTVDU2MVVSVFZWRHMxZjJyODlReEZrQjJIODRiX0o2cV95dGJoeUJ6NFZ6bFE_ZT1qTTBaemk.png\" alt=\"\" /></p>\n<p>将瀑布模型和演化模型结合起来，加入了两种模型均忽略的风险分析，弥补了两种模型的不足。 螺旋模型将开发过程分为几个螺旋周期，每个螺旋周期大致和瀑布模型相符合。</p>\n<ol>\n<li>制订计划。确定软件的目标，选定实施方案，明确项目开发 的限制条件。</li>\n<li>风险分析。分析所选的方案，识别风险，消除风险。</li>\n<li>实施工程。实施软件开发，验证阶段产品。</li>\n<li>用户评估。评价开发工作，提出修正建议，建立下一个周期的开发计划。</li>\n</ol>\n<p>螺旋模型强调风险分析，使得开发人员和用户对每个演化层出现 的风险有所了解，继而做出应有的反应。因此特别适用于庞大、复杂 并且具有高风险的系统。</p>\n<h2 id=\"喷泉模型\"><a class=\"anchor\" href=\"#喷泉模型\">#</a> 喷泉模型</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VlaWZaaFJHSVQ1T29sTE1iUlV4dDY0QkFibUJXcWJ2SThzX2sxc0tSSmV1MGc_ZT1lMHdPMnU.png\" alt=\"\" /></p>\n<p>喷泉模型是一种以用户需求为动力，以对象作为驱动的模型，适合于面向对象的开发方法。 它克服了瀑布模型不支持软件重用和多项开发活动集成的局限性。 喷泉模型使开发过程具有迭代性和无间隙性。 该模型的各个阶段没有明显的界限，开发人员可以同步进行。</p>\n<p>优点：可以提高软件项目的开发效率，节省开发时间。</p>\n<p>不足：由于喷泉模型在各个开发阶段是重叠的，在开发过程中需要大量的开发人员，不利于项目的管理。此外这种模型要求严格管理文档，使得审核 的难度加大。</p>\n<h1 id=\"典型的软件开发方法\"><a class=\"anchor\" href=\"#典型的软件开发方法\">#</a> 典型的软件开发方法</h1>\n<h2 id=\"结构化开发方法\"><a class=\"anchor\" href=\"#结构化开发方法\">#</a> 结构化开发方法</h2>\n<p>是一种传统的信息系统开发方法，由结构化分析、结构化设计和结构化程序设计构成，它是一种面向数据流的开发方法。其精髓是自顶向下、逐层分解和模块化设计，它的基本原则是功能的分解与抽象。</p>\n<p>结构化方法的开发过程一般是先把系统功能视为一个大的模块，再根据系统分析与设计的要求 对其进行进一步的模块分解或组合。</p>\n<p>结构化方法特别适合于数据处理领域的问题，但是不适合解决规模较大的、比较复杂的项目， 且难以适应需求的变化。</p>\n<h2 id=\"原型化开发方法\"><a class=\"anchor\" href=\"#原型化开发方法\">#</a> 原型化开发方法</h2>\n<p>根据用户初步需求，利用系统开发工具，快速地建立一个系统模型展示给用户，在此基础上与用户交流，最终实现用户需求的信息系统快速开发的方法。</p>\n<p>原型法的优点主要在于能更有效地确认用户需求。</p>\n<p>原型化方法比较适合于用户需求不清、业务理论不确定、需求经常变化的情况。当系统规模不 是很大也不太复杂时，采用该方法是比较好的。</p>\n<h2 id=\"面向对象开发方法\"><a class=\"anchor\" href=\"#面向对象开发方法\">#</a> 面向对象开发方法</h2>\n<p>面向对象开发方法的基本出发点是尽可能按照人类认识世界的方法和思维方法来分析和解决问 题。客观世界是由许多具体的事物、事件、概念和规则组成的，这些均可被看成对象，面向对象方法正是以对象作为最基本的元素，它也是分析问题、解决问题的核心。</p>\n<p>使用面向对象的方法构造的系统具有更好的复用性。面向对象的方法使系统的描述及信息模型的表示与客观实体相对应，符合人们的思维习惯，因此可以缩短开发周期。</p>\n<h2 id=\"敏捷方法\"><a class=\"anchor\" href=\"#敏捷方法\">#</a> 敏捷方法</h2>\n<p>敏捷开发的总体目标是通过 “尽可能早地、持续地对有价值的软件的交付” 使客户满意。通过在软件开发过程中加入灵活性，敏捷方法可以使用户能够在开发周期的后期增加或改变需求。</p>\n<h1 id=\"软件项目管理\"><a class=\"anchor\" href=\"#软件项目管理\">#</a> 软件项目管理</h1>\n<h2 id=\"成本估算\"><a class=\"anchor\" href=\"#成本估算\">#</a> 成本估算</h2>\n<h2 id=\"风险分析\"><a class=\"anchor\" href=\"#风险分析\">#</a> 风险分析</h2>\n<h2 id=\"进度管理\"><a class=\"anchor\" href=\"#进度管理\">#</a> 进度管理</h2>\n<p>进度安排的常用图形描述方法有 Gantt 图（甘特图）和项目计划评审技术（PERT）图。</p>\n<h3 id=\"gantt图\"><a class=\"anchor\" href=\"#gantt图\">#</a> Gantt 图</h3>\n<p>Gantt 图能清晰地描述每个任务从何时开始，到何时结束，任务的进展情况以及各个任务之间的并 行性。但是其缺点是不能清晰地反映出各任务之间的依赖关系，难以确定整个项目的关键所在，也 不能反映计划中有潜力的部分。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYZldmenczMUxCRHRKS3g2dWRoa0NrQkZGMHFfaXRucERQcEw1eEZCQ1ZGSEE_ZT1raUtIcDk.png\" alt=\"\" /></p>\n<h3 id=\"pert-图\"><a class=\"anchor\" href=\"#pert-图\">#</a> PERT 图</h3>\n<p>PERT 图不仅给出了每个任务的开始时间、结束时间和完成该任务所需的时间，还给出了任务之间的关系，即哪些任务完成后才能开始另外一些任务，以及如期完成整个工程的关键路径。图中的松弛时间则反映了完成某些任务时可以推迟其开始时间或延长其完成所需的时间。但是，PERT 图不能 反映任务之间的并行关系。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYYWUwZzQtcVJCRGpqZ0V5YllBbnFzQkZQMXVVc2EtUmxFVnRIR05nYlVEdXc_ZT1PZWdhZ08.png\" alt=\"\" /></p>\n<h2 id=\"人员管理\"><a class=\"anchor\" href=\"#人员管理\">#</a> 人员管理</h2>\n<p>程序设计小组的组织形式可以有多种，如主程序员组、无主程序员组和层次式程序员组等。</p>\n<ol>\n<li>主程序员组。主程序员组由一名主程序员、一名后备程序员、一名资料员和若干名程序员组成。 这种组织形式便于集中领导，步调统一，容易按规范办事，但不利于发挥个人的积极性。</li>\n<li>无主程序员组。无主程序员组中的成员之间相互平等，工作目标和决策都由全体成员民主讨论， 根据需要也可以轮流坐庄。这种组民主气氛比较足，依赖个人的成分少，有利于发挥每个人的积极性。但这种组中交流量大，往往职责不明确，出了问题谁也不负责，而且不利于与外界的联系。</li>\n<li>层次式程序员组。层次式组中有一位组长，组长负责全面的工作，他领导若干名高级程序员， 每个高级程序员又领导若干名程序员。这种组适合于具有层次结构特点的更大型的软件项目，该项目可分成若干个子项目，每个高级程序员负责一个子项目，然后再对子项目分解，并分配给程序员。</li>\n</ol>\n<h1 id=\"需求分析-2\"><a class=\"anchor\" href=\"#需求分析-2\">#</a> 需求分析</h1>\n<h2 id=\"需求分析的任务\"><a class=\"anchor\" href=\"#需求分析的任务\">#</a> 需求分析的任务</h2>\n<p>需求分析主要是确定待开发软件的功能、性能、数据和界面等要求。具体来说，可有以下五个方面：</p>\n<ol>\n<li>确定软件系统的综合要求。</li>\n<li>分析软件系统的数据要求。包括基本元素、数据元素之间的逻辑关系、数据量和峰值等。常用 的数据描述方法是实体 - 关系模型（E - R 模型）。</li>\n<li>导出系统的逻辑模型。在结构化分析方法中可用数据流图来描述；在面向对象分析方法中可用 类模型来描述。</li>\n<li>修正项目开发计划。</li>\n<li>如有必要，可开发一个原型系统。对一些需求不够明确的软件，可以先开发一个原型系统，以验证用户的需求。</li>\n</ol>\n<h2 id=\"需求的分类\"><a class=\"anchor\" href=\"#需求的分类\">#</a> 需求的分类</h2>\n<p>软件需求包括功能需求、非功能需求和设计约束三方面的内容。</p>\n<ol>\n<li>功能需求：所开发的软件必须具备什么样的功能。</li>\n<li>非功能需求：是指产品必须具备的属性或品质，如可靠性、性能、响应时间、容错性和扩展性等。</li>\n<li>设计约束：也称为限制条件、补充规约，这通常是对解决方案的一些约束说明。</li>\n</ol>\n<h1 id=\"结构化分析方法\"><a class=\"anchor\" href=\"#结构化分析方法\">#</a> 结构化分析方法</h1>\n<p>结构化分析（Structured Analysis, SA）方法是一种面向数据流的需求分析方法，适用于分析大型数据处理系统，是一种简单、实用的方法，现在已经得到广泛的使用。</p>\n<p>结构化分析方法的基本思想是自顶向下、逐层分解。分解和抽象是人们控制问题复杂性的两种基本手段。对于一个复杂的问题，人们很难一下子考虑问题的所有方面和全部细节，通常可以把一个大问题分解成若干个小问题，每个小问题再分解成若干个更小的问题，经过多次逐层分解，每个最底层的问题都是足够简单，容易解决的，于是复杂的问题也就迎刃而解了。这个过程就是分解的过程。</p>\n<p>SA 方法的分析结果由以下几部分组成：一套分层的数据流图、一本数据字典、一组小说明（也称加工逻辑说明）、补充材料。</p>\n<h1 id=\"面向对象分析方法\"><a class=\"anchor\" href=\"#面向对象分析方法\">#</a> 面向对象分析方法</h1>\n<h2 id=\"面向对象的基本概念\"><a class=\"anchor\" href=\"#面向对象的基本概念\">#</a> 面向对象的基本概念</h2>\n<ol>\n<li>对象：在面向对象的系统中，对象是基本的运行时的实体，它既包括数据（属性），也包括作 用于数据的操作（行为）。</li>\n<li>消息：对象之间进行通信的一种构造叫作消息。</li>\n<li>类：一个类定义了一组大体上相似的对象。类是在对象之上的抽象，对象是类的具体化，是类 的实例。</li>\n<li>继承：继承是父类和子类之间共享数据和方法的机制。这是类之间的一种关系，在定义和实现一个类的时候，可以在一个已经存在的类的基础上来进行，把这个已经存在的类所定义的内容作为 自己的内容，并加入若干新的内容。</li>\n<li>多态：在收到消息时，对象要予以响应。不同的对象收到同一消息可以产生完全不同的结果， 这一现象叫作多态。</li>\n<li>动态绑定和静态绑定：绑定是一个把过程调用和响应调用所需要执行的代码加以结合的过程。 在一般的程序设计语言中，绑定是在编译时进行的，叫作静态绑定。动态绑定则是在运行时进行的， 因此，一个给定的过程调用和代码的结合直到调用发生时才进行。</li>\n</ol>\n<h2 id=\"面向对象分析方法-2\"><a class=\"anchor\" href=\"#面向对象分析方法-2\">#</a> 面向对象分析方法</h2>\n<p>UML 2.0 中包括 13 种图。几种常见的图如下：</p>\n<ol>\n<li>类图：类图描述一组类、接口、协作和它们之间的关系。</li>\n<li>对象图：对象图描述一组对象及它们之间的关系。对象图描述了在类图中所建立的事物的实例 的静态快照。</li>\n<li>用例图：用例图描述一组用例、参与者与它们之间的关系。</li>\n<li>序列图：序列图是一种交互图，交互图展现了一种交互，它由一组对象或参与者以及它们之间可能发送的消息构成。交互图专注于系统的动态视图。序列图是场景的图形化表示，描述了以时间顺序组织的对象之间的交互活动，是强调消息的时间次序的交互图。</li>\n<li>通信图：通信图也是一种交互图，它强调收发消息的对象或参与者的结构组织。序列图强调的 是时序，通信图强调的是对象之间的组织结构（关系）。</li>\n<li>状态图：状态图描述一个状态机，它由状态、转换、事件和活动组成。状态图关注系统的动态视图。</li>\n<li>活动图：活动图是一种特殊的状态图，它展现了在系统内从一个活动到另一个活动的流程。活动图专注于系统的动态视图，它强调对象间的控制流程。</li>\n<li>构件图：构件图描述一组构件之间的组织和依赖。构件图专注于系统的静态实现视图。它与类图相关，通常把构件映射为一个或多个类、接口或协作。</li>\n<li>部署图：部署图描述了运行时的处理节点以及其中的构件的配置。部署图给出了体系结构的静态实施视图。它与构件图相关，通常一个节点包含一个或多个构件</li>\n</ol>\n<h1 id=\"数据流图\"><a class=\"anchor\" href=\"#数据流图\">#</a> 数据流图</h1>\n<p>数据流图（DFD）是结构化分析方法中用来描述系统的逻辑模型的。它是面向数据流来建模的。</p>\n<h2 id=\"数据流\"><a class=\"anchor\" href=\"#数据流\">#</a> 数据流</h2>\n<p>由一组固定成分的数据组成，表示数据的流向。DFD 中描述的是数据流，而不是控制流。除了流向数据存储或从数据存储流出的数据流不必命名外，每 个数据流都必须有一个合适的名字，以反映该数据流的含义。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRQ2V0VzhORjdWRnFHaXIwV1d4LVp3Qnp0ei1QQy04OHpidkozSTJZOWlFU0E_ZT1Uem81eWk.png\" alt=\"\" /></p>\n<h2 id=\"加工\"><a class=\"anchor\" href=\"#加工\">#</a> 加工</h2>\n<p>描述了输入数据流到输出数据流之间的变换，也就是输入数据流经过什么处理后变成了输出数据流。每个加工有一个名字和编号。编号能反映出该加工 位于分层 DFD 中的哪个层次和哪张图中，也能够看出它是哪个加工分解出来的子加工。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUNlJYY3RERmVaS3JWcGUxejV0QmdZQnV5VTkta2tzQ0pQVHBwdXRJN05PY2c_ZT1GRU5vRzU.png\" alt=\"\" /></p>\n<h2 id=\"数据存储\"><a class=\"anchor\" href=\"#数据存储\">#</a> 数据存储</h2>\n<p>数据存储用来表示存储的数据，每个数据存储都有一个名字。 （... 表或... 信息表或... 文件）</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYYV9jSDI4Njl0R28zMy1Uc3pheXAwQkNFUFFLR1pMWkw2NTZvVk5hejNsNWc_ZT1JUVpySXQ.png\" alt=\"\" /></p>\n<h2 id=\"外部实体\"><a class=\"anchor\" href=\"#外部实体\">#</a> 外部实体</h2>\n<p>外部实体是指存在于系统之外的人员或组织或其它系统，它指出 系统所需数据的发源地和系统所产生的数据的归宿地。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVY1VOZ1dTWGo1Q2tKcl91YjV4WkRrQjVGR0k1UWlEQnZkYlZxRTFUT0tsb0E_ZT15R0xma2w.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTTHY2aU56Rm14T21qNDFhbENpcklVQmlvMXB4RWN4cjRSSUhITHkxUUpsdWc_ZT1kS3dRMFQ.png\" alt=\"\" /></p>\n<h1 id=\"系统设计\"><a class=\"anchor\" href=\"#系统设计\">#</a> 系统设计</h1>\n<p>系统设计的主要目的就是为系统制定蓝图，在各种技术和实施方法中权衡利弊，精心设计，合理使用各种资源，最终勾画出新系统的详细设计方案。</p>\n<p>系统设计分为概要设计和详细设计。</p>\n<h2 id=\"概要设计的基本任务\"><a class=\"anchor\" href=\"#概要设计的基本任务\">#</a> 概要设计的基本任务</h2>\n<ol>\n<li>设计软件系统总体结构：将一个复杂的系统按功能划分成模块；确定每个模块的功能；确定模块之间的调用关系；确定模块 之间的接口，即模块之间传递的信息；评价模块结构的质量。</li>\n<li>数据结构及数据库设计</li>\n<li>编写概要设计文档 文档主要有概要设计说明书、数据库设计说明书、用户手册以及修订测试计划。</li>\n<li>评审：对设计部分是否完整地实现了需求中规定的功能、性能等要求进行评审。</li>\n</ol>\n<h2 id=\"详细设计的基本任务\"><a class=\"anchor\" href=\"#详细设计的基本任务\">#</a> 详细设计的基本任务</h2>\n<p>详细设计阶段的根本目标是确定应该怎样具体地实现所要求的系统。</p>\n<ol>\n<li>对每个模块进行详细的算法设计。</li>\n<li>对模块内的数据结构进行设计。</li>\n<li>对数据库进行物理设计，即确定数据库的物理结构。</li>\n<li>其他设计。</li>\n<li>编写详细设计说明书。</li>\n<li>评审：对处理过程的算法和数据库的物理结构都要评审</li>\n</ol>\n<h1 id=\"系统设计的基本原理\"><a class=\"anchor\" href=\"#系统设计的基本原理\">#</a> 系统设计的基本原理</h1>\n<h2 id=\"抽象\"><a class=\"anchor\" href=\"#抽象\">#</a> 抽象</h2>\n<p>抽象是一种技术，重点说明一个实体的本质方面，而忽略或者掩盖不很重要或非本质的方面。</p>\n<h2 id=\"模块化\"><a class=\"anchor\" href=\"#模块化\">#</a> 模块化</h2>\n<p>在软件的体系结构中，模块是可组合、分解和更换的单元。模块化是指将一个待开发的软件分解成若干个小的简单部分 —— 模块，每个模块可独立地开发、测试，最后组装成完整的程序。模块化的目的是使程序的结构清晰，容易阅读、理解、测试和修改。</p>\n<h2 id=\"信息隐蔽\"><a class=\"anchor\" href=\"#信息隐蔽\">#</a> 信息隐蔽</h2>\n<p>信息隐蔽是开发整体程序结构时使用的法则，即将每个程序的成分隐蔽或封闭在一个单一的设计模块中，定义每一个模块时尽可能少地显露其内部的处理。信息隐蔽原则对提高软件的可修改性、可测试性和可移植性都有重要的作用。</p>\n<h2 id=\"模块独立\"><a class=\"anchor\" href=\"#模块独立\">#</a> 模块独立</h2>\n<p>模块独立是指每个模块完成一个相对独立的特定子功能，并且与其他模块之间的联系简单。衡量模块独立程度的标准有两个：耦合性和内聚性。</p>\n<h3 id=\"耦合\"><a class=\"anchor\" href=\"#耦合\">#</a> 耦合</h3>\n<p>耦合性是指模块之间联系的紧密程度。耦合性越高，则模块的独立性越差。</p>\n<ol>\n<li>无直接耦合：指两个模块间没有直接的关系，它们分别从属于不同模块的控制与调用，它们之间不传递任何信息。</li>\n<li>数据耦合：指两个模块之间有调用关系，传递的是简单的数据值，相当于高级语言中的值传递。</li>\n<li>标记耦合：指两个模块之间传递的是数据结构，如高级语言中的数据组名、记录名、文件名等这 些名字即为标记。</li>\n<li>控制耦合：指一个模块调用另一个模块时，传递的是控制变量，被调模块通过该控制变量的值有选择地执行块内的某一功能。</li>\n<li>公共耦合：指通过一个公共数据环境相互作用的那些模块之间的耦合。</li>\n<li>内容耦合：是耦合性程度最高的。当一个模块直接使用另一个模块的内部数据，或通过非正常入口而转入另一个模块内部，这种模块之间的耦合为内容耦合。</li>\n</ol>\n<h3 id=\"内聚\"><a class=\"anchor\" href=\"#内聚\">#</a> 内聚</h3>\n<p>内聚是指模块内部各元素之间联系的紧密程度，例如一个完成多个功能的模块的内聚度就比完 成单一功能的模块的内聚度低。内聚度越低，模块的独立性越差。</p>\n<ol>\n<li>偶然内聚：指一个模块内的各个处理元素之间没有任何联系。</li>\n<li>逻辑内聚：指模块内执行几个逻辑上相似的功能，通过参数确定该模块完成哪一个功能。</li>\n<li>时间内聚：把需要同时执行的动作组合在一起形成的模块为时间内聚模块。</li>\n<li>通信内聚：指模块内所有处理元素都在同一个数据结构上操作，或者指各处理使用相同的输入数  据或产生相同的输出数据。</li>\n<li>顺序内聚：指一个模块中各个处理元素都密切相关于同一功能且必须顺序执行，前一功能元素的 输出就是下一功能元素的输入。</li>\n<li>功能内聚：这是最强的内聚，指模块内所有元素共同完成一个功能，缺一不可。 将软件系统划分模块时，尽量做到高内聚、低耦合，提高模块的独立性</li>\n</ol>\n<h1 id=\"系统测试基础知识\"><a class=\"anchor\" href=\"#系统测试基础知识\">#</a> 系统测试基础知识</h1>\n<p>系统测试的目的是为了发现错误而执行程序的过程，成功的测试是发现了至今尚未发现的错误 的测试。测试的目的就是希望能以最少的人力和时间发现潜在的各种错误和缺陷。</p>\n<p>在进行信息系统测试时应遵循以下基本原则：</p>\n<ol>\n<li>应尽早并不断地进行测试。测试不是在应用系统开发完之后才进行的。</li>\n<li>测试工作应避免由原开发软件的人或小组承担。</li>\n<li>设计测试方案时，不仅要确定输入数据，而且要根据系统功能确定预期输出结果，将实际输出 结果与预期结果相比较就能发现测试对象是否正确。</li>\n<li>在设计测试用例时，不仅要设计有效合理的输入条件，也要包含不合理、失效的输入条件。</li>\n<li>在测试程序时，不仅要检验程序是否做了该做的事，还要检验程序是否做了不该做的事。</li>\n<li>严格按照测试计划来进行，避免测试的随意性。</li>\n<li>妥善保存测试计划、测试用例，作为软件文档的组成部分，为维护提供方便。</li>\n<li>测试例子都是精心设计出来的，可以为重新测试或追加测试提供方便。</li>\n</ol>\n<p>测试的类型：<strong>软件测试可分为单元测试、集成测试、确认测试、系统测试和回归测试等类别</strong>。</p>\n<ol>\n<li>单元测试：单元测试也称为模块测试。单元测试侧重于模块中的内部处理逻辑结构和数据结构。</li>\n<li>集成测试：集成测试的目的是检查模块之间，以及模块和已集成的软件之间的接口关系。并验 证已集成的 软件是否符合设计要求。</li>\n<li>确认测试：确认测试主要用于验证软件的功能、性能和其他特性是否与用户需求一致。</li>\n<li>系统测试：系统测试的对象是完整的、集成的计算机系统，系统测试的目的是在真实系统工作环境下，验证完整的软件配置项能否和系统正确连接，并满足系统 / 子系统设计文档和软件开发合同 规定的要求。技术依据是用户需求或开发合同。</li>\n<li>回归测试：回归测试的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性， 以及软件原有的、正确的功能、性能和其他规定的要求的不损害性。</li>\n</ol>\n<h1 id=\"软件测试方法\"><a class=\"anchor\" href=\"#软件测试方法\">#</a> 软件测试方法</h1>\n<h2 id=\"黑盒测试法\"><a class=\"anchor\" href=\"#黑盒测试法\">#</a> 黑盒测试法</h2>\n<p>黑盒测试也称为功能测试，在完全不考虑软件的内部结构和特性的情况下，测试软件的外部特 性。主要用于集成测试、确认测试和系统测试中。常用的黑盒测试技术有：<strong>等价类划分、边界值分析、错误推测和因果图等</strong>。</p>\n<h2 id=\"白盒测试法\"><a class=\"anchor\" href=\"#白盒测试法\">#</a> 白盒测试法</h2>\n<p>白盒测试也称为结构测试，主要用于软件单元测试中。它的主要思想是将程序看作是一个透明的白盒，测试人员完全清楚程序的结构和处理算法，按照程序内部逻辑结构设计测试用例。</p>\n<p>白盒测试常用的技术是<strong>逻辑覆盖，循环覆盖和基本路径测试</strong>。<strong>主要的逻辑覆盖标准有语句覆盖、 判定覆盖、条件覆盖、条件 / 判定覆盖、 条件组合覆盖、路径覆盖等</strong>。</p>\n<h1 id=\"系统维护\"><a class=\"anchor\" href=\"#系统维护\">#</a> 系统维护</h1>\n<p>系统的可维护性可定义为：维护人员理解、改正、改动和改进这个软件的难易程度。</p>\n<h2 id=\"系统可维护性的评价指标\"><a class=\"anchor\" href=\"#系统可维护性的评价指标\">#</a> 系统可维护性的评价指标</h2>\n<ol>\n<li>可理解性：是指别人能理解系统的结构、界面、功能和内部过程的难易程度。</li>\n<li>可测试性：诊断和测试的容易程度取决于易理解的程度。</li>\n<li>可修改性：模块的耦合、内聚、作用范围与控制范围的关系等，都对可修改性有影响。</li>\n</ol>\n<h2 id=\"软件维护的一般内容\"><a class=\"anchor\" href=\"#软件维护的一般内容\">#</a> 软件维护的一般内容</h2>\n<ol>\n<li>正确性维护：是指改正在系统开发阶段已发生而系统测试阶段尚未发现的错误。</li>\n<li>适应性维护：是指使应用软件适应信息技术变化和管理需求变化而进行的修改。</li>\n<li>完善性维护：这是为扩充功能和改善性能而进行的修改，主要是指对已有的软件系统增加一些在系统分析和设计阶段中没有规定的功能与性能特征。这些功能对完善系统功能是非常必要的。</li>\n<li>预防性维护：为了改进应用软件的可靠性和可维护性，为了适应未来的软硬件环境的变化，应主动增加预防性的新的功能。</li>\n</ol>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94NoSQL/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94NoSQL/",
            "title": "软考中级——NoSQL",
            "date_published": "2024-05-02T08:39:15.000Z",
            "content_html": "<h1 id=\"cap-理论和base-特性\"><a class=\"anchor\" href=\"#cap-理论和base-特性\">#</a> CAP 理论和 BASE 特性</h1>\n<h2 id=\"cap-理论\"><a class=\"anchor\" href=\"#cap-理论\">#</a> CAP 理论</h2>\n<p>CAP 理论：简单地说，就是对于一个分布式系统，一致性（Consistency）、可用性和分区容忍性三个特点最多只能三选二。</p>\n<ol>\n<li>一致性（Consistency）：是指系统在执行了某些操作后仍处于一个一致的状态。</li>\n<li>可用性（Availability）：是指对数据的所有操作都有成功的返回。简言之，就是任何请求不管成功或失败都有响应。</li>\n<li>分区容忍性（Partition tolerance）：这一概念的前提是在网络发生故障的时候。在网络连接上，一些结点出现故障，使得原本连通的网络变成了一块一块的分区，若允许系统继续工作，那就是分区可容忍的。</li>\n</ol>\n<h2 id=\"acid-理论\"><a class=\"anchor\" href=\"#acid-理论\">#</a> ACID 理论</h2>\n<ol>\n<li>原子性（Atomicity）：事务的所有操作在数据库中要么都做要么都不做。</li>\n<li>一致性（Consistency）：一个事务独立执行的结果，将保持数据的一致性，即数据不会因为事务的执行而遭受破坏。</li>\n<li>隔离性（Isolation）：一个事务的执行不能被其他事务干扰。并发事务在执行过程中可能会对同一数据进行操作，这些事务的操作应该不会相互干扰，是相互隔离的。</li>\n<li>持久性（Durability）：一个事务一旦提交，它对数据库的改变必须是永久的， 即使系统出现故障也是如此。</li>\n</ol>\n<h2 id=\"base-理论\"><a class=\"anchor\" href=\"#base-理论\">#</a> BASE 理论</h2>\n<p>由于 CAP 理论的存在，为了提高性能，出现了 ACID 的一种变种 BASE，它是一个弱一致性的理论，只要求最终一致性。</p>\n<ul>\n<li>\n<p>BA (Basically Available)：基本可用</p>\n</li>\n<li>\n<p>S (Soft state)：软状态，可以理解为 “无连接的” 的，而与之相对应的是 “面向连接” 的。</p>\n</li>\n<li>\n<p>E (Eventual consistency)：最终一致性，最终整个系统看到的数据是一致的。</p>\n</li>\n</ul>\n<h1 id=\"nosql数据库的种类\"><a class=\"anchor\" href=\"#nosql数据库的种类\">#</a> NoSQL 数据库的种类</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">分类</th>\n<th style=\"text-align:center\">典型产品</th>\n<th style=\"text-align:center\">应用场景</th>\n<th style=\"text-align:center\">优点</th>\n<th style=\"text-align:center\">缺点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">文档存储</td>\n<td style=\"text-align:center\">MongoDB、CouchDB</td>\n<td style=\"text-align:center\">Web 应用，存储面向文档和半结构化数据</td>\n<td style=\"text-align:center\">结构灵活，可以根据 value 构建索引，处理能力强</td>\n<td style=\"text-align:center\">缺乏统一的查询语法；无事务处理能力</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">键值存储</td>\n<td style=\"text-align:center\">Redis</td>\n<td style=\"text-align:center\">内容缓存，如会话、配置、文件、参数等</td>\n<td style=\"text-align:center\">扩展性好，灵活性强，大量操作时性能高</td>\n<td style=\"text-align:center\">数据无结构化，通常被当成字符串或者二进制数据，通过键查询值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">列存储</td>\n<td style=\"text-align:center\">Bigtable、HBase、Cassandra</td>\n<td style=\"text-align:center\">分布式数据存储和管理</td>\n<td style=\"text-align:center\">可扩展性强，查找速度快，复杂性低</td>\n<td style=\"text-align:center\">功能局限；不支持事务的强一致性</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">图存储</td>\n<td style=\"text-align:center\">Neo4j、OrientDB</td>\n<td style=\"text-align:center\">社交网络、推荐系统、专注于构建系统图谱</td>\n<td style=\"text-align:center\">支持复杂的图形算法</td>\n<td style=\"text-align:center\">复杂性高，只能支持一定的数据规模</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94SQL%E8%AF%AD%E8%A8%80%EF%BC%88%E4%B8%8B%EF%BC%89/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94SQL%E8%AF%AD%E8%A8%80%EF%BC%88%E4%B8%8B%EF%BC%89/",
            "title": "软考中级——SQL语言（下）",
            "date_published": "2024-04-30T11:10:54.000Z",
            "content_html": "<h1 id=\"授权与触发器\"><a class=\"anchor\" href=\"#授权与触发器\">#</a> 授权与触发器</h1>\n<h2 id=\"授权-grant\"><a class=\"anchor\" href=\"#授权-grant\">#</a> 授权 (GRANT)</h2>\n<p>语句格式</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> 权限 <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">DATABASE</span> 表名 <span class=\"token operator\">/</span> 数据库名 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">TO</span> 用户<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 用户<span class=\"token number\">2</span> … <span class=\"token operator\">/</span> <span class=\"token keyword\">PUBLIC</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>PUBLIC</code> ：表示将权限授予所有人</p>\n<p><code>WITH GRANT OPTION</code> ：表示获得了这个权限的用户还可以将权限赋给其他用户。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">对象</th>\n<th style=\"text-align:center\">对象类型</th>\n<th style=\"text-align:center\">操作权限</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">属性列</td>\n<td style=\"text-align:center\"><code>TABLE</code></td>\n<td style=\"text-align:center\"><code>SELECT</code> ， <code>INSERT</code> ， <code>UPDATE</code> ， <code>DELETE</code> ，  <code>ALL PRIVILEGES</code> （4 种权限的总和）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">视图</td>\n<td style=\"text-align:center\"><code>TABLE</code></td>\n<td style=\"text-align:center\"><code>SELECT</code> ， <code>INSERT</code> ， <code>UPDATE</code> ， <code>DELETE</code> ，  <code>ALL PRIVILEGES</code> （4 种权限的总和）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">基本表</td>\n<td style=\"text-align:center\"><code>TABLE</code></td>\n<td style=\"text-align:center\"><code>SELECT</code> ， <code>INSERT</code> ， <code>UPDATE</code> ， <code>DELETE</code> ，  <code>ALTER</code> ， <code>INDEX</code> ， <code>ALL PRIVILEGES</code> （4 种权限的总和）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据库</td>\n<td style=\"text-align:center\"><code>DATABASE</code></td>\n<td style=\"text-align:center\"><code>CREATETAB</code>  建立表的权限，可由  <code>DBA</code>  授予普通用户</td>\n</tr>\n</tbody>\n</table>\n<p>例：用户要求把数据库 SPJ 中供应商 S、零件 P、项目 J 表赋予各种权限。各种授权要求如下：</p>\n<ol>\n<li>将对供应商 S、零件 P、项目 J 的所有操作权限赋给用户 User1 及 User2。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> S<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    P<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    J <span class=\"token keyword\">TO</span> USER1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    USER2<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>将对供应商 S 的插入权限赋给用户 User1，并允许将此权限赋给其他用户。<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> S <span class=\"token keyword\">TO</span> USER1 <span class=\"token keyword\">WITH</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>DBA 把数据库 SPJ 中建立表的权限赋给用户 User1。<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">GRANT</span> CREATETAB <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DATABASE</span> SPJ <span class=\"token keyword\">TO</span> User1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"收回权限-revoke\"><a class=\"anchor\" href=\"#收回权限-revoke\">#</a> 收回权限 (REVOKE)</h2>\n<p>语句格式</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span> 权限 <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">DATABASE</span> 表名 <span class=\"token operator\">/</span> 数据库名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 用户<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 用户<span class=\"token number\">2</span> … <span class=\"token operator\">/</span> <span class=\"token keyword\">PUBLIC</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">RESTRICT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>RESTRICT</code> ：表示只收回语句中指定的用户的权限</p>\n<p><code>CASCADE</code> ：表示除了收回指定用户的权限外，还收回该用户赋予的其他用户的权限。</p>\n<p>将用户 User1 及 User2 对供应商 S、零件 P、项目 J 的所有操作权限收回：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> S<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>P<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>J</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">FROM</span> User1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    User2<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>将所有用户对供应商 S 的所有查询权限收回：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> S</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token keyword\">PUBLIC</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>将 User1 用户对供应商 S 的供应商编号 Sno 的修改权限收回。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">REVOKE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">UPDATE</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> S</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> User1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"触发器概述\"><a class=\"anchor\" href=\"#触发器概述\">#</a> 触发器概述</h2>\n<p>触发器主要有以下三方面的特点</p>\n<ol>\n<li>\n<p>当数据库程序员声明的事件发生时，触发器被激活。声明的事件可以是对某个特定关系的插入、删除或更新。</p>\n</li>\n<li>\n<p>当触发器被事件激活时，不是立即执行，而是首先由触发器测试触发条件，如果事件不成立，响应该事件 的触发器什么都不做。</p>\n</li>\n<li>\n<p>如果触发器声明的条件满足，则与该触发器相连的动作由 DBMS 执行。动作可以阻止事件发生，可以撤销事件。</p>\n</li>\n</ol>\n<p>创建触发器时需指定：</p>\n<ol>\n<li>\n<p>触发器名称</p>\n</li>\n<li>\n<p>在其上定义触发器的表</p>\n</li>\n<li>\n<p>触发事件：触发器将何时激发</p>\n</li>\n<li>\n<p>触发条件：满足什么条件时执行触发动作</p>\n</li>\n<li>\n<p>触发动作：指明触发器执行时应做的动作</p>\n</li>\n</ol>\n<ul>\n<li>触发器可以引用当前数据库以外的对象，但只能在当前数据库中创建触发器。</li>\n<li>不能在临时表或系统表上创建触发器，但触发器可以引用临时表</li>\n</ul>\n<h2 id=\"创建触发器\"><a class=\"anchor\" href=\"#创建触发器\">#</a> 创建触发器</h2>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> 触发器名称 <span class=\"token punctuation\">[</span>BEFORE <span class=\"token operator\">|</span> <span class=\"token keyword\">AFTER</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">DELETE</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">INSERT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">OF</span> 列名<span class=\"token punctuation\">]</span> <span class=\"token comment\">// 触发事件 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ON</span> 表名 <span class=\"token punctuation\">[</span>REFERENCING <span class=\"token operator\">&lt;</span>临时视图名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">FOR EACH ROW</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">FOR</span> EACH STATEMENT<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHEN</span> <span class=\"token operator\">&lt;</span>触发条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// WHEN 后面跟触发条件 ， 指明当什么条件满足时 ， 执行下面的触发动作 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">BEGIN</span> <span class=\"token operator\">&lt;</span> 触发动作 <span class=\"token operator\">></span> <span class=\"token comment\">// BEGIN... END 中定义触发动作 ， 即当触发条件满足时 ， 需要数据库做什么</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">END</span> <span class=\"token punctuation\">[</span>触发器名称<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><code>BEFORE</code>  /  <code>AFTER</code> ：指明是在执行触发语句之前激发触发器还是执行触发语句之后激发触发器。</p>\n<p><code>DELETE</code> ：当一个  <code>DELETE</code>  语句从表中删除行时激发触发器。</p>\n<p><code>INSERT</code> ：当一个  <code>INSERT</code>  语句向表中插入行时激发触发器。</p>\n<p><code>UPDATE</code>  /  <code>UPDATE OF</code> （列名）：当  <code>UPDATE</code>  修改表中的值时，激发触发器，也可加（ <code>OF</code>  列名）指定是某一列的值被修改时激发触发器。</p>\n<p><code>REFERENCING</code> ：触发器运行过程中，系统会生成两个临时视图，分别存放更新前和更新后的值，对于行级触发器，为  <code>OLD ROW</code>  和  <code>NEW ROW</code> ，对于语句级触发器，为  <code>OLD TABLE</code>  和  <code>NEW TABLE</code> 。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>REFERENCING new <span class=\"token keyword\">row</span> <span class=\"token keyword\">AS</span> <span class=\"token operator\">/</span> nrow REFERENCING old <span class=\"token keyword\">row</span> <span class=\"token keyword\">AS</span> orow</pre></td></tr></table></figure><p><code>FOR EACH ROW</code> ：表示为行级触发器，对每一个被影响的元组（即每一行）执行一次触发过程。</p>\n<p><code>FOR EACH STATEMENT</code> ：表示为语句级触发器，对整个事件只执行一次触发过程，为默认方式。</p>\n<div class=\"note primary\">\n<p>银行数据库关系模式如下：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Account(Account-no, branch-name, balance)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Account(Account-no, branch-name, balance)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Account(Account-no, branch-name, balance)</span></span></span></span></span> 账户 (账号，支行名称，余额)</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Loan(Loan-no,branch-name,amount)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Loan(Loan-no,branch-name,amount)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Loan(Loan-no,branch-name,amount)</span></span></span></span></span> 贷款 (贷款号，支行名称，金额)</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Depositor(customer-name,Account-no)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Depositor(customer-name,Account-no)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Depositor(customer-name,Account-no)</span></span></span></span></span> 存款 (存款人姓名，账号)</p>\n<p>假设银行处理透支时，不是将账户的余额设为负值，而是将账户余额设置为 0，并且建立一笔贷款，其金额为透支金额。 这笔贷款的贷款号等于该透支账户的账。</p>\n</div>\n<details class=\"primary\"><summary>答案</summary><div>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> overdraft_trigger</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">AFTER</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">ON</span> Account <span class=\"token comment\">-- 在 Account 表上建立触发器 ， 触发事件是 “修改后” </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    REFERENCING new <span class=\"token keyword\">row</span> <span class=\"token keyword\">as</span> nrow <span class=\"token comment\">-- 引用修改后的 “行” 为临时视图 ， 命名为 nrow </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">For each row</span> <span class=\"token comment\">-- 表示其为行级触发器 ， 即对每一行都执行一次触发</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">WHEN</span> nrow<span class=\"token punctuation\">.</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token comment\">-- 触发条件是修改后的行的 balance 属性值小于 0 ， 即账户余额为负 。 </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">BEGIN</span> ATOMIC <span class=\"token comment\">-- ATOMIC 关键字表示下面的语句为原子性的 ， 即 ： 要么都做 ， 要么都不做 。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> borrower <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">Select</span> customer <span class=\"token operator\">-</span> name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">From</span> depositor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">Where</span> nrow<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span> <span class=\"token operator\">=</span> depositor<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 将透支客户的信息单独存储在 borrower 表中</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> loan</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        nrow<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        nrow<span class=\"token punctuation\">.</span>branch <span class=\"token operator\">-</span> name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        － nrow<span class=\"token punctuation\">.</span>balance</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">-- 建立一笔贷款 ， 将该笔记录插入到贷款表 loan 中</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">UPDATE</span> account</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">set</span> balance <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">Where</span> account<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span> <span class=\"token operator\">=</span> nrow<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-</span> <span class=\"token keyword\">no</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">-- 将 Account 表中的余额设为 0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr></table></figure></div></details>\n<p>某航空公司要开发一个订票信息处理系统，该系统的部分关系模式如下：</p>\n<p>航班（&lt;u&gt; 航班编号 &lt;/u&gt;，航空公司，起飞地，起飞时间，目的地，到达时间，票价）</p>\n<p>折扣（&lt;u&gt; 航班编号，开始日期，结束日期 &lt;/u&gt;，折扣）</p>\n<p>旅客（&lt;u&gt; 身份证号 &lt;/u&gt;，姓名，性别，出生日期，电话，VIP 折扣）</p>\n<p>购票（&lt;u&gt; 购票单号，身份证号，航班编号 &lt;/u&gt;，搭乘日期，购票金额）</p>\n<p>有关关系模式的属性及相关说明如下：</p>\n<ol>\n<li>航班表中的起飞时间和到达时间不包含日期，同一航班不会在一天出现两次及两次以上；</li>\n<li>各航空公司会根据旅客出行淡旺季适时调整机票的折扣，旅客购买机票的购票金额计算公式为：票价 × 折扣 × VIP 折扣， 其中旅客的 VIP 折扣与该旅客已购买过的机票的购票金额总和相关，在旅客每次购票后被修改。VIP 折扣值的计算由函数  <code>float vip_value (char[18]身份证号)</code>  完成。 根据以上描述，回答下列问题：</li>\n</ol>\n<p>【问题 1】</p>\n<p>请将如下创建购票关系的 SQL 语句的空缺部分补充完整，要求指定关系的主键、外键，以及购票金额大于零的约束。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 购票 <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    购票单号 <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> ___<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    身份证号 <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    航班编号 <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    搭乘日期 <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    购票金额 <span class=\"token keyword\">FLOAT</span> ___<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ___<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ___<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>【问题 2】</p>\n<ol>\n<li>身份证号为 210000196006189999 的客户购买了 2013 年 2 月 18 日 CA5302 航班的机票，购票单号由系统自动生成。下面的 SQL 语句将上述购票信息加入系统中，请将空缺部分补充完整。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 购票 <span class=\"token punctuation\">(</span>购票单号<span class=\"token punctuation\">,</span> 身份证号<span class=\"token punctuation\">,</span> 航班编号<span class=\"token punctuation\">,</span> 搭乘日期<span class=\"token punctuation\">,</span> 购票金额<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token string\">' 201303105555 '</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">' 210000196006189999 '</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">' CA5302 '</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">' 2013 / 2 / 18 '</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ___<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">FROM</span> 航班<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    折扣<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    旅客</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">WHERE</span> ___<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">AND</span> 航班<span class=\"token punctuation\">.</span>航班编号 <span class=\"token operator\">=</span> <span class=\"token string\">' CA5302 '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token operator\">AND</span> <span class=\"token string\">' 2013 / 2 / 18 '</span> <span class=\"token operator\">BETWEEN</span> 折扣<span class=\"token punctuation\">.</span>开始日期 <span class=\"token operator\">AND</span> 折扣<span class=\"token punctuation\">.</span>结束日期</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token operator\">AND</span> 旅客<span class=\"token punctuation\">.</span>身份证号 <span class=\"token operator\">=</span> <span class=\"token string\">' 210000196006189999 '</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>需要用触发器来实现 VIP 折扣的修改，调用函数  <code>vip_value()</code>  来实现。请将如下 SQL 语句的空缺部分补充完整。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> VIP _TRG</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">AFTER</span> ___<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>___ <span class=\"token keyword\">ON</span> ___<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span>___ REFERENCING new <span class=\"token keyword\">row</span> <span class=\"token keyword\">AS</span> nrow <span class=\"token keyword\">FOR EACH row</span> <span class=\"token keyword\">BEGIN</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">UPDATE</span> 旅客</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">SET</span> ___<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> ___<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr></table></figure><p>【问题 3】</p>\n<p>请将如下 SQL 语句的空缺部分补充完整。</p>\n<ol>\n<li>查询搭乘日期在 2012 年 1 月 1 日至 2012 年 12 月 31 日之间，且合计购票金额大于等于 10000 元的所有旅客的身份证号、姓名和购票金额总和，并按额总和降序输出。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ELECT 旅客<span class=\"token punctuation\">.</span>身份证号<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   姓名<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function\">SUM</span> <span class=\"token punctuation\">(</span>购票金额<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ROM 旅客<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   购票</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>HERE ___<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ROUP <span class=\"token keyword\">BY</span> ___<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>RDER <span class=\"token keyword\">BY</span> ___<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>经过中转的航班与相同始发地和目的地的直达航班相比，会享受更低的折扣。查询从广州到北京，经过一次中转的所有航班对，输出广州到中转地的航班编号、中转地和中转地到北京的航班编号。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> ___<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> 航班航班<span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    航班航班<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> ___<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"更改和删除触发器\"><a class=\"anchor\" href=\"#更改和删除触发器\">#</a> 更改和删除触发器</h2>\n<h3 id=\"更改触发器\"><a class=\"anchor\" href=\"#更改触发器\">#</a> 更改触发器</h3>\n<p>语句格式</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token operator\">&lt;</span> 触发器名 <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>BEFORE<span class=\"token operator\">|</span><span class=\"token keyword\">AFTER</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">INSERT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">OF</span> <span class=\"token punctuation\">[</span>列名<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">ON</span> 表名 <span class=\"token operator\">|</span> 视图名 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">AS</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">BEGIN</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t要执行的<span class=\"token keyword\">SQL</span>语句</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr></table></figure><h3 id=\"删除触发器\"><a class=\"anchor\" href=\"#删除触发器\">#</a> 删除触发器</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token operator\">&lt;</span>触发器名<span class=\"token operator\">></span></pre></td></tr></table></figure><h1 id=\"嵌入式-sql-与存储过程\"><a class=\"anchor\" href=\"#嵌入式-sql-与存储过程\">#</a> 嵌入式 SQL 与存储过程</h1>\n<h2 id=\"嵌入式-sql\"><a class=\"anchor\" href=\"#嵌入式-sql\">#</a> 嵌入式 SQL</h2>\n<p>SQL 提供了将 SQL 语句嵌入到某种高级语言中的方式，通常采用预编译的方法。</p>\n<ol>\n<li>区分主语言与 SQL 语句的方式： <code>EXEC SQL &lt;SQL语句&gt;</code></li>\n<li>向主语言传递 SQL 语句执行的状态信息的方式：  <code>SQLCA</code> ，即  <code>SQL</code>  通信区，是系统默认定义的全局变量。</li>\n<li>主变量（共享变量）：\n<ol>\n<li>主语言通过主变量向 SQL 语句提供参数，主变量是由主语言的程序定义的，并用 SQL 的  <code>DECLARE</code>  语句说明。</li>\n<li>在 SQL 语句中，为了与 SQL 中的属性名区分，在引用共享变量时，前面需要加  <code>:</code></li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">BEGIN</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">DECLARE</span> SECTION<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> Msname <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Msex <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>givensno <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> Mage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">char</span> SQLSTATE <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 特殊的共享变量 ， 解释 SQL 语句的执行状况 </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">DECLARE</span> SECTION<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol>\n<li>根据共享变量 givensno 值查询学生关系 students 中学生的姓名、年龄和性别。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sex <span class=\"token keyword\">INTO</span> :Msname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    :Mage<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    :Msex</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">FROM</span> students</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">WHERE</span> sno <span class=\"token operator\">=</span> :givensno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>某学生选修了一门课程，将其插入学生选课表 SC 中，假设学号、课程号、成绩已分别赋给主变量 HSno、 Hcno 和 Hgrade。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SC<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Cno<span class=\"token punctuation\">,</span> Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Values</span> <span class=\"token punctuation\">(</span>:HSno<span class=\"token punctuation\">,</span> :HCno<span class=\"token punctuation\">,</span> :Hgrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"游标\"><a class=\"anchor\" href=\"#游标\">#</a> 游标</h2>\n<p>SQL 语言是面向集合的，一条 SQL 语句可以产生或处理多条记录。而主语言是面向记录的，一组主变量一次只 能放一条记录，所以，引入游标，通过移动游标指针来决定获取哪一条记录。</p>\n<ol>\n<li>\n<p>定义游标：</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">DECLARE</span> <span class=\"token operator\">&lt;</span> 游标名称 <span class=\"token operator\">></span> <span class=\"token keyword\">CURSOR</span> <span class=\"token keyword\">FOR</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token keyword\">SELECT</span> 语句 <span class=\"token operator\">></span></pre></td></tr></table></figure><p>它只是一条说明性语句，定义游标后，其中的  <code>SELECT</code>  语句并不执行。</p>\n</li>\n<li>\n<p>打开游标：</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">OPEN</span> <span class=\"token operator\">&lt;</span>游标名称<span class=\"token operator\">></span></pre></td></tr></table></figure><p>该语句执行游标定义中的  <code>SELECT</code>  语句，同时游标处于活动状态。游标是一个指针，此时指向查询结果的第一行之前。</p>\n</li>\n<li>\n<p>推进游标：</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">FETCH</span> 游标名 <span class=\"token keyword\">INTO</span> 变量表</pre></td></tr></table></figure><p>该语句执行时，游标推进一行，并把游标指向的行（称为当前行）中的值取出，送到共享变量中</p>\n</li>\n<li>\n<p>关闭游标：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">CLOSE</span> 游标名</pre></td></tr></table></figure><p>该语句关闭游标，使它不再和查询结果相联系。游标关闭后，后面还可以再打开。</p>\n</li>\n</ol>\n<p>某停车场有多个入口和出口，车辆进入时从入口处由系统查询可用的停车位，从出口驶出时系统将其刚使用的车位标记为 空车位。 假设实现停车场管理的伪指令如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">伪指令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>Get( )</code></td>\n<td style=\"text-align:center\">返回一个空车位号。如果当前没有空车位，则返回空值  <code>NULL</code> 。 例如： <code>x=Get( )</code> ，表示读取空的停车位到变量  <code>x</code>  中</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Writ(A, 0)</code></td>\n<td style=\"text-align:center\">置停车位  <code>A</code>  状态为空</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Writ(A, 1)</code></td>\n<td style=\"text-align:center\">置停车位  <code>A</code>  状态为非空</td>\n</tr>\n</tbody>\n</table>\n<p>【问题 3】（4 分）</p>\n<p>若停车位表的关系模式为： <code>park(parkno, isused)</code> ，其中  <code>parkno</code>  为停车位号， <code>isused</code>  为停车位标志，0 为空，1 为非空。  下面是用 E-SQL 实现的查询空车位的函数  <code>Get()</code> ，请补全空缺处的代码。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SET</span> <span class=\"token keyword\">TRANSACTION</span> <span class=\"token keyword\">ISOLATION</span> <span class=\"token keyword\">LEVEL</span> <span class=\"token keyword\">SERIALIZABLE</span> <span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">DECLARE</span> getblk <span class=\"token keyword\">CURSOR</span> <span class=\"token keyword\">FOR</span> ___<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> ___<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">OPEN</span> getblk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">FETCH</span> getblk <span class=\"token keyword\">INTO</span> :Hparkno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- Hparkno 为已声明的主变量 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">IF</span> SQLCA<span class=\"token punctuation\">.</span>sqlcode <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token keyword\">THEN</span> <span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span> <span class=\"token keyword\">CLOSE</span> getblk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">Return</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">ELSE</span> ___<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> ___<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span></pre></td></tr></table></figure><h2 id=\"存储过程\"><a class=\"anchor\" href=\"#存储过程\">#</a> 存储过程</h2>\n<p>存储过程（Procedure）：是一组为了完成特定功能的 SQL 语句集合，经编译后存储在数据库中，用户通过指定存储过程的名称并给出参数来执行。</p>\n<p>存储过程中可以包含逻辑控制语句和数据操纵语句，它可以接受参数、输出参数、返回 单个或多个结果集以及返回值。</p>\n<p>由于存储过程在创建时即在数据库服务器上进行了编译并存储在数据库中，所以存储过程运行要比单个的 SQL 语句块要快。</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> 存储过程名<span class=\"token punctuation\">(</span><span class=\"token operator\">IN</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">OUT</span> <span class=\"token operator\">|</span> <span class=\"token operator\">IN</span> <span class=\"token keyword\">OUT</span> 参数<span class=\"token number\">1</span> 数据类型 ， <span class=\"token operator\">IN</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">OUT</span> <span class=\"token operator\">|</span> <span class=\"token operator\">IN</span> <span class=\"token keyword\">OUT</span> 参数<span class=\"token number\">2</span> 数据类型 …<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">AS</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">-- 参数的数据类型只需要指明类型名即可 ， 不需要指定宽度 。 具体宽度由外部调用者决定 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">BEGIN</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span> <span class=\"token keyword\">SQL</span> 语句 <span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr></table></figure><p><code>IN</code> ：为默认值，表示该参数为输入型参数，在过程体中值一般不变。</p>\n<p><code>OUT</code> ：表示该参数为输出参数，可以作为存储过程的输出结果，供外部调用者使用。</p>\n<p><code>IN OUT</code> ： 既可作为输入参数，也可作为输出参数。<br />\n某航空售票系统负责所有本地起飞航班的机票销售，并设有多个机票销售网点。以下为 E-SQL 编写的部分售票代码：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> balance <span class=\"token keyword\">INTO</span> :x</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> tickets</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> flight <span class=\"token operator\">=</span> :flightno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tprintf<span class=\"token punctuation\">(</span>“ 航班 <span class=\"token operator\">%</span> 当前剩余机票数为 ： <span class=\"token operator\">%</span>d \\ n请输入购票数 ： ” ， flightno<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tscanf<span class=\"token punctuation\">(</span>“ <span class=\"token operator\">%</span>d ”<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">EXEC</span> <span class=\"token keyword\">SQL</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">UPDATE</span> tickets</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> :x <span class=\"token operator\">-</span> :a</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">WHERE</span> flight <span class=\"token operator\">=</span> :flightno</pre></td></tr></table></figure><p>【问题 3】（4 分） 下面是改写的存储过程，其中 flightno 为航班号；a 为购票数；result 为执行状态；1 表示成功，0 表示失败；表 tickets 中的剩余机票数 balance 具有大于等于零约束。请补充完整。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> PROCEDRUE buy_ticket <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span> flightno <span class=\"token operator\">IN</span><span class=\"token punctuation\">,</span> ___<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> result <span class=\"token keyword\">OUT</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">BEGIN</span> … …</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">UPDATE</span> tickets</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> ___<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> flght <span class=\"token operator\">=</span> flightno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>SQLcode <span class=\"token operator\">&lt;></span> SUCCESS<span class=\"token punctuation\">)</span> &#123; <span class=\"token comment\">-- SQLcode 为 SQL 语句的执行状态 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t___<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>___<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tresult <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125; </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">COMMIT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>___<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>___</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">END</span></pre></td></tr></table></figure>",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94SQL%E8%AF%AD%E8%A8%80%EF%BC%88%E4%B8%8A%EF%BC%89/",
            "url": "http://cwlrin.github.io/qc-cstp/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7%E2%80%94%E2%80%94SQL%E8%AF%AD%E8%A8%80%EF%BC%88%E4%B8%8A%EF%BC%89/",
            "title": "软考中级——SQL语言（上）",
            "date_published": "2024-04-14T11:05:03.000Z",
            "content_html": "<h1 id=\"sql-概述与数据库定义\"><a class=\"anchor\" href=\"#sql-概述与数据库定义\">#</a> SQL 概述与数据库定义</h1>\n<h2 id=\"sql-的基本组成\"><a class=\"anchor\" href=\"#sql-的基本组成\">#</a> SQL 的基本组成</h2>\n<ol>\n<li>数据定义语言。SQL DDL 提供定义关系模式和视图、删除关系和视图、修改关系模式的命令。</li>\n<li>交互式数据操纵语言。SQL DML 提供查询、插入、删除和修改的命令。</li>\n<li>事务控制。SQL 提供定义事务开始和结束的命令。</li>\n<li>嵌入式 SQL 和动态 SQL。用于嵌入到某种通用的高级语言中混合编程。其中，SQL 负责操纵数据库，高级语言负责控制程序流程。</li>\n<li>完整性。SQL DDL 包括定义数据库中的数据必须满足的完整性约束条件的命令，对于破坏完整性约束条件的更新将被禁止。</li>\n<li>权限管理。SQL DDL 中包括说明对关系和视图的访问权限。</li>\n<li>SQL 语言中完成核心功能的 9 个动词：\n<ol>\n<li>数据查询： <code>Select</code></li>\n<li>数据定义： <code>Create</code> ,  <code>Drop</code> ,  <code>Alter</code></li>\n<li>数据操纵： <code>Insert</code> ,  <code>Update</code> ,  <code>Delete</code></li>\n<li>数据控制： <code>Grant</code> ,  <code>Revoke</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"sql的数据类型\"><a class=\"anchor\" href=\"#sql的数据类型\">#</a> SQL 的数据类型</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>char(n)</code></td>\n<td style=\"text-align:center\">固定长度字符串，表示  <code>n</code>  个字符的固定长度字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>varchar(n)</code></td>\n<td style=\"text-align:center\">可变长度字符串，表示最多可以有  <code>n</code>  个字符的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>int</code></td>\n<td style=\"text-align:center\">整型，也可以用  <code>integer</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>smallint</code></td>\n<td style=\"text-align:center\">短整型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>numeric(p, d)</code></td>\n<td style=\"text-align:center\">定点数， <code>p</code>  为整数位， <code>n</code>  为小数位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>real</code></td>\n<td style=\"text-align:center\">浮点型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>double precision</code></td>\n<td style=\"text-align:center\">双精度浮点型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>float(n)</code></td>\n<td style=\"text-align:center\"><code>n</code>  为浮点型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>boolean</code></td>\n<td style=\"text-align:center\">布尔型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>date</code></td>\n<td style=\"text-align:center\">日期型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>time</code></td>\n<td style=\"text-align:center\">时间型</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"表的创建-修改和删除\"><a class=\"anchor\" href=\"#表的创建-修改和删除\">#</a> 表的创建、修改和删除</h2>\n<h3 id=\"创建表\"><a class=\"anchor\" href=\"#创建表\">#</a> 创建表</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span> 表名 <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span> 列名 <span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span> 数据类型 <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>…</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>表级完整性约束条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注：[] 表示可选，&lt;&gt; 表示必填。</p>\n<h4 id=\"实体完整性约束\"><a class=\"anchor\" href=\"#实体完整性约束\">#</a> 实体完整性约束</h4>\n<ol>\n<li>在列后面加  <code>PRIMARY KEY</code></li>\n<li>在最后加  <code>PRIMARY KEY(属性名1, 属性名2)</code>  ，主码为属性组（两个或以上属性的组合）只能用这种方法</li>\n</ol>\n<h4 id=\"参照完整性约束\"><a class=\"anchor\" href=\"#参照完整性约束\">#</a> 参照完整性约束</h4>\n<ol>\n<li>\n<p>在列后面加  <code>References</code>  表名（属性名）</p>\n</li>\n<li>\n<p>在最后面加，有几个外码，就写几行。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Foreign</span> <span class=\"token keyword\">Key</span> <span class=\"token punctuation\">(</span>属性名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">References</span> 表名 <span class=\"token punctuation\">(</span>属性名<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">CASCADE</span><span class=\"token operator\">|</span><span class=\"token keyword\">SET</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><code>ON DELETE CASCADE</code>  表示删除被参照关系的元组时，同时删除参照关系中的元组；</p>\n<p><code>ON DELETE SET NULL</code>  表示删除被参照关系的元组时，将参照关系的相应属性值置为空值。</p>\n</li>\n</ol>\n<h4 id=\"属性值上的约束\"><a class=\"anchor\" href=\"#属性值上的约束\">#</a> 属性值上的约束</h4>\n<ol>\n<li><code>NOT NULL</code> ：表示不允许取空值；</li>\n<li><code>UNIQUE</code> ：表示取值唯一；</li>\n<li><code>NOT NULL UNIQUE</code> ：表示取值唯一且不为空；</li>\n<li><code>CHECK</code> ：限制列中值的取值范围。</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tSex <span class=\"token operator\">=</span> <span class=\"token string\">'男'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token operator\">OR</span> Sex <span class=\"token operator\">=</span> <span class=\"token string\">'女'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>余额 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t年龄 <span class=\"token operator\">>=</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token operator\">AND</span> 年龄 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"全局约束\"><a class=\"anchor\" href=\"#全局约束\">#</a> 全局约束</h4>\n<h5 id=\"基于元组的检查子句\"><a class=\"anchor\" href=\"#基于元组的检查子句\">#</a> 基于元组的检查子句</h5>\n<p>这种约束是对单个关系的元组值加以约束。</p>\n<p>入职日期小于等于离职日期，可以用</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> E <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tEno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t入职日期 <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t离职日期 <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>入职日期 <span class=\"token operator\">&lt;=</span> 离职日期<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"基于断言的语法格式\"><a class=\"anchor\" href=\"#基于断言的语法格式\">#</a> 基于断言的语法格式</h5>\n<p><code>CREATE ASSERTION &lt;断言名&gt; CHECK (&lt;条件&gt;)</code></p>\n<p>教学数据库的模式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Students、SC、C</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Students、SC、C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">Students</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\">SC</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\">C</span></span></span></span></span> 中创建一个约束  <code>ASSE_SC1</code> ：不允许男同学选修 “张勇” 老师的课。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> ASSERTION ASSE_SC1 <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">SELECT</span> Cno</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">FROM</span> C</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">WHERE</span> TEACHER <span class=\"token operator\">=</span> <span class=\"token string\">'张勇'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token operator\">AND</span> Sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">FROM</span> Students</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">WHERE</span> SEX <span class=\"token operator\">=</span> <span class=\"token string\">'M'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>建立一个供应商、零件数据库。其中关系供应商 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>S(Sno, Sname, Status,City)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{S(Sno, Sname, Status,City)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">S(Sno, Sname, Status,City)</span></span></span></span></span>，关系零件 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>P(Pno,Pname,Color,Weight,City)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{P(Pno,Pname,Color,Weight,City)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">P(Pno,Pname,Color,Weight,City)</span></span></span></span></span>。该数据库要满足如下要求：</p>\n<ol>\n<li>\n<p>供应商代码不能为空，且值是唯一的，供应商的名称也是唯一的。</p>\n</li>\n<li>\n<p>零件号不能为空，且值是唯一的；零件名不能为空。</p>\n</li>\n<li>\n<p>一个供应商可以供应多个零件，而一个零件可以由多个供应商供应。</p>\n</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> S <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Sname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">Status</span> <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    City <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 此处隐含 Sno 唯一且不为空 ， 列级完整性约束可不写 </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> P <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Pno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Pname <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    Color <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Weight <span class=\"token keyword\">NUMERIC</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    City <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Pno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> SP <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Sno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Pno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">Status</span> <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Qty <span class=\"token keyword\">NUMERIC</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Pno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> S <span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>Pno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> P <span class=\"token punctuation\">(</span>Pno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"修改表\"><a class=\"anchor\" href=\"#修改表\">#</a> 修改表</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ADD</span> <span class=\"token operator\">&lt;</span>新列名<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>列级完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">DROP</span> <span class=\"token operator\">&lt;</span>完整性约束名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">Modify</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>数据类型<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> S</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ADD</span> Zap <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 在表 S 中新增一列 ZAP ， 该列的数据为空</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> S</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">Status</span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 将表 S 的 Status 属性的数据类型更改为 INT</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> S</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">ADD</span> <span class=\"token keyword\">Constraint</span> C_cno <span class=\"token keyword\">CHECK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 在表 S 中新增 CHECK 约束 ， 取名为 C_cno</span></pre></td></tr></table></figure><h3 id=\"删除表\"><a class=\"anchor\" href=\"#删除表\">#</a> 删除表</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> S<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 表删除后 ， 不再是数据库模式的一部分</span></pre></td></tr></table></figure><h2 id=\"索引的创建和删除\"><a class=\"anchor\" href=\"#索引的创建和删除\">#</a> 索引的创建和删除</h2>\n<h3 id=\"索引的概念\"><a class=\"anchor\" href=\"#索引的概念\">#</a> 索引的概念</h3>\n<ul>\n<li>数据库中的索引与书籍中的索引类似，在一本书中，利用索引可以快速查找到所需信息，无须阅读整本书。在数据库中，索引使数据库无须对整个表进行扫描，就可以在其中找到所需数据。</li>\n<li>比如在字典中，我们按字母建立索引。在数据库中，索引是某个表中的一列或者若干列的值的集合，和相应的指向表中物理标识这些值的数据页的逻辑指针清单。</li>\n</ul>\n<h3 id=\"索引的作用\"><a class=\"anchor\" href=\"#索引的作用\">#</a> 索引的作用</h3>\n<ol>\n<li>通过创建唯一索引，可以保证数据记录的唯一性。</li>\n<li>可以大大加快数据检索速度。</li>\n<li>可以加速表与表之间的连接，这一点在实现数据的参照完整性方面有特别的意义。</li>\n<li>在使用  <code>ORDER BY</code>  和  <code>GROUP BY</code>  子句中进行检索数据时，可以显著减少查询中分组和排序的时间。</li>\n<li>使用索引可以在检索数据的过程中使用优化隐藏器，提高系统性能。</li>\n</ol>\n<p>索引分为聚集索引和非聚集索引。聚集索引是指索引表中索引项的顺序与表中记录的物理顺序一致的索引。</p>\n<h3 id=\"建立索引\"><a class=\"anchor\" href=\"#建立索引\">#</a> 建立索引</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>CLUSTER<span class=\"token punctuation\">]</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span> 索引名 <span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span> 表名 <span class=\"token operator\">></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span> 列名 <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>次序<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>…<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>次序： <code>ASC</code> （升序）或  <code>DESC</code> （降序），默认为升序。</li>\n<li><code>UNIQUE</code> ：表明此索引的每一个索引值只对应唯一的数据记录。</li>\n<li><code>CLUSTER</code> ：表明要建立的索引是聚簇索引，意为索引项的顺序是与表中记录的物理顺序一致的索引组织</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> S_Sno <span class=\"token keyword\">on</span> S<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 在表 S 的 Sno 列上建立索引 S_Sno ， 默认为升序 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> P_Pno <span class=\"token keyword\">on</span> P<span class=\"token punctuation\">(</span>Pno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- / 在表 P 的 Pno 列上建立索引 P_Pno ， 默认为升序 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> J_Jno <span class=\"token keyword\">on</span> J<span class=\"token punctuation\">(</span>Jno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- / 在表 J 的 Jno 列上建立索引 J_Jno ， 默认为升序 </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token keyword\">INDEX</span> SPJ_NO <span class=\"token keyword\">on</span> SPJ<span class=\"token punctuation\">(</span>Sno <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span> Pno <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> Jno <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 在表 SPJ 上建立索引 SPJ_NO ， 属性 Sno 按升序 ， Pno 按降序 ， Jno 按升序</span></pre></td></tr></table></figure><h3 id=\"删除索引\"><a class=\"anchor\" href=\"#删除索引\">#</a> 删除索引</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> <span class=\"token operator\">&lt;</span>索引名<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> StudentIndex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 删除索引 StudentIndex</span></pre></td></tr></table></figure><h2 id=\"视图的创建和删除\"><a class=\"anchor\" href=\"#视图的创建和删除\">#</a> 视图的创建和删除</h2>\n<h3 id=\"视图的作用\"><a class=\"anchor\" href=\"#视图的作用\">#</a> 视图的作用</h3>\n<p>教材 P300</p>\n<h3 id=\"创建视图\"><a class=\"anchor\" href=\"#创建视图\">#</a> 创建视图</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> 视图名<span class=\"token punctuation\">(</span>列表名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> 查询子句 <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>视图的创建中，必须遵循如下规定：</p>\n<ol>\n<li>子查询可以是任意复杂的 SELECT 语句，但通常不允许含有 ORDER BY 子句和 DISTINCT 短语。</li>\n<li><code>WITH CHECK OPTION</code>  表示对  <code>UPDATE, INSERT, DELETE</code>  操作时保证更新、插入或删除的行满足视图定义中的谓词条件（即子查询中的条件表达式）</li>\n<li>组成视图的属性列名或者全部省略或者全部指定。如果省略属性列名，则隐含该视图由  <code>SELECT</code>  子查询目标列的主属性组成。</li>\n</ol>\n<p>例：学生关系模式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>S(Sno,Sname,Sage,Sex,SD,Email,Tel)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{S(Sno,Sname,Sage,Sex,SD,Email,Tel)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">S(Sno,Sname,Sage,Sex,SD,Email,Tel)</span></span></span></span></span>​，建立计算机系（CS 表示计算机系）学生的视图，并要求进行修改、插入操作时保证该视图只有计算机系的学生。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_STUDENT <span class=\"token comment\">-- 创建视图 CS_STUDENT AS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       Sage<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       Sex <span class=\"token comment\">-- 选择学号 、 姓名 、 年龄 、 性别列</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">FROM</span> Student <span class=\"token comment\">-- 从学生表中查询</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">Where</span> SD <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span> <span class=\"token comment\">-- 选择系名等于 “CS” 的行 WITH CHECK OPTION;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">-- 以后对该视图进行修改 、 插入操作时 DBMS 会自动加上 SD = 'CS' 的条件 ， 保证视图中只有计算机系的学生</span></pre></td></tr></table></figure><h3 id=\"删除视图\"><a class=\"anchor\" href=\"#删除视图\">#</a> 删除视图</h3>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> 视图名</pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> CS_STUDENT <span class=\"token comment\">-- 删除视图 CS_STUDENT</span></pre></td></tr></table></figure><div class=\"note primary\">\n<p>某大型集团公司的数据库的部分关系模式如下：<br />\n员工表：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>EMP(Eno,Ename,Age,Sex,Title)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{EMP(Eno,Ename,Age,Sex,Title)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">EMP(Eno,Ename,Age,Sex,Title)</span></span></span></span></span>，各属性分别表示员工工号、姓名、年龄、性别和职称级别，其中性别取值为 “男”“女”；<br />\n公司表：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>COMPANY(Cno,Cname,City)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{COMPANY(Cno,Cname,City)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">COMPANY(Cno,Cname,City)</span></span></span></span></span>，各属性分别表示公司编号、名称和所在城市；<br />\n工作表：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>WORKS(Eno,Cno,Salary)</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{WORKS(Eno,Cno,Salary)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">WORKS(Eno,Cno,Salary)</span></span></span></span></span>，各属性分别表示职工工号、工作的公司编号和工资。<br />\n有关关系模式的属性及相关说明如下：</p>\n<ol>\n<li>\n<p>允许一个员工在多家公司工作，使用身份证号作为工号值。</p>\n</li>\n<li>\n<p>工资不能低于 1500 元。</p>\n</li>\n</ol>\n<p>【问题 1】</p>\n<p>请将下面创建工作关系的 SQL 语 句的空缺部分补充完整，要求指定关系的主码、外码，以及工资不能低于 1500 元的约束。</p>\n<p>【问题 2】<br />\n创建女员工信息的视图 FemaleEMP，属性有 Eno、Ename、Cno、Cname 和 Salary，请将下面 SQL 语句的空缺部分补充完整。</p>\n</div>\n<details class=\"primary\"><summary>答案</summary><div>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> WORKS<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Eno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> ____<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>____<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Cno <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> ____<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>____<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Salary <span class=\"token keyword\">int</span> ____<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>____<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> ____<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>____<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> ____<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>____ <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> EMP<span class=\"token punctuation\">.</span>Eno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Ename<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    COMPANY<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Cname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Salary</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">From</span> EMP<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    COMPANY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    WORKS</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">WHERE</span> ____<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>____<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div></details>\n<h1 id=\"数据操作\"><a class=\"anchor\" href=\"#数据操作\">#</a> 数据操作</h1>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUYTRvSUIxYXpkSG9XNlBSTDQ3dlNzQl8tcGVHRjlCLXQwVTEtM0dmVTRrNkE_ZT1oUjhDeHM.png\" alt=\"\" /></p>\n<h2 id=\"select-基本结构\"><a class=\"anchor\" href=\"#select-基本结构\">#</a> Select 基本结构</h2>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ALL</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> 目标列表达式 <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> …</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span> 表名或视图名 <span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>表名或视图名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> <span class=\"token operator\">&lt;</span>条件表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>列名<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span> … <span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVRWZ6Nzhiclp4RmlGNHdoMGtUUkZvQnpQak5NSFVwdlk1dDlNZGlqOWRkbUE_ZT0zb25jZXQ.png\" alt=\"\" /></p>\n<h2 id=\"简单查询\"><a class=\"anchor\" href=\"#简单查询\">#</a> 简单查询</h2>\n<h3 id=\"最基本的查询语句\"><a class=\"anchor\" href=\"#最基本的查询语句\">#</a> 最基本的查询语句</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> S</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> sex <span class=\"token operator\">=</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>等价于：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><mrow><mi>s</mi><mi>e</mi><mi>x</mi><msup><mo>=</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mtext>男</mtext><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">π_{Sno,Sname}(σ_{sex=&#x27;男&#x27;}(S))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">nam</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">se</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\"><span class=\"mrel mtight\">=</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">男</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">))</span></span></span></span></p>\n<h3 id=\"更名操作\"><a class=\"anchor\" href=\"#更名操作\">#</a> 更名操作</h3>\n<p>使用  <code>AS</code>  可以给列和表重命名。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> 学生表<span class=\"token punctuation\">.</span>sno <span class=\"token keyword\">as</span> 学号<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname <span class=\"token keyword\">as</span> 姓名<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Grade 成绩 <span class=\"token comment\">-- AS 是可以省略的</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> S 学生表<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    SC 课程表 <span class=\"token comment\">-- 表也可以重命名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">where</span> 学生表<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> 课程表<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">and</span> 学生表<span class=\"token punctuation\">.</span>SD <span class=\"token operator\">=</span> <span class=\"token string\">'计算机'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 表重命名后 ， 引用时一定要用 新名称 ， 这里不能再用 S 和 SC</span></pre></td></tr></table></figure><h2 id=\"连接查询\"><a class=\"anchor\" href=\"#连接查询\">#</a> 连接查询</h2>\n<p>如果涉及两个以上的表，则称为连接查询。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTUERvTFRfV2xoS28yellxRzAtSTRvQmp1WlFxa3FWRXlXZDg2LVRjM1ZqaVE_ZT1mdkFjdW8.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRRzJtbFpIODg5UGlZTkoxVDhPZjd3QldnZ28xa1FoaTltZlRqSGZVS3Z6Y3c_ZT1JeDBUcE0.png\" alt=\"\" /></p>\n<ol>\n<li>检索选修了课程号为 'C1' 的学生号和姓名</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> S<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> S<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    SC</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> S<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">-</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C1'</span></pre></td></tr></table></figure><p>等价于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mrow><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi>S</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow></msub><mo stretchy=\"false\">(</mo><msub><mi>σ</mi><mrow><mi>S</mi><mi mathvariant=\"normal\">.</mi><mi>S</mi><mi>n</mi><mi>o</mi><mo>=</mo><mi>S</mi><mi>C</mi><mi mathvariant=\"normal\">.</mi><mi>S</mi><mi>n</mi><mi>o</mi><mo>∧</mo><mi>S</mi><mi>C</mi><mi mathvariant=\"normal\">.</mi><mi>C</mi><mi>n</mi><mi>o</mi><msup><mo>=</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>C</mi><msup><mn>1</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo>×</mo><mi>S</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi_{S.Sno,Sname}(\\sigma_{S.Sno=SC.Sno\\wedge SC.Cno=&#x27;C1&#x27;}(S\\times SC))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mtight\">.</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">nam</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mtight\">.</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">SC</span><span class=\"mord mtight\">.</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mbin mtight\">∧</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">SC</span><span class=\"mord mtight\">.</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mrel mtight\"><span class=\"mrel mtight\">=</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">SC</span><span class=\"mclose\">))</span></span></span></span><br />\n+++</p>\n<ol start=\"2\">\n<li>检索选修课程名为 “操作系统” 的学生号和学生姓名</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> S<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> S<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    SC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    C</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">where</span> S<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">and</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>Cno</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">and</span> C<span class=\"token punctuation\">.</span>Cname <span class=\"token operator\">=</span> <span class=\"token string\">'操作系统'</span></pre></td></tr></table></figure><p>+++</p>\n<ol start=\"3\">\n<li>检索至少选修了课程号为 'C1' 和 'C3' 的学生号</li>\n</ol>\n<details><summary>答案</summary><div>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> SC SC X<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SC SC Y</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> SC X<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC Y<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">and</span> SC X<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C1'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">and</span> SC Y<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C3'</span></pre></td></tr></table></figure></div></details>\n<h2 id=\"子查询\"><a class=\"anchor\" href=\"#子查询\">#</a> 子查询</h2>\n<p>子查询也称嵌套查询。嵌套查询是指一个 SELECT-FROM-WHERE 查询块中可以嵌入另一个查询块之中。</p>\n<p>在 SQL 中允许多重嵌套。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">IN</span> （ 在 … … 集合中 ） <span class=\"token operator\">|</span> <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> （ 不在 … … 集合中 ）</pre></td></tr></table></figure><ol>\n<li>检索选修了课程号为 'C1' 的学生号和学生姓名</li>\n</ol>\n<details><summary>答案</summary><div>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> S</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> Sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">Select</span> Sno</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">from</span> SC</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">Where</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C1'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div></details>\n<ol start=\"2\">\n<li>检索选修课程名为 “操作系统” 的学生号和学生姓名</li>\n</ol>\n<details><summary>答案</summary><div>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> S</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> Sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">Select</span> Sno</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">from</span> SC</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">Where</span> Cno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">Select</span> Cno</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">From</span> C</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">Where</span> Cname <span class=\"token operator\">=</span> <span class=\"token string\">'操作系统'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div></details>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">EXISTS</span>（存在） <span class=\"token operator\">|</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span>（不存在）</pre></td></tr></table></figure><p>查询没有被任何同学选修的课程号和课程名</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTYXFkTVJHWEZOSW1wMll5a3lGczdjQmZwaE9kUmk4bUFiamlQVjhabnVmT1E_ZT1PaHJwT0o.png\" alt=\"\" /></p>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Cno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Cname</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> C</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">where</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">from</span> SC</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">where</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>Cno</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>+++</p>\n<h2 id=\"聚集函数\"><a class=\"anchor\" href=\"#聚集函数\">#</a> 聚集函数</h2>\n<p>聚集函数是一个值的集合为输入，返回单个值的函数。</p>\n<p>SQL 提供了 5 个预定义集函数：平均值  <code>AVG()</code> 、最小值  <code>MIN()</code> 、最大值  <code>MAX()</code> 、求和  <code>SUM()</code> 、计数 <code>COUNT()</code> 。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">集函数名</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>COUNT（[DISTINCT |ALL]*）</code></td>\n<td style=\"text-align:center\">统计元组个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>COUNT（[DISTINCT | ALL] &lt;列名&gt;）</code></td>\n<td style=\"text-align:center\">统计一列中值的个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>SUM（[DISTINCT |ALL] &lt;列名&gt;）</code></td>\n<td style=\"text-align:center\">计算一列中值的总和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>AVG（[DISTINCT | ALL] &lt;列名&gt;）</code></td>\n<td style=\"text-align:center\">计算一列中值的平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MAX（[DISTINCT | ALL] &lt;列名&gt;）</code></td>\n<td style=\"text-align:center\">求一列值的最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>MIN（[DISTINCT | ALL] &lt;列名&gt;）</code></td>\n<td style=\"text-align:center\">求一列值的最小值</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTdVpERDFzTjhsR3NUWThKT2FRTVZzQmJJb3ZCMEFfMnpJQmhaNkRURjNCY3c_ZT1ZYUdWSFM.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZYXJLRnZXZzI5SXFSY1RqSFA0aGY4QmxJNnZKYlFGNU5RS1VCSVUxeEg0QVE_ZT1jd3Fxb3I.png\" alt=\"\" /></p>\n<ol>\n<li>查询课程 C1 的最高分和最低分以及高低分之间的差距<br />\n +++ 答案</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> <span class=\"token function\">MAX</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">MIN</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">MAX</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token function\">MIN</span> <span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">From</span> SC</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">Where</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C1 '</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>查询其他系比计算机系所有学生年龄都要小的学生姓名和年龄</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Age</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">From</span> S</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">Where</span> Age <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">ALL</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Selec tAge</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">From</span> S WhereSD <span class=\"token operator\">=</span> <span class=\"token string\">'计算机'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">AND</span> SD <span class=\"token operator\">&lt;></span> <span class=\"token string\">'计算机'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">Select</span> Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Age</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">From</span> S</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">Where</span> Age <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">SELECT</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>Age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">From</span> S</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">Where</span> SD <span class=\"token operator\">=</span> <span class=\"token string\">'计算机'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">AND</span> SD <span class=\"token operator\">&lt;></span> <span class=\"token string\">'计算机'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>+++</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">谓 词</th>\n<th style=\"text-align:center\">等价的聚集函数</th>\n<th style=\"text-align:center\">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>&gt;/&gt;= ANY</code></td>\n<td style=\"text-align:center\"><code>&gt;/&gt;= MIN</code></td>\n<td style=\"text-align:center\">大于 / 大于等于子查询结果中的某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;/&gt;= ALL</code></td>\n<td style=\"text-align:center\"><code>&gt;/&gt;= MAX</code></td>\n<td style=\"text-align:center\">大于 / 大于等于子查询结果中的所有值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;/&lt;= ANY</code></td>\n<td style=\"text-align:center\"><code>&lt;/&lt;= MAX</code></td>\n<td style=\"text-align:center\">小于 / 小于等于子查询结果中的某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;/&lt;= ALL</code></td>\n<td style=\"text-align:center\"><code>&lt;/&lt;= MIN</code></td>\n<td style=\"text-align:center\">小于 / 小于等于子查询结果中的所有值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;&gt;ANY</code></td>\n<td style=\"text-align:center\">--</td>\n<td style=\"text-align:center\">不等于子查询结果中的某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;&gt;ALL</code></td>\n<td style=\"text-align:center\"><code>NOT IN</code></td>\n<td style=\"text-align:center\">不等于子查询结果中的任何一个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>=ANY</code></td>\n<td style=\"text-align:center\"><code>IN</code></td>\n<td style=\"text-align:center\">等于子查询结果中的某个值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>=ALL</code></td>\n<td style=\"text-align:center\">--</td>\n<td style=\"text-align:center\">等于子查询结果中的所有值</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"分组查询\"><a class=\"anchor\" href=\"#分组查询\">#</a> 分组查询</h2>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjTlltSFZWM1l4SHZVa1RrMVBjclJvQlh4TzlCaGNNdW1Ec2xnc1FSb0lZNWc_ZT1KaExPcjA.png\" alt=\"\" /></p>\n<h3 id=\"group-by-子句\"><a class=\"anchor\" href=\"#group-by-子句\">#</a> GROUP BY 子句</h3>\n<p>对元组进行分组，此时聚集函数只用于每个分组。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> SC<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> SC</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"having-子句\"><a class=\"anchor\" href=\"#having-子句\">#</a> HAVING 子句</h3>\n<p>假如元组在分组前按照某种方式加上限制，使得不需要的分组为空。可以在  <code>GROUP BY</code>  子句后面加上 <code>HAVING</code>  子句。</p>\n<p>其实就是分组后做一个选择，去掉不满足  <code>HAVING</code>  后面的那个条件的分组。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> SC</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"字符串操作\"><a class=\"anchor\" href=\"#字符串操作\">#</a> 字符串操作</h2>\n<p>字符串常用  <code>LIKE</code>  来进行匹配操作， <code>%</code>  匹配任意长度字符串； <code>_</code>  匹配任意一个字符。模式是区分大小写的。</p>\n<ol>\n<li>\n<p>查询住址包含 “科技路” 的学生姓名</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sname</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> S</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Where</span> Addr <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%科技路%'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>查询名字为‘国庆’的学生姓名、年龄和所在系</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">Select</span> Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sage<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SD</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> S</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">Where</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'__国庆'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<p>为了使模式中包含特殊字符，即  <code>%</code>  和  <code>_</code> ，允许使用  <code>ESCAPE</code>  关键词来定义转义符， <code>LIKE</code>  语句后面紧跟  <code>ESCAPE</code>   <code>'\\'</code>  表明转义符  <code>'\\'</code>  后面的特殊字符为普通字符</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">LIKE</span> <span class=\"token string\">'ab\\%cd%'</span> <span class=\"token keyword\">escape</span> <span class=\"token string\">'\\' --匹配所有以ab%cd开头的字符串</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>LIKE '</span> ab \\ \\ cd <span class=\"token operator\">%</span><span class=\"token string\">' escape '</span> \\ ' <span class=\"token comment\">-- 匹配所有以 ab\\cd 开头的字符串</span></pre></td></tr></table></figure><h2 id=\"集合操作\"><a class=\"anchor\" href=\"#集合操作\">#</a> 集合操作</h2>\n<ol>\n<li><code>UNION</code> （并）、 <code>UNION ALL</code> （不去掉重复行）</li>\n<li><code>INTERSECT</code> （交）</li>\n<li><code>EXCEPT</code> （差）</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VlTFEtWXZ5RkpSUHZxeERIWTRUcnNNQjREc1hXTzRVQjdJSG43OEhUcWV0bkE_ZT1WS0Fhc3g.png\" alt=\"SumatraPDF_TAT3JRSgoOd43491cd9208e77c.png\" /></p>\n<p>贷款 (customer-no, loan-no)<br />\n 存款 (customer-no, account-no)</p>\n<ol>\n<li><code>UNION</code> （并）、 <code>UNION ALL</code> （不去掉重复行）查询在银行有贷款或者有存款的所有客户身份证号</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> 贷款</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">union</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> 存款<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>+++</p>\n<ol start=\"2\">\n<li><code>INTERSECT</code> （交）查询在银行既有贷款又有存款的客户身份证号</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> 贷款</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">intersect</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> 存款<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>+++</p>\n<ol start=\"3\">\n<li><code>EXCEPT</code> （差）查询只在银行有贷款而没有存款的客户身份证号</li>\n</ol>\n<p>+++ 答案</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> 贷款</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'customer-no'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> 存款<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>+++</p>\n<h2 id=\"外连接\"><a class=\"anchor\" href=\"#外连接\">#</a> 外连接</h2>\n<h3 id=\"left-join左外连接\"><a class=\"anchor\" href=\"#left-join左外连接\">#</a> LEFT JOIN（左外连接）</h3>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYamVzZnBrVWR0TXVUQ19Md3cwTWJrQnNyQUdiZXRNZ3lSNW52SlB1ZmRJSFE_ZT1ueUh3SWY.png\" alt=\"SumatraPDF_GHugQSpQ8r.png\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> S<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SC<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Grade</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">FROM</span> S</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> SC <span class=\"token keyword\">ON</span> S<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"right-join右外连接\"><a class=\"anchor\" href=\"#right-join右外连接\">#</a> RIGHT JOIN（右外连接）</h3>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VmNXAxai1Bc2FOQXJ6dmJfOG9uZUg4QnB0YVVkc290VGNUWE5BSnV1VHdtTHc_ZT05Nm1kUmw.png\" alt=\"\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> S<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SC<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Grade</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">FROM</span> S</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">JOIN</span> SC <span class=\"token keyword\">ON</span> S<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"full-join全外连接\"><a class=\"anchor\" href=\"#full-join全外连接\">#</a> FULL JOIN（全外连接）</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> S<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    SC<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Grade</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">FROM</span> S</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">FULL</span> <span class=\"token keyword\">JOIN</span> SC <span class=\"token keyword\">ON</span> S<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"insert-into-语句\"><a class=\"anchor\" href=\"#insert-into-语句\">#</a> INSERT INTO 语句</h2>\n<p><code>INSERT INTO</code>  语句用于向表中插入新的行。</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 值<span class=\"token number\">2</span> …<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 表名<span class=\"token punctuation\">(</span>列名<span class=\"token number\">1</span> ， 列名<span class=\"token number\">2</span> …<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 值<span class=\"token number\">2</span> …<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRTjdaaW96dTM1TXJHZmt1ZG5MUTVFQmY3c1h2eUxOX0ZmX29jUmhDczJUZEE_ZT1RcDhSU2Y.png\" alt=\"\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'84'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SC<span class=\"token punctuation\">(</span>SNO<span class=\"token punctuation\">,</span> CNO<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"delete-语句\"><a class=\"anchor\" href=\"#delete-语句\">#</a> DELETE 语句</h2>\n<p><code>DELETE</code>  语句用于删除表中的行。</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">WHERE</span> 条件表达式</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VTSl82QnRiclN4Qm8zeVh2RVpoSVhRQnFKTHNwcU1qM1EyYUJsTW1DUnBLTFE_ZT1sb2pVcm4.png\" alt=\"\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C1'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>也可以删除表中的所有数据</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 表名</pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注意：不同于  <code>DORP TABLE SC</code> ， <code>DELETE</code>  只是删除表中的数据，但是关系模式仍然存在，表  <code>SC</code>  仍然存在于数据库中。</p>\n<h2 id=\"update-语句\"><a class=\"anchor\" href=\"#update-语句\">#</a> UPDATE 语句</h2>\n<p><code>UPDATE</code>  语句用于修改表中的数据。</p>\n<p>语句格式：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> 表名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SET</span> 列名 <span class=\"token operator\">=</span> 新值</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> 条件表达式</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VkV0s3emR4SGI1QXBGR2JycFUxaFNvQnNmeVNlWXJCNnRncGt3dXlMWTZYRGc_ZT1uZVhYWVU.png\" alt=\"\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UPDATE</span> SC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SET</span> Grade <span class=\"token operator\">=</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> <span class=\"token string\">'3001'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'C2'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"视图的查询与更新\"><a class=\"anchor\" href=\"#视图的查询与更新\">#</a> 视图的查询与更新</h2>\n<h3 id=\"视图的查询\"><a class=\"anchor\" href=\"#视图的查询\">#</a> 视图的查询</h3>\n<p>建立计算机系（CS 表示计算机系）学生的视图，并要求进行修改、插入操作时保证该视图只有计算机系的学生。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> CS_STUDENT <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> Sname<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> Sage<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> Sex</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">Where</span> SD <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span> <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>此时要查询计算机系年龄小于 20 岁的学生的学号及年龄的 SQL 语句如下</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sage</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> CS_Student</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span></pre></td></tr></table></figure><p>系统执行该语句时，通常先将其转换成等价的对基本表的查询，然后执行查询语句。也就是查询视图时，系统先从数据字典中取出视图的定义，然后将定义中的查语和对该视图的查询语句结合起来，形成一个修正的查询语句。对上例修正之后的查询语句为</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Sage</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> SD <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">AND</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"视图的更新\"><a class=\"anchor\" href=\"#视图的更新\">#</a> 视图的更新</h3>\n<p>SQL 对视图的更新必须遵循以下规则</p>\n<ol>\n<li>从多个基本表通过连接操作导出的视图不允许更新。</li>\n<li>对使用了分组、聚集函数操作的视图不允许进行更新操作。</li>\n<li>如果视图是从单个基本表通过投影、选取操作导出的则允许进行更新操作，且语法同基本表。</li>\n</ol>\n",
            "tags": [
                "软考"
            ]
        },
        {
            "id": "http://cwlrin.github.io/c-cpp/c-sql/MySQL-%E6%9D%82%E9%A1%B9/",
            "url": "http://cwlrin.github.io/c-cpp/c-sql/MySQL-%E6%9D%82%E9%A1%B9/",
            "title": "MySQL 杂项",
            "date_published": "2023-09-14T12:33:13.000Z",
            "content_html": "<h2 id=\"数据库的内部结构\"><a class=\"anchor\" href=\"#数据库的内部结构\">#</a> 数据库的内部结构</h2>\n<h3 id=\"数据库的分层结构\"><a class=\"anchor\" href=\"#数据库的分层结构\">#</a> 数据库的分层结构</h3>\n<p>MySQL 数据库的体系结构由四个关键层组成，每个层都负责处理不同的任务和功能。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVazJ4TExrUG9GSWstUnBuMDJGbzhNQmhmcVNPUDNyZHdiQktTcWtlZUNwbWc_ZT01WDd0SHg.png\" alt=\"MySQL.png\" /></p>\n<p>连接器负责管理客户端与 MySQL 服务器之间的连接。它不仅处理连接的建立和断开，还负责用户的身份验证和权限的检查，确保只有授权用户才能访问数据库资源。这一环节是数据库安全性的第一道防线。</p>\n<p>分析器紧接着连接器工作，它的作用是理解并解释 SQL 语句。首先，分析器通过词法分析器将输入的 SQL 语句分解成有意义的组成部分，如关键字、表名、字段名等。然后，语法分析器根据 MySQL 的语法规则，检查这些组成部分是否构成了合法的 SQL 语句。这一步骤确保了 SQL 语句的正确性和合理性。</p>\n<p>优化器是 MySQL 中的智能组件，它在理解了 SQL 语句的意图之后，会生成一个或多个执行计划。优化器的目标是选择最有效的执行策略，以最小化资源消耗和提高查询性能。例如，它会选择最合适的索引进行数据检索，或者在多表连接操作中确定最佳的表连接顺序。</p>\n<p>存储引擎层是 MySQL 体系结构中负责数据存储和检索的部分。MySQL 支持多种存储引擎，如 InnoDB 和 MyISAM，每种存储引擎都有其特定的特性和优化。存储引擎通过一组标准的 API 与 MySQL 服务器交互，这些 API 包括事务管理、数据的增删改查等操作。这些操作对服务层是透明的，意味着不同的存储引擎可以通过相同的接口与 MySQL 服务器通信，而服务层无需关心存储引擎的具体实现细节。</p>\n<h3 id=\"数据库的存储引擎\"><a class=\"anchor\" href=\"#数据库的存储引擎\">#</a> 数据库的存储引擎</h3>\n<p>InnoDB 存储引擎从 MySQL 5.1 版本开始成为默认的存储引擎，它支持事务处理、行级锁定和外键约束，提供了高并发和高崩溃恢复能力。InnoDB 存储引擎使用 B + 树索引和多版本并发控制（MVCC）来管理数据，适合需要高事务处理能力的应用</p>\n<p>MyISAM 存储引擎在 MySQL 5.1 之前是默认的存储引擎，它支持全文索引，但不提供事务支持和行级锁定，通常用于读密集型的应用。MyISAM 存储引擎使用 B + 树索引，但不支持事务，适合简单的查询和报表生成。</p>\n<h3 id=\"mysql-在-linux-的一些路径\"><a class=\"anchor\" href=\"#mysql-在-linux-的一些路径\">#</a> MySQL 在 Linux 的一些路径</h3>\n<p>MySQL 数据库服务器由数据管理系统和数据两部分构成，而这个管理系统的设计是一种单进程多线程架构。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-eLf</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> mysql</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VheTZmOXh4UDhWSHFNZHp6cnBNWGVjQkp1bm82MFlEeW5vOEkyVEJpT3FBVUE_ZT1KWmU2T0o.png\" alt=\"\" /></p>\n<p>MySQL 的安装目录：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">global</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">\"basedir\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaRGlfdzJORTA1RW1vSUtmQ3hDOC13QlJ1WlFVV05GMExSTUk0S3dETkFYZ2c_ZT1iWk54TVY.png\" alt=\"\" /></p>\n<p>在 /user/ 下 MySQL 的安装信息存在不同路径中:</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>位置</th>\n<th>其它</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mysql 客户端程序目录</td>\n<td>/usr/bin/</td>\n<td></td>\n</tr>\n<tr>\n<td>mysqld 服务器程序目录</td>\n<td>/usr/sbin/</td>\n<td></td>\n</tr>\n<tr>\n<td>mysql 客户端头文件目录</td>\n<td>/usr/include/mysql/</td>\n<td></td>\n</tr>\n<tr>\n<td>mysql 客户端库文件目录</td>\n<td>/usr/lib/mysql/</td>\n<td></td>\n</tr>\n<tr>\n<td>man 帮助手册页目录</td>\n<td>/usr/share/man/</td>\n<td></td>\n</tr>\n<tr>\n<td>字符集、语言相关的错误信息目录</td>\n<td>/usr/share/mysql/</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>MySQL 的数据文件目录:</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'datadir'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVbVVPeHZxREpkTG03NjRIS0hwdHlzQlF2MDhyQmNQZ1FXR1NEVEVkcmR4VXc_ZT1lQ2JnYlU.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYRHVTQkVtaTRkT3UtQWxJZElhSVd3QjVudDIySXhIQXQ5TGhCLXgwS1VCS0E_ZT1lTWFXZWM.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSblo0M0l6MzlsTWh4azhOdi11SkMwQjlyc0VvelJUNENmS3R5cmk4RkNmcFE_ZT1tTk1kcVk.png\" alt=\"\" /></p>\n<p>在数据目录中的一些文件的作用：</p>\n<ul>\n<li><strong>auto.cnf</strong>：MySQL 自动生成的配置文件，存储 MySQL 实例的配置信息，通常在启动时由 MySQL 服务自动创建和更新。</li>\n<li><strong>ca-key.pem, ca.pem</strong>：这些文件用于 SSL/TLS 连接，其中  <code>ca-key.pem</code>  是证书颁发机构（CA）的私钥文件，而  <code>ca.pem</code>  是 CA 的证书文件，用于验证服务器的身份。</li>\n<li><strong>client-cert.pem, client-key.pem</strong>：客户端证书和私钥文件，用于 SSL/TLS 连接，确保客户端身份的验证。</li>\n<li><strong>debian-5.7.flag</strong>：特定于 Debian 操作系统的标记文件，表明系统上安装了 MySQL 5.7 版本。</li>\n<li><strong>ibdata1, ib_buffer_pool, ib_logfile0, ib_logfile1, ibtmp1</strong>：这些文件与 InnoDB 存储引擎相关， <code>ibdata1</code>  是系统表空间文件，存储表数据和索引； <code>ib_buffer_pool</code>  是缓冲池文件，用于缓存频繁访问的数据和索引； <code>ib_logfile0</code>  和  <code>ib_logfile1</code>  是日志文件，用于事务的恢复和重放； <code>ibtmp1</code>  是临时文件，用于存储临时表数据。</li>\n<li><strong>mysql</strong>：这是 MySQL 数据库的核心目录，包含了数据库的数据文件、系统表和其他重要文件。</li>\n<li><strong>performance_schema</strong>：这是 MySQL 的性能模式相关目录，提供了性能监控和优化的详细信息。</li>\n<li><strong>private_key.pem, public_key.pem</strong>：私钥和公钥文件，用于 SSL/TLS 连接，其中  <code>private_key.pem</code>  是服务器的私钥文件，而  <code>public_key.pem</code>  是公钥文件。</li>\n<li><strong>server-cert.pem, server-key.pem</strong>：服务器的证书和私钥文件，用于 SSL/TLS 连接，确保服务器身份的验证。</li>\n<li><strong>sys</strong>：这是 MySQL 5.7 版本引入的性能模式目录，用于提供更详细的性能监控信息。</li>\n</ul>\n<p>配置文件：</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVdjY2QWVNVFUxTG1xdmN5Yl8ybF9JQllsVHctdnlRYmZQQTBxQWYzYXJ2SHc_ZT1JYkQ2aXQ.png\" alt=\"\" /></p>\n<p>日志文件:</p>\n<ol>\n<li><strong>错误日志文件</strong> ( <code>error.log</code> ):\n<ul>\n<li>位置： <code>/var/log/mysql/error.log</code></li>\n<li>用途：记录 MySQL 服务器在运行过程中遇到的错误信息。这包括启动和停止错误、崩溃错误、以及服务器运行期间的异常情况。</li>\n<li>重要性：对于诊断服务器问题、理解故障原因和采取相应措施至关重要。</li>\n</ul>\n</li>\n<li><strong>慢查询日志文件</strong> ( <code>mysql-slow.log</code> ):\n<ul>\n<li>位置： <code>/var/log/mysql/mysql-slow.log</code></li>\n<li>用途：记录执行时间超过特定阈值的 SQL 查询。这些查询被认为是 “慢查询”，通常需要优化以提高性能。</li>\n<li>重要性：通过分析慢查询日志，数据库管理员可以识别和优化性能瓶颈，提高数据库的整体性能。</li>\n</ul>\n</li>\n<li><strong>主从复制文件</strong> ( <code>mysql-bin.log</code> ):\n<ul>\n<li>位置： <code>/var/log/mysql/mysql-bin.log</code></li>\n<li>用途：记录二进制日志，包含所有更改数据库数据的语句。在主从复制配置中，主服务器上的变更通过这些日志文件复制到从服务器。</li>\n<li>重要性：对于维护数据的一致性和实现数据的高可用性至关重要。</li>\n</ul>\n</li>\n<li><strong>服务器进程 PID 文件</strong> ( <code>mysqld.pid</code> ):\n<ul>\n<li>位置： <code>/var/run/mysqld/mysqld.pid</code></li>\n<li>用途：存储 MySQL 服务器进程的进程 ID（PID）。这个文件用于标识当前运行的 MySQL 服务器进程。</li>\n<li>重要性：用于进程管理，如安全地重启或停止 MySQL 服务，以及在必要时手动终止 MySQL 进程。</li>\n</ul>\n</li>\n<li><strong>服务器 socket 文件</strong> ( <code>mysqld.sock</code> ):\n<ul>\n<li>位置： <code>/var/run/mysqld/mysqld.sock</code></li>\n<li>用途：MySQL 服务器使用的 Unix 套接字文件。客户端可以通过这个 socket 文件与 MySQL 服务器进行本地通信，而不需要通过网络接口。</li>\n<li>重要性：对于本地客户端连接数据库提供了更高效的方式，减少了网络通信的开销。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"索引\"><a class=\"anchor\" href=\"#索引\">#</a> 索引</h2>\n<h3 id=\"索引的定义\"><a class=\"anchor\" href=\"#索引的定义\">#</a> 索引的定义</h3>\n<p>MySQL 官方将索引定义为一种数据结构，它可以帮助数据库系统高效地获取数据。索引通过特定的组织方式存储数据库中的数据，以便快速定位到所需的信息。当执行查询操作时，如果没有可用的索引，数据库必须执行全表扫描，这意味着它需要检查表中的每行记录以找到匹配的数据，这通常是非常低效的。然而，如果存在适当的索引，数据库可以直接使用索引来快速定位到特定的行，或者直接定位到所需的数据，从而显著减少需要检查的数据量，提高查询速度。</p>\n<h3 id=\"数据结构和索引\"><a class=\"anchor\" href=\"#数据结构和索引\">#</a> 数据结构和索引</h3>\n<h4 id=\"二叉搜索树-红黑树\"><a class=\"anchor\" href=\"#二叉搜索树-红黑树\">#</a> 二叉搜索树 &amp; 红黑树</h4>\n<p>二叉搜索树（BST）或红黑树作为索引结构时存在一些缺点，特别是在数据库系统中，这些缺点可能会影响查询性能：</p>\n<ol>\n<li><strong>树的高度问题</strong>：二叉搜索树或红黑树每个节点最多有两个子节点。在最坏的情况下（例如，当插入的数据是有序的），树可能会变得和数据集大小一样高，这会导致查询效率降低，因为查找操作可能需要遍历树的大部分高度。</li>\n<li><strong>磁盘 I/O 次数</strong>：数据库系统中的数据通常存储在磁盘上，因此查找操作可能涉及多次磁盘 I/O。二叉搜索树或红黑树的高度可能导致在查找过程中需要多次 I/O 操作，这会显著降低查询性能。</li>\n<li><strong>范围查询效率</strong>：二叉搜索树或红黑树不适合执行范围查询。在这些树结构中，要找到一个范围内的所有元素，可能需要从树的某个点开始，然后逐个遍历节点，这在最坏情况下可能需要访问树中的大部分节点。</li>\n<li><strong>锁粒度问题</strong>：在并发环境中，二叉搜索树或红黑树可能需要在多个节点上加锁以保持数据一致性，这可能导致锁竞争和死锁问题，影响并发性能。</li>\n<li><strong>空间效率</strong>：与 B 树或 B+ 树相比，二叉搜索树或红黑树在存储大型数据集时可能需要更多的空间，因为它们在每个节点中只存储两个指针（到子节点）和键值。</li>\n</ol>\n<h4 id=\"b-树\"><a class=\"anchor\" href=\"#b-树\">#</a> B 树</h4>\n<p>B 树相对于平衡二叉树或红黑树的最大优势主要体现在以下几个方面：</p>\n<ol>\n<li><strong>更多的叉</strong>：B 树是一种多路平衡查找树，它的每个节点可以有多个子节点（通常远大于 2），这使得 B 树的分支度更高，树的高度相对较低。在数据库系统中，这可以显著减少查找数据时所需的磁盘 I/O 次数，因为磁盘 I/O 是数据库操作中最耗时的部分。</li>\n<li><strong>所有数据都在叶节点</strong>：在 B 树中，所有的数据记录节点都存在于叶节点，并且叶节点之间是相互链接的。这种结构不仅有利于快速定位数据，而且非常适合执行范围查询，因为可以通过叶节点的链表顺序访问范围内的所有数据。</li>\n<li><strong>高效的范围查询</strong>：由于数据在 B 树的叶节点中按顺序存储，B 树可以非常高效地进行范围查询。用户可以直接定位到范围的起点，然后顺序访问叶节点链表，直到范围的终点，这使得 B 树在处理顺序数据访问和范围查询时非常高效。</li>\n</ol>\n<p>尽管 B 树在数据库索引中有许多优点，但它也有一些缺点：</p>\n<ol>\n<li><strong>更新成本</strong>：B 树在插入和删除操作时可能需要更多的树结构调整，以保持树的平衡。这些调整可能会涉及节点的分裂和合并，以及可能的树高度变化，这些都会增加操作的复杂性和成本。</li>\n<li><strong>存储空间</strong>：B 树的节点可能需要更多的存储空间来维护多个子节点指针和较多的索引键值，这可能会增加存储成本。</li>\n</ol>\n<h4 id=\"b-树-2\"><a class=\"anchor\" href=\"#b-树-2\">#</a> B+ 树</h4>\n<p>B+ 树是 B 树的一种变种，它在数据库索引和文件系统中得到了广泛的应用。B+ 树的设计使得它在处理大量数据时特别有效，以下是 B+ 树的一些关键特点及其优势：</p>\n<ol>\n<li><strong>非叶子节点仅存储键（Key）</strong>：在 B+ 树中，所有的数据记录只存储在叶子节点中，而非叶子节点仅存储指向子节点的键和指针。这使得非叶子节点可以存储更多的键，从而提高了树的宽度，减少了树的高度。</li>\n<li><strong>完整的键信息存储在叶子节点</strong>：B+ 树的叶子节点包含了全部的键和对应的数据记录。这意味着一次磁盘 I/O 可以获取更多的数据，提高了查询效率。</li>\n<li><strong>有序的叶子节点</strong>：每个父节点的键都是其子节点键的一个子集，通常是子节点的最小或最大键。这保证了 B+ 树中键的有序性，使得范围查询更加高效。</li>\n<li><strong>叶子节点形成链表</strong>：B+ 树的叶子节点通过指针相互连接，形成一个链表。这使得范围查询可以通过链表顺序进行，而不需要像在 B 树中那样回溯到上层节点。</li>\n<li><strong>高效的空间利用</strong>：由于非叶子节点不存储数据，B+ 树可以在同样大小的存储空间内存储更多的索引键，提高了空间的利用率。</li>\n<li><strong>减少磁盘 I/O</strong>：B+ 树的这些特性使得它在查找数据时可以减少磁盘 I/O 的次数，因为树的高度较低，且叶子节点的链表结构使得范围查询更加高效。</li>\n<li><strong>适合页式存储</strong>：数据库系统通常以页（page）为单位存储数据，B+ 树的结构特别适合页式存储，因为它可以有效地利用页的空间，减少页的分裂和合并。</li>\n</ol>\n<p>由于这些优势，B+ 树成为了数据库索引的首选数据结构之一，特别是在需要处理大量数据和频繁执行范围查询的场景中。它的设计使得数据的读写操作更加高效，从而提高了数据库系统的整体性能。</p>\n<h4 id=\"哈希表\"><a class=\"anchor\" href=\"#哈希表\">#</a> 哈希表</h4>\n<p>Hash 表是一种通过键值对（Key-Value）存储数据的数据结构，通过哈希函数将键映射到表中一个位置来访问记录。尽管哈希表在某些场景下可以提供极高的查找效率，但在数据库索引中它们并不常用。</p>\n<ol>\n<li><strong>不支持范围查询</strong>：哈希表设计用于快速点查找（即单个键的查找），并不保留键的顺序信息，因此不适合执行范围查询，如查找一个范围内的所有键。</li>\n<li><strong>无法排序</strong>：由于哈希表中的元素是无序的，它不能直接用于排序操作。数据库中的许多操作，如 ORDER BY，需要索引能够支持排序。</li>\n<li><strong>哈希冲突</strong>：不同的键可能经过哈希函数计算后得到相同的索引位置，这种现象称为冲突。解决冲突通常需要额外的机制，如链表或开放寻址，这可能会降低查找效率。</li>\n<li><strong>性能波动</strong>：在存在大量哈希冲突的情况下，查找性能可能会显著下降，因为可能需要检查多个哈希桶或链表中的多个元素。</li>\n<li><strong>数据分布不均匀</strong>：哈希表的性能高度依赖于哈希函数的质量。一个不好的哈希函数可能导致数据分布极不均匀，一些桶可能非常拥挤，而其他桶则可能很稀疏。</li>\n</ol>\n<p>由于这些限制，数据库系统通常不使用哈希表作为主索引结构。它们更倾向于使用 B 树或 B+ 树这样的平衡树结构，因为这些结构支持顺序存储、范围查询和排序操作，并且可以通过平衡操作来保持较低的树高，从而提供稳定的查询性能。</p>\n<p>在某些特定场景下，哈希索引仍然有其用武之地，例如在需要极快的等值查找且不关心顺序、范围查询或数据量较小的情况下，哈希索引可以提供非常高效的访问速度。</p>\n<p>在 MySQL 中，MEMORY 存储引擎就使用哈希索引来提高访问速度，但它只适用于那些适合使用哈希索引的场景。</p>\n<h3 id=\"myisam\"><a class=\"anchor\" href=\"#myisam\">#</a> MyISAM</h3>\n<p>使用 MyISAM 存储引擎存储的表和表中数据的文件由三个文件组成：</p>\n<p>Linux: /var/lib/mysql/</p>\n<p>Windows: /ProgramData/MySQL/MySQL Server 8.0/Data/test</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaYlhuaDY4XzdWRG5rWTZUb0VtZE5ZQk55TGdYWGlpVlhkcTJycjU0THZkaVE_ZT1JVGJ4Nmc.png\" alt=\"\" /></p>\n<ol>\n<li><strong>.FRM 文件</strong>：\n<ul>\n<li>用途：这是表的格式文件，存储了表的结构定义，包括表的列、索引以及其他元数据信息。</li>\n<li>特点：.FRM 文件是独立于数据和索引的，这意味着即使数据和索引文件被删除，只要.FRM 文件存在，就可以重新创建数据和索引文件。</li>\n</ul>\n</li>\n<li><strong>.MYD 文件</strong>：\n<ul>\n<li>用途：这是 MyISAM 表的数据文件，以  <code>.MYD</code> （MYData）为扩展名。它包含了表中的实际数据，但不包含索引信息。</li>\n<li>特点：数据文件是二进制格式，可以通过数据库工具或命令直接访问和操作。</li>\n</ul>\n</li>\n<li><strong>.MYI 文件</strong>：\n<ul>\n<li>用途：这是 MyISAM 表的索引文件，以  <code>.MYI</code> （MYIndex）为扩展名。它包含了表的所有索引信息，MyISAM 支持全文索引和其他类型的索引。</li>\n<li>特点：索引文件同样采用二进制格式存储，用于快速定位和检索数据。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"主键索引\"><a class=\"anchor\" href=\"#主键索引\">#</a> 主键索引</h4>\n<p>在 MyISAM 存储引擎中，主键索引的行为具有以下特点：</p>\n<ul>\n<li><strong>叶子节点存储物理地址</strong>：MyISAM 的索引文件（.MYI）中的主键索引在叶子节点上存储的是数据记录的物理地址，而不是实际的数据。这意味着通过主键索引访问数据时，数据库系统可以直接定位到数据文件（.MYD）中数据的确切位置。</li>\n<li><strong>数据访问效率</strong>：由于物理地址的直接映射，使用主键索引可以非常快速地访问数据，这对于读取操作是一个性能优势。</li>\n<li><strong>聚集索引</strong>：MyISAM 使用聚集索引（Clustered Index）来存储主键，这意味着数据记录的物理存储顺序与主键的索引顺序是相同的。这有助于优化范围查询的性能，因为记录是按照主键顺序存储的。</li>\n<li><strong>非叶子节点存储键值</strong>：在 MyISAM 的主键索引中，非叶子节点存储的是索引键值，用于在索引树中向上查找直到叶子节点。</li>\n</ul>\n<p>虽然 MyISAM 的主键索引提高了数据访问的速度，但它也要求主键字段具有唯一性和非空性。此外，MyISAM 的表级锁定策略可能会在高并发环境下影响写操作的性能。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VXQ2oyemxGaUh4SW9hMHZMbnRidHVVQk1VTmhTWUpleUFHNFJod19fN3VBQnc_ZT1yRndzWHo.png\" alt=\"myisam_.jpg\" /></p>\n<h4 id=\"非主键索引\"><a class=\"anchor\" href=\"#非主键索引\">#</a> 非主键索引</h4>\n<p>以下是 MyISAM 中非主键索引的特点：</p>\n<ol>\n<li><strong>非主键索引的叶子节点</strong>：在 MyISAM 的非主键索引中，叶子节点存储的是索引键值及其对应的行的 <strong>主键值</strong>，而不是数据的物理地址。</li>\n<li><strong>数据访问过程</strong>：当通过非主键索引来访问数据时，MyISAM 首先在非主键索引中找到相应的键值和主键值，然后使用这个主键值再去主键索引中查找具体的数据记录。</li>\n<li><strong>二次查找</strong>：由于非主键索引的叶子节点存储的是主键值，这通常意味着访问非主键索引需要两次查找：首先在非主键索引中找到主键值，然后在主键索引中使用这个主键值来检索数据。这个过程称为 “索引的索引” 或 “二次查找”。</li>\n<li><strong>性能考虑</strong>：这种设计意味着非主键索引的查询性能可能略逊于主键索引，因为需要额外的步骤来访问数据。然而，这也使得 MyISAM 能够通过主键快速定位数据，从而保持较高的数据访问速度。</li>\n<li><strong>索引维护</strong>：在插入、删除或更新记录时，MyISAM 需要维护所有相关的索引，包括主键索引和非主键索引。对于非主键索引，这涉及到更新索引中的键值和主键值。</li>\n</ol>\n<p>MyISAM 的非主键索引在设计上是为了能够高效地通过主键来间接访问数据。虽然这可能导致在某些查询中需要额外的查找步骤，但它也确保了数据的快速访问，特别是在主键索引非常有效的情况下。这种设计选择反映了 MyISAM 在读取密集型操作中的优化，尽管它可能在写入密集型操作中遇到性能瓶颈。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VmLWxmTXZqU0NWRXFtb1lHb0pwaWxnQkMtdG1lOUdGbUJUQW52eUhTT01OaHc_ZT02dmJVaVk.png\" alt=\"myisam_9680b430d0b7666d.jpg\" /></p>\n<h3 id=\"innodb\"><a class=\"anchor\" href=\"#innodb\">#</a> InnoDB</h3>\n<p>使用 InnoDB 存储引擎存储的表的文件由两个文件组成：</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VhWEIyWVQ3YWpORHVwbWJ5OFJfS3ZjQmJ2S1ZsYjB0SlIxc1N0S0loSU9td0E_ZT10WHNzNjU.png\" alt=\"\" /></p>\n<ol>\n<li><strong>.frm 文件</strong>：\n<ul>\n<li>用途：这是表的格式文件，存储了表的结构定义，包括表的列、索引以及其他元数据信息。</li>\n<li>特点：.frm 文件是独立于数据和索引的，这意味着即使数据和索引文件被删除，只要.frm 文件存在，就可以重新创建数据和索引文件。</li>\n</ul>\n</li>\n<li><strong>.ibd 文件</strong>：\n<ul>\n<li>用途：这是 InnoDB 表的数据和索引文件，以  <code>.ibd</code> （InnoDB Tablespace）为扩展名。它包含了表的所有数据和索引信息。</li>\n<li>特点：数据和索引在同一个文件中存储，这是 InnoDB 的聚集索引特性。在 InnoDB 中，表数据按照主键索引的顺序物理地存放，主键索引的叶子节点包含了行数据。对于二级索引（非主键索引），其叶子节点存储的是索引键和对应的主键键值，然后通过主键键值在主键索引中查找具体的数据行。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"主键索引-2\"><a class=\"anchor\" href=\"#主键索引-2\">#</a> 主键索引</h4>\n<ol>\n<li><strong>聚集索引</strong>：InnoDB 使用聚集索引（Clustered Index）来存储表的主键。在聚集索引中，索引的叶子节点直接包含了行数据，这意味着主键索引不仅存储了主键的值，还存储了整行数据。</li>\n<li><strong>数据行存储</strong>：由于 InnoDB 的主键索引是聚集索引，数据行是按照主键的顺序物理存储的。因此，通过主键索引访问数据时，可以直接在索引的叶子节点上获取到完整的数据行。</li>\n<li><strong>二次索引</strong>：InnoDB 的非主键索引（也称为二级索引）的叶子节点存储的是索引键值和对应的主键键值，而不是数据行的物理地址。当通过二级索引查找数据时，InnoDB 首先在二级索引中找到主键键值，然后使用主键键值在主键索引中查找数据行，这个过程称为 “索引的索引” 或 “二次查找”。</li>\n<li><strong>主键的设计</strong>：由于 InnoDB 的主键索引是聚集索引，因此表中的每一行数据都必须有一个唯一的主键值。如果没有显式定义主键，InnoDB 会为表自动生成一个隐藏的聚集索引，通常是在创建表时基于表中的第一列来生成。</li>\n<li><strong>性能优势</strong>：InnoDB 的主键索引设计使得通过主键访问数据非常高效，因为不需要进行额外的查找步骤。这种设计减少了磁盘 I/O 操作，提高了数据访问速度。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VYSTFLZmxvRjExT3Q5dWZFbWNuRzlvQkpVblFTY1p6SmxxZkY0MUR6TXpJbmc_ZT1IZUpFQ24.png\" alt=\"innodb.jpg\" /></p>\n<h4 id=\"非主键索引-2\"><a class=\"anchor\" href=\"#非主键索引-2\">#</a> 非主键索引</h4>\n<p>在 InnoDB 存储引擎中，非主键索引（也称为二级索引）的叶子节点存储的是主键的值，而不是数据行本身或数据行的物理地址。这种设计是基于 InnoDB 的聚集索引特性，其中数据行是按照主键索引的顺序物理存储的。</p>\n<p>InnoDB 的非主键索引特点：</p>\n<ol>\n<li><strong>索引键和主键值</strong>：在 InnoDB 的非主键索引中，索引的叶子节点包含两部分信息：索引键值和对应的主键值。这种结构使得 InnoDB 可以通过非主键索引快速定位到数据行的主键，然后再通过主键值在主键索引中查找到具体的数据行。</li>\n<li><strong>二次查找</strong>：由于非主键索引的叶子节点不直接存储数据行，因此访问数据需要两步：首先在非主键索引中找到主键值，然后在主键索引中使用这个主键值来检索数据行。这个过程称为 “二次查找”。</li>\n<li><strong>性能优化</strong>：虽然非主键索引需要二次查找，但 InnoDB 的这种设计确保了数据的物理存储顺序与主键的逻辑顺序一致，这有助于优化全表扫描和范围查询的性能。</li>\n<li><strong>索引维护</strong>：在插入、删除或更新记录时，InnoDB 不仅需要维护主键索引，还需要维护所有相关的非主键索引。对于非主键索引，这涉及到更新索引中的键值和主键值。</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VVX0lSOWt3X2VsUGcwZ1RkTW9TUVRvQlBrUUNoMjdDX2tBbThLeDB2clY5Y0E_ZT1TcUtLWUU.png\" alt=\"innodbdb1569e8c70df489.jpg\" /></p>\n<h3 id=\"索引杂项\"><a class=\"anchor\" href=\"#索引杂项\">#</a> 索引杂项</h3>\n<ol>\n<li>\n<p>Q: 什么是聚集索引 / 聚簇索引，什么是非聚集索引 / 非聚簇索引？</p>\n<p>A: 聚集索引，也称为聚簇索引，是指索引结构和数据行是一起存储的。在 InnoDB 存储引擎中，聚集索引通常是根据主键创建的，数据行的物理顺序与索引键的顺序相同。这意味着，通过聚集索引，数据库引擎可以直接访问到数据页中的数据，从而提高了数据检索的效率。由于数据行是按照索引键值的顺序存放的，所以对于范围查询和排序操作，聚集索引是非常高效的。</p>\n<p>相对地，非聚集索引，也称为非聚簇索引，是指索引结构和数据行是分开存储的。在这种索引中，索引的叶节点包含了数据行的指针，而不是数据本身。当通过非聚集索引来检索数据时，数据库引擎首先通过索引找到数据行的指针，然后需要进行一次额外的查找来获取实际的数据，这个过程称为 “回表”。非聚集索引对于等值查询非常有效，但相对于聚集索引，它在范围查询和排序操作上可能需要更多的磁盘 I/O 操作。</p>\n</li>\n<li>\n<p>Q: Innodb 表中不建立索引 / 没有主动设置主键，为什么要有默认索引？默认索引是什么？</p>\n<p>A: InnoDB 存储引擎中，如果没有显式地创建索引或者设置主键，InnoDB 会使用一个默认的聚集索引，这个索引是基于表的隐式行 ID 的。这个默认的聚集索引是一个 B+ 树索引，它决定了表中数据的物理存储顺序。聚集索引的特点是叶子节点上存放着整张表的行记录数据，因此对于主键的排序查找和范围查找速度非常快，因为索引上就有用户需要查询的数据，不需要回表查询。</p>\n<p>而非聚集索引（非主键索引）在 InnoDB 中被称为二级索引。二级索引的叶子节点不直接包含行数据，而是包含了能够找到行数据的聚集索引的键值。当使用二级索引进行查询时，通常需要两步：首先在二级索引中找到对应的键值，然后使用这个键值在聚集索引中进行查找，这个过程称为回表。</p>\n<p>InnoDB 的默认聚集索引是基于行 ID 的，这个行 ID 是 InnoDB 内部自动管理的，用户无法直接操作。如果表中有明确的主键定义，那么 InnoDB 会使用这个主键作为聚集索引。如果没有显式的主键，InnoDB 会尝试使用表中的第一个非 NULL 的唯一索引作为聚集索引。如果这样的索引也不存在，InnoDB 就会使用内部生成的行 ID 作为聚集索引。</p>\n</li>\n<li>\n<p>Q: 在 Innodb 中没有索引行不行？在 MyISAM 中没有索引行不行？</p>\n<p>A: 在 InnoDB 中，如果没有显式创建任何索引，包括主键索引，InnoDB 会为表自动创建一个隐藏的聚集索引。这个聚集索引是基于行 ID 的，行 ID 是 InnoDB 内部自动生成的一个递增的数字，它保证了每个行都是唯一的。因此，即使没有用户定义的索引，InnoDB 也能通过这个隐藏的聚集索引来检索行。但是，依赖行 ID 作为聚集索引可能不是最优的检索方式，特别是在没有考虑数据访问模式的情况下，因为它可能导致全表扫描，影响查询性能。</p>\n<p>在 MyISAM 中，同样，如果没有显式创建索引，MyISAM 会使用一个默认的非聚集索引，这个索引是基于表的固定长度的隐藏行 ID。MyISAM 的默认索引提供了基本的数据检索功能，但是它的性能通常不如 InnoDB 的行 ID 索引，尤其是在处理大量数据时。MyISAM 的索引和数据是分开存储的，所以即使没有显式的索引，MyISAM 表仍然可以通过这个默认的索引来访问数据。</p>\n</li>\n<li>\n<p>Q: 假设我们没有给 InnoDB 建立主键索引，会产生什么问题？</p>\n<p>A: 如果没有为 InnoDB 表显式创建主键索引，那么 InnoDB 存储引擎会自动生成一个隐藏的聚集索引，这个索引是基于行 ID 的。行 ID 是 InnoDB 内部维护的一个递增的数字，它确保了每行数据都有一个唯一的标识符。</p>\n<p>虽然有了这个默认的聚集索引，表的数据行仍然可以被检索，但是依赖行 ID 作为聚集索引可能会带来一些潜在的问题。首先，由于行 ID 是内部生成的，它可能不会反映数据的逻辑顺序，这可能会导致全表扫描的性能下降，特别是在执行范围查询时。其次，如果没有使用业务逻辑相关的字段作为索引，那么在这些字段上的查询可能无法有效利用索引，从而影响查询性能。</p>\n<p>此外，没有显式的主键也会影响到外键约束的创建和维护，因为外键约束依赖于主键来确保数据的引用完整性。在没有主键的情况下，外键约束无法实施，这可能会降低数据的完整性和一致性。</p>\n</li>\n<li>\n<p>Q: 索引性能这么好，是不是一个表建立的索引越多越好？</p>\n<p>A: 索引虽然对于提高数据库查询效率至关重要，但并不是建立得越多越好。过多的索引会带来额外的存储成本，同时每次对表进行数据更新时，都需要同步更新所有相关的索引，这会增加写操作的负担，尤其是在写多读少的场景下，可能会严重影响性能。此外，索引虽然可以加快查询速度，但也需要数据库系统在执行数据修改操作时付出更多的维护成本。因此，在创建索引时，应该根据实际的查询模式和业务需求来决定，以确保索引的建立能够带来整体性能的提升，而不是单纯的查询性能提升。</p>\n</li>\n<li>\n<p>Q: 什么列适合作为索引？</p>\n<p>A: 选择适合建立索引的列时，需要考虑那些在查询中经常用作条件的列，比如经常在 WHERE 子句或 JOIN 操作上使用的列。通常，具有高度唯一性、数据分布均匀且不经常变更的列是建立索引的理想选择。</p>\n<p>此外，外键列和那些经常需要排序或分组的列也应该考虑建立索引，因为索引能够显著减少这些操作的开销。同时应该避免对那些更新频繁的列建立索引，因为这会增加维护索引的开销。</p>\n</li>\n<li>\n<p>Q: 什么是回表？如何避免回表？</p>\n<p>A: 回表是数据库查询中的一个术语，指的是当索引中不包含所有需要查询的列时，数据库系统必须先通过索引找到数据行的位置，然后再回到原始表中获取完整的数据。这个过程增加了查询的复杂度和执行时间，因为它涉及到多次的数据访问。</p>\n<p>为了避免回表，可以创建覆盖索引，这种索引包含了查询中所需的所有列，使得数据库能够在索引中直接获取到所有需要的数据，而无需再访问原始表。此外，优化查询语句，仅选择必要的列，避免使用  <code>SELECT *</code> ，也有助于减少回表。在某些数据库系统中，使用聚簇索引可以避免回表，因为聚簇索引的叶子节点直接包含行数据。定期分析查询计划并根据分析结果调整索引策略，以及在设计索引时考虑存储冗余，也是减少回表的有效方法。通过这些措施，可以提升数据库查询的效率和性能。</p>\n</li>\n<li>\n<p>Q: 什么是覆盖索引？</p>\n<p>A: 覆盖索引是指一个索引不仅包含了查询中用于筛选数据的列，而且还包含了查询中需要返回的列。当一个索引包含了所有查询所需的数据时，数据库引擎可以直接使用这个索引来返回结果，而不需要回到表中去获取数据，这样就避免了回表操作，提高了查询效率。</p>\n<p>在实际应用中，覆盖索引通常用于优化查询性能，尤其是在执行 SELECT 操作时，如果能够通过索引直接获取到所有需要的数据，就可以显著减少 I/O 操作，因为 I/O 操作是数据库查询中成本较高的部分。创建覆盖索引的常见方法是将查询中常用的列组合成一个复合索引，这样索引中就会包含这些列的数据，从而实现覆盖索引的效果。</p>\n</li>\n<li>\n<p>Q: MyISAM 和 InnoDB 的区别（以及 memory 存储引擎）</p>\n<p>A: MyISAM 和 InnoDB 是 MySQL 中的两种不同存储引擎，它们在功能和性能上有一些显著的差异。MyISAM 存储引擎是 MySQL 的默认存储引擎之一，它提供了快速的读取速度和简单的锁定机制，适用于读取密集型的应用程序。MyISAM 不支持事务处理，也不支持外键约束，它的表级锁定策略在高并发的写入操作中可能会成为性能瓶颈。</p>\n<p>InnoDB 存储引擎支持事务处理，提供了提交、回滚和崩溃恢复能力，非常适合需要事务支持的应用。InnoDB 使用的是行级锁定和外键约束，这使得它在处理高并发的读写操作时比 MyISAM 更加优秀。InnoDB 也是 MySQL 的默认存储引擎之一，特别是在 MySQL 5.5 及以后的版本中。</p>\n<p>Memory 存储引擎使用内存来存储表的数据，这意味着数据的读取速度非常快，但同时也意味着数据的持久性较差，一旦数据库服务器重启，所有 Memory 表中的数据都会丢失。Memory 表通常用于缓存或临时数据存储，不适合存储需要持久化的数据。</p>\n<p>MyISAM 适合于读取密集型的应用，而 InnoDB 适合于需要事务支持和高并发写入的应用。Memory 存储引擎则适合于特定的快速读取和临时数据存储场景。选择哪种存储引擎，需要根据应用程序的具体需求和数据访问模式来决定。</p>\n</li>\n<li>\n<p>Q: 什么情况下选择使用 MyISAM?</p>\n<p>A: MyISAM 存储引擎通常适用于那些不需要事务支持、对数据完整性要求不高、且以读取操作为主的应用场景。</p>\n<p>由于 MyISAM 提供了全文索引的支持，它也适合于需要执行全文搜索查询的应用。此外，MyISAM 表在进行大量的 SELECT 查询时，尤其是当查询不涉及表的更新时，可以提供较好的性能。</p>\n<p>需要注意的是，MyISAM 不支持外键约束，并且在高并发的写入操作时，由于其表级锁定机制，可能会导致性能问题。</p>\n<p>如果应用场景中数据一致性和事务特性不是关键需求，且主要关注于读取性能，MyISAM 可以是一个合适的选择。</p>\n</li>\n<li>\n<p>Q: 最左匹配原则</p>\n<p>A: 最左匹配原则是数据库索引使用中的一个关键概念，它指的是在使用多列索引时，索引的匹配方式是从左到右进行的。当查询条件中包含了索引列的连续最左列时，数据库能够高效地利用索引进行数据查找。例如，如果有一个索引是针对列 A 和列 B 创建的，那么在查询时，如果条件中首先使用了列 A，然后是列 B，索引就能被有效利用。如果查询条件先使用了列 B，而没有列 A，那么索引将不会被使用，因为数据库引擎无法从中间的某列开始匹配索引。这个原则对于设计索引和编写高效的查询语句非常重要，它确保了索引能够被正确且高效地应用。</p>\n</li>\n<li>\n<p>Q: 全文索引</p>\n<p>A: 全文索引是一种特殊类型的索引，它允许对存储在数据库表中的文本内容进行全文搜索。这种索引不同于传统的基于关键字的索引，它能够对文本数据进行更复杂的查询，比如模糊匹配、词干搜索或者多字词组的搜索。全文索引通常用于搜索引擎和需要高级文本搜索功能的应用程序中。在 MySQL 中，InnoDB 和 MyISAM 存储引擎都支持全文索引，但它们的实现和功能有所不同。全文索引可以大大提高搜索效率，使得在大量文本数据中查找特定信息变得快速而准确。然而，全文索引也增加了数据库的存储和处理开销，因此在决定是否使用全文索引时，需要权衡其对性能的影响。</p>\n</li>\n</ol>\n",
            "tags": [
                "C/C++",
                "数据库",
                "SQL"
            ]
        },
        {
            "id": "http://cwlrin.github.io/c-cpp/c-sql/MySQL-C-API/",
            "url": "http://cwlrin.github.io/c-cpp/c-sql/MySQL-C-API/",
            "title": "MySQL C API",
            "date_published": "2023-06-20T03:12:06.000Z",
            "content_html": "<h2 id=\"安装库\"><a class=\"anchor\" href=\"#安装库\">#</a> 安装库</h2>\n<h3 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> libmysqlclient-dev</pre></td></tr></table></figure><p>在调用函数之前，需要包含头文件  <code>&lt;mysql/mysql.h&gt;</code></p>\n<p>在生成可执行程序的链接阶段时，需要加入链接选项  <code>-lmysqlclient</code></p>\n<h3 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h3>\n<p><a href=\"https://dev.mysql.com/downloads/\">https://dev.mysql.com/downloads/</a></p>\n<h2 id=\"使用流程\"><a class=\"anchor\" href=\"#使用流程\">#</a> 使用流程</h2>\n<h3 id=\"mysql_init-初始化结构体\"><a class=\"anchor\" href=\"#mysql_init-初始化结构体\">#</a>  <code>mysql_init()</code>  初始化结构体</h3>\n<p><code>mysql_init()</code>  是 MySQL C API 中的一个函数，用于初始化一个  <code>MYSQL</code>  结构体，这个结构体代表了与 MySQL 数据库的连接。在尝试与 MySQL 数据库建立连接之前，你需要先调用这个函数。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MYSQL <span class=\"token operator\">*</span><span class=\"token function\">mysql_init</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，这个结构体在调用  <code>mysql_init()</code>  之前应该已经被声明和分配了内存。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回指向初始化后的  <code>MYSQL</code>  结构体的指针。</li>\n<li>失败时，返回  <code>NULL</code> 。</li>\n</ul>\n<p>使用  <code>mysql_init()</code>  的典型步骤如下：</p>\n<ol>\n<li>声明一个  <code>MYSQL</code>  类型的指针。</li>\n<li>调用  <code>mysql_init()</code>  并传递这个指针。</li>\n<li>使用返回的指针来调用其他函数，如  <code>mysql_real_connect()</code>  来建立数据库连接。</li>\n<li>完成数据库操作后，使用  <code>mysql_close()</code>  来关闭连接。</li>\n</ol>\n<p><code>mysql_init</code>  函数用于初始化一个 MySQL 连接，但这个函数在某些版本的 MySQL 中可能不是线程安全的。这意味着如果多个线程尝试同时调用  <code>mysql_init</code>  来创建数据库连接，可能会导致不可预测的行为或错误。</p>\n<p>为了确保在多线程环境中安全地初始化数据库连接，可以采用以下策略：</p>\n<ol>\n<li><strong>使用互斥锁</strong>：在调用  <code>mysql_init</code>  之前获取一个互斥锁，完成初始化后再释放锁。这样可以确保同一时间只有一个线程能够初始化数据库连接。</li>\n<li><strong>连接池</strong>：另一种更高效的方法是使用数据库连接池。连接池可以预先创建和管理一组数据库连接，线程可以直接从池中获取和返回连接，而不需要每次都调用  <code>mysql_init</code> 。</li>\n</ol>\n<h3 id=\"mysql_real_connect-与-mysql-数据库服务器建立实际连接\"><a class=\"anchor\" href=\"#mysql_real_connect-与-mysql-数据库服务器建立实际连接\">#</a>  <code>mysql_real_connect()</code>   与 MySQL 数据库服务器建立实际连接</h3>\n<p><code>mysql_real_connect()</code>  是 MySQL C API 中用于与 MySQL 数据库服务器建立实际连接的函数。这个函数尝试使用提供的参数连接到 MySQL 服务器，并返回一个指向  <code>MYSQL</code>  结构体的指针，该结构体包含了连接的状态和信息。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MYSQL <span class=\"token operator\">*</span><span class=\"token function\">mysql_real_connect</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">,</span>                <span class=\"token comment\">// 指向 MYSQL 结构的指针</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>host<span class=\"token punctuation\">,</span>            <span class=\"token comment\">// 数据库服务器的主机名或 IP 地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>user<span class=\"token punctuation\">,</span>            <span class=\"token comment\">// MySQL 用户名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>passwd<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 用户密码</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>db<span class=\"token punctuation\">,</span>              <span class=\"token comment\">// 数据库名称</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 端口号，MySQL 默认端口号是 3306</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>unix_socket<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// Unix 套接字文件的路径</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> client_flag   <span class=\"token comment\">// 客户端标志选项</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明：</p>\n<ul>\n<li>\n<p><code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，这个结构体必须由  <code>mysql_init()</code>  函数初始化。</p>\n</li>\n<li>\n<p><code>host</code> ：数据库服务器的主机名或 IP 地址。如果传递  <code>NULL</code>  或  <code>&quot;localhost&quot;</code> ，将尝试连接到本地机器上的服务器。</p>\n</li>\n<li>\n<p><code>user</code> ：用于连接数据库的用户名。</p>\n</li>\n<li>\n<p><code>passwd</code> ：用户的密码。</p>\n</li>\n<li>\n<p><code>db</code> ：要连接的数据库名称。如果传递  <code>NULL</code> ，则不会尝试连接到任何特定的数据库。</p>\n</li>\n<li>\n<p><code>port</code> ：MySQL 服务器监听的端口号，默认为 3306。</p>\n</li>\n<li>\n<p><code>unix_socket</code> ：Unix 套接字文件的路径，用于在 Unix/Linux 系统上连接到 MySQL 服务器。在 Windows 上通常不需要，可以传递  <code>NULL</code> 。</p>\n</li>\n<li>\n<p><code>client_flag</code> ：客户端选项的标志，可以是以下值的组合：</p>\n<ul>\n<li><code>0</code> ：无特殊选项。</li>\n<li><code>CLIENT_MULTI_STATEMENTS</code> ：允许发送多条语句。</li>\n<li><code>CLIENT_MULTI_RESULTS</code> ：允许服务器发送多个结果集。</li>\n</ul>\n</li>\n</ul>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回指向初始化后的  <code>MYSQL</code>  结构体的指针。</li>\n<li>失败时，返回  <code>NULL</code> 。</li>\n</ul>\n<p>使用  <code>mysql_real_connect()</code>  的典型步骤如下：</p>\n<ol>\n<li>使用  <code>mysql_init()</code>  初始化  <code>MYSQL</code>  结构体。</li>\n<li>调用  <code>mysql_real_connect()</code>  并传递必要的连接参数。</li>\n<li>检查返回值是否为  <code>NULL</code> ，如果是，则连接失败，可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n<li>如果连接成功，可以进行数据库操作。</li>\n<li>完成操作后，使用  <code>mysql_close()</code>  函数关闭连接。</li>\n</ol>\n<h3 id=\"mysql_query-执行-sql-语句\"><a class=\"anchor\" href=\"#mysql_query-执行-sql-语句\">#</a>  <code>mysql_query()</code>  执行 SQL 语句</h3>\n<p><code>mysql_query()</code>  是 MySQL C API 中用于执行 SQL 语句的函数。这个函数接受一个  <code>MYSQL</code>  结构体的指针和一个 SQL 语句作为参数，用于在与 MySQL 数据库的连接上执行该 SQL 语句。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 建立连接的 MYSQL 结构的指针</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>query <span class=\"token comment\">// 要执行的 SQL 语句的字符串</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明：</p>\n<ul>\n<li><code>mysql</code> ：指向已经通过  <code>mysql_real_connect()</code>  函数成功建立连接的  <code>MYSQL</code>  结构体的指针。</li>\n<li><code>query</code> ：指向包含要执行的 SQL 语句的字符串的指针。这个字符串应该是以空字符（ <code>'\\0'</code> ）结尾的，并且不应该以分号（ <code>';'</code> ）结尾，因为分号在 C 字符串中表示字符串的结束。</li>\n</ul>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回  <code>0</code> 。</li>\n<li>失败时，返回非零值。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p>使用  <code>mysql_query()</code>  的典型步骤如下：</p>\n<ol>\n<li>确保已经通过  <code>mysql_real_connect()</code>  成功建立了数据库连接。</li>\n<li>调用  <code>mysql_query()</code>  并传递连接指针和 SQL 语句。</li>\n<li>检查返回值，如果返回值不为  <code>0</code> ，则表示执行失败，可以使用  <code>mysql_error()</code>  获取错误信息。</li>\n<li>如果 SQL 语句是查询（SELECT）类型的，需要使用  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  来获取结果集。</li>\n<li>如果 SQL 语句是更新（INSERT、UPDATE、DELETE）类型的，可以使用  <code>mysql_affected_rows()</code>  来获取受影响的行数。</li>\n</ol>\n<h3 id=\"处理结果\"><a class=\"anchor\" href=\"#处理结果\">#</a> 处理结果</h3>\n<h4 id=\"mysql_store_result-存储查询结果\"><a class=\"anchor\" href=\"#mysql_store_result-存储查询结果\">#</a>  <code>mysql_store_result()</code>   存储查询结果</h4>\n<p><code>mysql_store_result()</code>  函数是 MySQL C API 中用于存储查询结果的函数。当你执行一个查询（如  <code>SELECT</code>  语句）后，这个函数可以用来获取并存储查询结果，以便后续处理。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MYSQL_RES <span class=\"token operator\">*</span><span class=\"token function\">mysql_store_result</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向已经通过  <code>mysql_real_connect()</code>  函数成功建立连接的  <code>MYSQL</code>  结构体的指针。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回一个指向  <code>MYSQL_RES</code>  结构体的指针，该结构体包含了查询结果的元数据和数据。</li>\n<li>失败时，返回  <code>NULL</code> 。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p>使用  <code>mysql_store_result()</code>  的典型步骤如下：</p>\n<ol>\n<li>确保已经通过  <code>mysql_real_connect()</code>  成功建立了数据库连接。</li>\n<li>使用  <code>mysql_query()</code>  执行一个查询语句。</li>\n<li>调用  <code>mysql_store_result()</code>  来获取查询结果。</li>\n<li>检查返回值，如果返回值不为  <code>NULL</code> ，则表示成功获取了结果集。</li>\n<li>使用  <code>mysql_fetch_row()</code>  函数遍历结果集，获取每一行的数据。</li>\n<li>处理完结果集后，使用  <code>mysql_free_result()</code>  释放内存。</li>\n</ol>\n<p><code>mysql_store_result()</code>  函数会将整个结果集加载到客户端的内存中，如果查询结果非常大，这可能会导致内存问题。对于大型结果集，可以考虑使用  <code>mysql_use_result()</code>  函数，它提供了一种逐行获取结果的方式，可以减少内存的使用。</p>\n<p><code>mysql_store_result()</code>  函数在某些情况下可能不是必需的，例如，如果只需要遍历一次结果集，可以直接使用  <code>mysql_use_result()</code>  来获取结果集，然后使用  <code>mysql_fetch_row()</code>  来逐行处理数据。这样可以避免额外的内存分配和复制。</p>\n<h4 id=\"mysql_free_result-释放内存\"><a class=\"anchor\" href=\"#mysql_free_result-释放内存\">#</a>  <code>mysql_free_result()</code>  释放内存</h4>\n<p><code>mysql_free_result()</code>  函数是 MySQL C API 中用于释放由  <code>mysql_store_result()</code>  函数获取的结果集所占用的内存的函数。当你完成对结果集的处理后，应该调用这个函数来释放与结果集相关的内存资源。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">mysql_free_result</span><span class=\"token punctuation\">(</span>MYSQL_RES <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>result</code> ：指向  <code>MYSQL_RES</code>  结构体的指针，该结构体包含了通过  <code>mysql_store_result()</code>  获取的查询结果。</p>\n<p>返回值：无。</p>\n<p>使用  <code>mysql_free_result()</code>  的典型步骤如下：</p>\n<ol>\n<li>执行一个查询语句，例如使用  <code>mysql_query()</code> 。</li>\n<li>使用  <code>mysql_store_result()</code>  获取查询结果。</li>\n<li>遍历结果集，使用  <code>mysql_fetch_row()</code>  逐行获取数据。</li>\n<li>处理完结果集后，调用  <code>mysql_free_result()</code>  释放内存。</li>\n<li>确保在调用  <code>mysql_free_result()</code>  后不再访问结果集，因为此时结果集已经被释放。</li>\n</ol>\n<p>如果使用的是  <code>mysql_use_result()</code>  来获取结果集，那么在遍历完结果集后，也应该调用  <code>mysql_free_result()</code>  来释放内存。这是因为  <code>mysql_use_result()</code>  同样会分配内存来存储结果集，即使它是逐行返回数据的。</p>\n<p>此外， <code>mysql_free_result()</code>  函数在释放内存后不会改变  <code>result</code>  指针的值，因此，如果需要再次使用  <code>result</code>  指针，需要重新通过  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取新的  <code>MYSQL_RES</code>  结构体。</p>\n<h4 id=\"mysql_num_rows-获取结果集行数\"><a class=\"anchor\" href=\"#mysql_num_rows-获取结果集行数\">#</a>  <code>mysql_num_rows()</code>  获取结果集行数</h4>\n<p><code>mysql_num_rows()</code>  函数是 MySQL C API 中用于获取结果集中行数的函数。这个函数返回指定结果集中的行数，通常用于了解查询返回了多少行数据。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>my_ulonglong <span class=\"token function\">mysql_num_rows</span><span class=\"token punctuation\">(</span>MYSQL_RES <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>result</code> ：指向  <code>MYSQL_RES</code>  结构体的指针，该结构体包含了通过  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取的查询结果。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回结果集中的行数，类型为  <code>my_ulonglong</code> ，这是一个无符号长整型，能够表示非常大的数值。</li>\n<li>如果结果集为空或函数调用失败，返回  <code>(unsigned long long) -1</code> 。</li>\n</ul>\n<p>使用  <code>mysql_num_rows()</code>  的典型步骤如下：</p>\n<ol>\n<li>执行一个查询语句，例如使用  <code>mysql_query()</code> 。</li>\n<li>使用  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取查询结果。</li>\n<li>调用  <code>mysql_num_rows()</code>  来获取结果集中的行数。</li>\n<li>根据返回的行数，可以决定是否需要遍历结果集或进行其他操作。</li>\n</ol>\n<p><code>mysql_num_rows()</code>  函数在调用时会阻塞直到所有行都被计数完成，这可能会对性能产生影响，特别是在处理大量数据时。因此，如果不需要在处理结果集之前知道行数，可以考虑在处理完所有行后再调用此函数，或者根本不调用它。</p>\n<p>此外， <code>mysql_num_rows()</code>  函数只适用于  <code>mysql_store_result()</code>  获取的结果集，因为  <code>mysql_use_result()</code>  获取的结果集是逐行处理的，行数可能在处理过程中动态变化。</p>\n<h4 id=\"mysql_num_fields-获取结果集列数\"><a class=\"anchor\" href=\"#mysql_num_fields-获取结果集列数\">#</a>  <code>mysql_num_fields()</code>  获取结果集列数</h4>\n<p><code>mysql_num_fields()</code>  函数是 MySQL C API 中用于获取结果集中字段（列）数量的函数。这个函数返回指定结果集中的字段数，通常用于了解查询返回了多少列数据。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">mysql_num_fields</span><span class=\"token punctuation\">(</span>MYSQL_RES <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>result</code> ：指向  <code>MYSQL_RES</code>  结构体的指针，该结构体包含了通过  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取的查询结果。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回结果集中的字段数，类型为  <code>unsigned int</code> 。</li>\n<li>如果结果集为空或函数调用失败，返回  <code>0</code> 。</li>\n</ul>\n<p>使用  <code>mysql_num_fields()</code>  的典型步骤如下：</p>\n<ol>\n<li>执行一个查询语句，例如使用  <code>mysql_query()</code> 。</li>\n<li>使用  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取查询结果。</li>\n<li>调用  <code>mysql_num_fields()</code>  来获取结果集中的字段数。</li>\n<li>根据返回的字段数，可以决定如何遍历结果集或进行其他操作。</li>\n</ol>\n<p><code>mysql_num_fields()</code>  函数返回的字段数是指查询结果集中的列数，而不是行数。这个函数通常在遍历结果集之前调用，以便知道如何处理每一行中的数据。例如，可以使用  <code>mysql_fetch_row()</code>  函数获取一行数据，然后根据字段数来访问每一列的值。</p>\n<p>此外， <code>mysql_num_fields()</code>  函数在获取结果集后任何时间都可以调用，它不会影响结果集的其他操作。</p>\n<h4 id=\"mysql_fetch_row-从结果当中取出一行\"><a class=\"anchor\" href=\"#mysql_fetch_row-从结果当中取出一行\">#</a>  <code>mysql_fetch_row()</code>  从结果当中取出一行</h4>\n<p><code>mysql_fetch_row()</code>  函数是 MySQL C API 中用于从结果集中逐行获取数据的函数。当你执行一个查询语句后，这个函数可以用来逐行读取结果集中的数据。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>MYSQL_ROW <span class=\"token function\">mysql_fetch_ROW</span><span class=\"token punctuation\">(</span>MYSQL_RES <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>result</code> ：指向  <code>MYSQL_RES</code>  结构体的指针，该结构体包含了通过  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取的查询结果。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回一个指向  <code>MYSQL_ROW</code>  结构体的指针，该结构体包含了一行数据的所有字段值。</li>\n<li>当没有更多行可获取时，返回  <code>NULL</code> 。</li>\n<li>如果发生错误，也返回  <code>NULL</code> 。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p><code>MYSQL_ROW</code>  是一个数组，其中包含了一行中每个字段的值，类型为  <code>char *</code> 。每个字段的值可以是  <code>NULL</code> （如果该字段的值为 SQL  <code>NULL</code> ），或者是一个指向实际数据的指针。</p>\n<p>使用  <code>mysql_fetch_row()</code>  的典型步骤如下：</p>\n<ol>\n<li>执行一个查询语句，例如使用  <code>mysql_query()</code> 。</li>\n<li>使用  <code>mysql_store_result()</code>  或  <code>mysql_use_result()</code>  获取查询结果。</li>\n<li>在一个循环中调用  <code>mysql_fetch_row()</code>  来逐行获取数据，直到返回  <code>NULL</code>  为止。</li>\n<li>在循环中处理每一行的数据。</li>\n<li>处理完结果集后，使用  <code>mysql_free_result()</code>  释放内存。</li>\n</ol>\n<p>在使用  <code>mysql_fetch_row()</code>  时，应确保在处理完所有行之后释放结果集的内存，以避免内存泄漏。此外， <code>mysql_fetch_row()</code>  通常与  <code>mysql_num_fields()</code>  结合使用，以便知道每一行中有多少列数据，从而正确地处理每一列的值。</p>\n<h3 id=\"mysql_close-关闭数据库连接\"><a class=\"anchor\" href=\"#mysql_close-关闭数据库连接\">#</a>  <code>mysql_close()</code>  关闭数据库连接</h3>\n<p><code>mysql_close()</code>  函数是 MySQL C API 中用于关闭与 MySQL 数据库的连接的函数。当你完成所有的数据库操作后，应该调用这个函数来关闭连接并释放与连接相关的资源。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">mysql_close</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，该结构体代表了与 MySQL 数据库的连接。</p>\n<p>返回值：无。</p>\n<p>使用  <code>mysql_close()</code>  的典型步骤如下：</p>\n<ol>\n<li>初始化  <code>MYSQL</code>  结构体并建立连接，通常使用  <code>mysql_init()</code>  和  <code>mysql_real_connect()</code> 。</li>\n<li>执行数据库操作，如查询或更新。</li>\n<li>处理完所有操作后，调用  <code>mysql_free_result()</code>  释放任何已获取的结果集的内存（如果有）。</li>\n<li>最后，调用  <code>mysql_close()</code>  来关闭连接。</li>\n</ol>\n<p>一旦调用了  <code>mysql_close()</code> ， <code>MYSQL</code>  结构体不再代表一个有效的数据库连接，并且应该避免在此之后使用该结构体进行任何数据库操作</p>\n<p><code>mysql_close()</code>  函数在关闭连接后不会自动释放  <code>MYSQL</code>  结构体本身所占用的内存；如果需要，可以在关闭连接后手动释放它，通常是通过  <code>mysql_init()</code>  分配的。</p>\n<h3 id=\"mysql_error-获取最近一次-mysql-操作错误描述\"><a class=\"anchor\" href=\"#mysql_error-获取最近一次-mysql-操作错误描述\">#</a>  <code>mysql_error()</code>  获取最近一次 MySQL 操作错误描述</h3>\n<p><code>mysql_error()</code>  函数是 MySQL C API 中用于获取最近一次 MySQL 操作错误描述的函数。当你的数据库操作（如连接、查询、更新等）失败时，可以使用这个函数来获取错误信息，这对于调试和错误处理非常有用。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，该结构体代表了与 MySQL 数据库的连接。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回一个指向错误描述字符串的指针。这个字符串是只读的，描述了最近一次 MySQL 操作失败的原因。</li>\n<li>如果没有错误发生，或者  <code>mysql</code>  指针是  <code>NULL</code> ，返回  <code>NULL</code> 。</li>\n</ul>\n<p>使用  <code>mysql_error()</code>  的典型步骤如下：</p>\n<ol>\n<li>执行数据库操作，如  <code>mysql_real_connect()</code> 、 <code>mysql_query()</code>  等。</li>\n<li>如果操作返回错误（通常是通过返回值或特定的错误代码），立即调用  <code>mysql_error()</code>  来获取错误描述。</li>\n<li>使用返回的错误描述字符串来记录日志、显示错误信息或进行错误处理。</li>\n</ol>\n<p><code>mysql_error()</code>  函数返回的错误描述字符串只在下一次调用  <code>mysql_real_connect()</code> 、 <code>mysql_query()</code>  或其他可能产生新错误的 MySQL 函数之前有效。一旦进行了新的数据库操作，之前的错误描述可能会被覆盖。因此，当捕获到一个错误时，应该立即处理或记录错误描述。</p>\n<h3 id=\"select\"><a class=\"anchor\" href=\"#select\">#</a> SELECT</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mysql/mysql.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdc.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  MYSQL <span class=\"token operator\">*</span>conn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  MYSQL_RES <span class=\"token operator\">*</span>result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  MYSQL_ROW row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  conn <span class=\"token operator\">=</span> <span class=\"token function\">mysql_init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">mysql_real_connect</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wd\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                          <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">mysql_set_character_set</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf8mb4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SELECT * FROM student\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  result <span class=\"token operator\">=</span> <span class=\"token function\">mysql_store_result</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row <span class=\"token operator\">=</span> <span class=\"token function\">mysql_fetch_row</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">mysql_num_fields</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s \\t\"</span><span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token function\">mysql_free_result</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token function\">mysql_close</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"update\"><a class=\"anchor\" href=\"#update\">#</a> UPDATE</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mysql/mysql.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdc.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  MYSQL <span class=\"token operator\">*</span>conn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  conn <span class=\"token operator\">=</span> <span class=\"token function\">mysql_init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">mysql_real_connect</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wd\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                          <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                  <span class=\"token string\">\"update wd.student set student_name='张三' where id = 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">mysql_close</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"事务-api\"><a class=\"anchor\" href=\"#事务-api\">#</a> 事务 API</h2>\n<h3 id=\"mysql_autocommit-控制自动提交\"><a class=\"anchor\" href=\"#mysql_autocommit-控制自动提交\">#</a>  <code>mysql_autocommit() </code>  控制自动提交</h3>\n<p><code>mysql_autocommit()</code>  函数是 MySQL C API 中用于控制自动提交模式的函数。在 MySQL 中，当一个事务中的所有操作都成功执行后，可以通过自动提交模式来自动提交这些操作，或者手动提交。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bool <span class=\"token function\">mysql_autocommit</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">,</span> bool mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明：</p>\n<ul>\n<li><code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，该结构体代表了与 MySQL 数据库的连接。</li>\n<li><code>mode</code> ：布尔值，用于设置自动提交模式的状态。\n<ul>\n<li><code>true</code> ：启用自动提交模式。在这种模式下，每个单独的 SQL 语句执行后会自动提交，不需要显式调用提交命令。</li>\n<li><code>false</code> ：禁用自动提交模式。在这种模式下，需要手动调用  <code>mysql_commit()</code>  来提交事务，或者调用  <code>mysql_rollback()</code>  来回滚事务。</li>\n</ul>\n</li>\n</ul>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回  <code>true</code> 。</li>\n<li>失败时，返回  <code>false</code> 。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p>使用  <code>mysql_autocommit()</code>  的典型步骤如下：</p>\n<ol>\n<li>确保已经通过  <code>mysql_real_connect()</code>  成功建立了数据库连接。</li>\n<li>根据需要调用  <code>mysql_autocommit()</code>  来启用或禁用自动提交模式。</li>\n<li>执行一系列的数据库操作，如果禁用了自动提交，需要在所有操作成功后调用  <code>mysql_commit()</code>  提交事务，或者在操作失败时调用  <code>mysql_rollback()</code>  回滚事务。</li>\n<li>完成操作后，关闭数据库连接。</li>\n</ol>\n<p>自动提交模式的设置会影响当前连接的所有后续操作。如果在一个连接上禁用了自动提交，那么在该连接上执行的所有 SQL 语句都不会自动提交，直到显式地提交或回滚事务，或者重新启用自动提交模式。</p>\n<h3 id=\"mysql_commit-提交当前事务\"><a class=\"anchor\" href=\"#mysql_commit-提交当前事务\">#</a>  <code>mysql_commit()</code>  提交当前事务</h3>\n<p><code>mysql_commit()</code>  函数是 MySQL C API 中用于提交当前事务的函数。在数据库操作中，事务是一个重要的概念，它确保了一系列数据库操作要么全部成功，要么全部失败，这是通过提交（Commit）或回滚（Rollback）来实现的。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bool <span class=\"token function\">mysql_commit</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，该结构体代表了与 MySQL 数据库的连接。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回  <code>true</code> 。</li>\n<li>失败时，返回  <code>false</code> 。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p>使用  <code>mysql_commit()</code>  的典型步骤如下：</p>\n<ol>\n<li>确保已经通过  <code>mysql_real_connect()</code>  成功建立了数据库连接。</li>\n<li>执行一系列的数据库操作，这些操作应该在一个事务中。</li>\n<li>在所有操作成功后，调用  <code>mysql_commit()</code>  来提交事务，使所有更改永久生效。</li>\n<li>如果在事务中的任何操作失败，可以选择调用  <code>mysql_rollback()</code>  来回滚事务，撤销所有更改。</li>\n<li>完成操作后，关闭数据库连接。</li>\n</ol>\n<p>提交事务是一个不可逆的操作，一旦提交，事务中的所有更改都将永久生效。因此，在调用  <code>mysql_commit()</code>  之前，确保所有的数据库操作都已经成功执行，并且符合业务逻辑的要求。</p>\n<h3 id=\"mysql_rollback-回滚当前事务\"><a class=\"anchor\" href=\"#mysql_rollback-回滚当前事务\">#</a>  <code>mysql_rollback()</code>  回滚当前事务</h3>\n<p><code>mysql_rollback()</code>  函数是 MySQL C API 中用于回滚当前事务的函数。在数据库操作中，事务是一组原子性的 SQL 操作，它们要么全部成功，要么全部失败。如果在事务中的某个操作失败，或者你决定不继续执行剩余的操作，可以使用  <code>mysql_rollback()</code>  来回滚事务，撤销所有已经执行的操作，确保数据库状态的一致性。</p>\n<p>函数原型如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bool <span class=\"token function\">mysql_rollback</span><span class=\"token punctuation\">(</span>MYSQL <span class=\"token operator\">*</span>mysql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数说明： <code>mysql</code> ：指向  <code>MYSQL</code>  结构体的指针，该结构体代表了与 MySQL 数据库的连接。</p>\n<p>返回值：</p>\n<ul>\n<li>成功时，返回  <code>true</code> 。</li>\n<li>失败时，返回  <code>false</code> 。可以使用  <code>mysql_error()</code>  函数获取错误信息。</li>\n</ul>\n<p>使用  <code>mysql_rollback()</code>  的典型步骤如下：</p>\n<ol>\n<li>确保已经通过  <code>mysql_real_connect()</code>  成功建立了数据库连接。</li>\n<li>执行一系列的数据库操作，这些操作应该在一个事务中。</li>\n<li>如果在事务中的任何操作失败，或者你决定不继续执行剩余的操作，调用  <code>mysql_rollback()</code>  来回滚事务，撤销所有更改。</li>\n<li>完成操作后，关闭数据库连接。</li>\n</ol>\n<p>回滚事务是一个重要的错误处理机制，它确保了数据库的完整性和一致性。在事务中的所有操作都将被视为一个整体，如果任何一个操作失败，整个事务都将被撤销。</p>\n<p>此外，回滚操作通常在检测到错误或异常时立即执行，以避免不一致的数据状态。</p>\n<h3 id=\"commit\"><a class=\"anchor\" href=\"#commit\">#</a> COMMIT</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mysql/mysql.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdc.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  MYSQL <span class=\"token operator\">*</span>conn<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  conn <span class=\"token operator\">=</span> <span class=\"token function\">mysql_init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">mysql_real_connect</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wd\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                          <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">mysql_autocommit</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"INSERT INTO class VALUES (4, '四班')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"INSERT INTO class VALUES (NULL, '五班')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">mysql_rollback</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">mysql_rollback</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token function\">mysql_autocommit</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">mysql_close</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "C/C++",
                "数据库",
                "C",
                "SQL"
            ]
        },
        {
            "id": "http://cwlrin.github.io/misc/%E7%BA%A6%E5%AE%9A%E5%BC%8F%E6%8F%90%E4%BA%A4-1-0-0/",
            "url": "http://cwlrin.github.io/misc/%E7%BA%A6%E5%AE%9A%E5%BC%8F%E6%8F%90%E4%BA%A4-1-0-0/",
            "title": "约定式提交 1.0.0",
            "date_published": "2023-04-04T10:58:13.000Z",
            "content_html": "<p>主要参考 &lt;a href=&quot;<a href=\"https://www.conventionalcommits.org/zh-hans/v1.0.0/\">https://www.conventionalcommits.org/zh-hans/v1.0.0/</a>&quot;&gt; 约定式提交 &lt;/a&gt; 和 &lt;a href=&quot;<a href=\"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines\">https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines</a>&quot;&gt;Contributing to Angular&lt;/a&gt;</p>\n<h2 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h2>\n<p>约定式提交规范是一种基于提交信息的轻量级约定。 它提供了一组简单规则来创建清晰的提交历史； 这更有利于编写自动化工具。 通过在提交信息中描述功能、修复和破坏性变更， 使这种惯例与 <a href=\"http://semver.org/lang/zh-CN\">SemVer</a> 相互对应。</p>\n<p>提交说明的结构如下所示：</p>\n<hr />\n<p>原文：</p>\n<pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre>\n<p>译文：</p>\n<pre><code>&lt;类型&gt;[可选 范围]: &lt;描述&gt;\n\n[可选 正文]\n\n[可选 脚注]\n</code></pre>\n<hr />\n<p>提交说明包含了下面的结构化元素，以向类库使用者表明其意图：</p>\n<ol>\n<li><strong>fix:</strong> <em>类型</em> 为  <code>fix</code>  的提交表示在代码库中修复了一个 bug（这和语义化版本中的 <a href=\"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81\"> <code>PATCH</code> </a> 相对应）。</li>\n<li><strong>feat:</strong> <em>类型</em> 为  <code>feat</code>  的提交表示在代码库中新增了一个功能（这和语义化版本中的 <a href=\"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81\"> <code>MINOR</code> </a> 相对应）。</li>\n<li><strong>BREAKING CHANGE:</strong> 在脚注中包含  <code>BREAKING CHANGE:</code>  或 &lt;类型&gt;(范围) 后面有一个  <code>!</code>  的提交，表示引入了破坏性 API 变更（这和语义化版本中的 <a href=\"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81\"> <code>MAJOR</code> </a> 相对应）。 破坏性变更可以是任意 <em>类型</em> 提交的一部分。</li>\n<li>除  <code>fix:</code>  和  <code>feat:</code>  之外，也可以使用其它提交 <em>类型</em> ，例如 <a href=\"https://github.com/conventional-changelog/commitlint/tree/master/@commitlint/config-conventional\">@commitlint/config-conventional</a>（基于 <a href=\"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines\">Angular 约定</a>）中推荐的  <code>build:</code> 、 <code>chore:</code> 、  <code>ci:</code> 、 <code>docs:</code> 、 <code>style:</code> 、 <code>refactor:</code> 、 <code>perf:</code> 、 <code>test:</code> ，等等。\n<ol>\n<li><code>build:</code> <em> 类型</em> 为  <code>build:</code>  的提交表示影响构建系统或外部依赖关系的更改。</li>\n<li><code>ci:</code> <em> 类型</em> 为  <code>ci:</code>  的提交表示更改我们的 CI 配置文件和脚本</li>\n<li><code>docs:</code> <em> 类型</em> 为  <code>docs:</code>  的提交表示仅文档更改。</li>\n<li><code>perf:</code> <em> 类型</em> 为  <code>perf:</code>  的提交表示提高性能的代码更改。</li>\n<li><code>refactor:</code> <em> 类型</em> 为  <code>refactor:</code>  的提交表示一种既不修复错误也不添加功能的代码更改。</li>\n<li><code>style:</code> <em> 类型</em> 为  <code>style:</code>  的提交表示不影响代码含义的更改（空格、格式、缺少分号等）。</li>\n<li><code>test:</code> <em> 类型</em> 为  <code>test:</code>  的提交表示添加缺失的测试或更正现有测试。</li>\n</ol>\n</li>\n<li>脚注中除了  <code>BREAKING CHANGE: &lt;description&gt;</code>  ，其它条目应该采用类似 <a href=\"https://git-scm.com/docs/git-interpret-trailers\">git trailer format</a> 这样的惯例。</li>\n</ol>\n<p>其它提交类型在约定式提交规范中并没有强制限制，并且在语义化版本中没有隐式影响（除非它们包含 BREAKING CHANGE）。 可以为提交类型添加一个围在圆括号内的范围，以为其提供额外的上下文信息。例如  <code>feat(parser): adds ability to parse arrays.</code> 。</p>\n<h2 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h2>\n<h3 id=\"包含了描述并且脚注中有破坏性变更的提交说明\"><a class=\"anchor\" href=\"#包含了描述并且脚注中有破坏性变更的提交说明\">#</a> 包含了描述并且脚注中有破坏性变更的提交说明</h3>\n<pre><code>feat: allow provided config object to extend other configs\n\nBREAKING CHANGE: `extends` key in config file is now used for extending other config files\n</code></pre>\n<h3 id=\"包含了-字符以提醒注意破坏性变更的提交说明\"><a class=\"anchor\" href=\"#包含了-字符以提醒注意破坏性变更的提交说明\">#</a> 包含了  <code>!</code>  字符以提醒注意破坏性变更的提交说明</h3>\n<pre><code>feat!: send an email to the customer when a product is shipped\n</code></pre>\n<h3 id=\"包含了范围和破坏性变更-的提交說明\"><a class=\"anchor\" href=\"#包含了范围和破坏性变更-的提交說明\">#</a> 包含了范围和破坏性变更  <code>!</code>  的提交說明</h3>\n<pre><code>feat(api)!: send an email to the customer when a product is shipped\n</code></pre>\n<h3 id=\"包含了-和-breaking-change-脚注的提交说明\"><a class=\"anchor\" href=\"#包含了-和-breaking-change-脚注的提交说明\">#</a> 包含了  <code>!</code>  和 BREAKING CHANGE 脚注的提交说明</h3>\n<pre><code>chore!: drop support for Node 6\n\nBREAKING CHANGE: use JavaScript features not available in Node 6.\n</code></pre>\n<h3 id=\"不包含正文的提交说明\"><a class=\"anchor\" href=\"#不包含正文的提交说明\">#</a> 不包含正文的提交说明</h3>\n<pre><code>docs: correct spelling of CHANGELOG\n</code></pre>\n<h3 id=\"包含范围的提交说明\"><a class=\"anchor\" href=\"#包含范围的提交说明\">#</a> 包含范围的提交说明</h3>\n<pre><code>feat(lang): add polish language\n</code></pre>\n<h3 id=\"包含多行正文和多行脚注的提交说明\"><a class=\"anchor\" href=\"#包含多行正文和多行脚注的提交说明\">#</a> 包含多行正文和多行脚注的提交说明</h3>\n<pre><code>fix: prevent racing of requests\n\nIntroduce a request id and a reference to latest request. Dismiss\nincoming responses other than from latest request.\n\nRemove timeouts which were used to mitigate the racing issue but are\nobsolete now.\n\nReviewed-by: Z\nRefs: #123\n</code></pre>\n<h2 id=\"约定式提交规范\"><a class=\"anchor\" href=\"#约定式提交规范\">#</a> 约定式提交规范</h2>\n<p>本文中的关键词 “必须（MUST）”、“禁止（MUST NOT）”、“必要（REQUIRED）”、“应当（SHALL）”、“不应当（SHALL NOT）”、“应该（SHOULD）”、“不应该（SHOULD NOT）”、“推荐（RECOMMENDED）”、“可以（MAY）” 和 “可选（OPTIONAL）” ，其相关解释参考 <a href=\"https://www.ietf.org/rfc/rfc2119.txt\">RFC 2119</a> 。</p>\n<ol>\n<li>每个提交都<strong>必须</strong>使用类型字段前缀，它由一个名词构成，诸如  <code>feat</code>  或  <code>fix</code>  ， 其后接<strong>可选的</strong>范围字段，<strong>可选的</strong>  <code>!</code> ，以及<strong>必要的</strong>冒号（英文半角）和空格。</li>\n<li>当一个提交为应用或类库实现了新功能时，<strong>必须</strong>使用  <code>feat</code>  类型。</li>\n<li>当一个提交为应用修复了 bug 时，<strong>必须</strong>使用  <code>fix</code>  类型。</li>\n<li>范围字段<strong>可以</strong>跟随在类型字段后面。范围<strong>必须</strong>是一个描述某部分代码的名词，并用圆括号包围，例如：  <code>fix(parser):</code></li>\n<li>描述字段<strong>必须</strong>直接跟在 &lt;类型&gt;(范围) 前缀的冒号和空格之后。 描述指的是对代码变更的简短总结，例如： <em>fix: array parsing issue when multiple spaces were contained in string</em> 。</li>\n<li>在简短描述之后，<strong>可以</strong>编写较长的提交正文，为代码变更提供额外的上下文信息。正文<strong>必须</strong>起始于描述字段结束的一个空行后。</li>\n<li>提交的正文内容自由编写，并<strong>可以</strong>使用空行分隔不同段落。</li>\n<li>在正文结束的一个空行之后，<strong>可以</strong>编写一行或多行脚注。每行脚注都<strong>必须</strong>包含 一个令牌（token），后面紧跟  <code>:&lt;space&gt;</code>  或  <code>&lt;space&gt;#</code>  作为分隔符，后面再紧跟令牌的值（受 <a href=\"https://git-scm.com/docs/git-interpret-trailers\">git trailer convention</a> 启发）。</li>\n<li>脚注的令牌<strong>必须</strong>使用  <code>-</code>  作为连字符，比如  <code>Acked-by</code>  (这样有助于 区分脚注和多行正文)。有一种例外情况就是  <code>BREAKING CHANGE</code> ，它<strong>可以</strong>被认为是一个令牌。</li>\n<li>脚注的值<strong>可以</strong>包含空格和换行，值的解析过程<strong>必须</strong>直到下一个脚注的令牌 / 分隔符出现为止。</li>\n<li>破坏性变更<strong>必须</strong>在提交信息中标记出来，要么在 &lt;类型&gt;(范围) 前缀中标记，要么作为脚注的一项。</li>\n<li>包含在脚注中时，破坏性变更<strong>必须</strong>包含大写的文本  <code>BREAKING CHANGE</code> ，后面紧跟着冒号、空格，然后是描述，例如： <em>BREAKING CHANGE: environment variables now take precedence over config files</em> 。</li>\n<li>包含在 &lt;类型&gt;(范围) 前缀时，破坏性变更<strong>必须</strong>通过把  <code>!</code>  直接放在  <code>:</code>  前面标记出来。 如果使用了  <code>!</code> ，那么脚注中<strong>可以</strong>不写  <code>BREAKING CHANGE:</code> ， 同时提交信息的描述中<strong>应该</strong>用来描述破坏性变更。</li>\n<li>在提交说明中，<strong>可以</strong>使用  <code>feat</code>  和  <code>fix</code>  之外的类型，比如：<em>docs: updated ref docs.</em> 。</li>\n<li>工具的实现必须<strong>不区分</strong>大小写地解析构成约定式提交的信息单元，只有  <code>BREAKING CHANGE</code>  <strong>必须</strong>是大写的。</li>\n<li>BREAKING-CHANGE 作为脚注的令牌时<strong>必须</strong>是 BREAKING CHANGE 的同义词。</li>\n</ol>\n<h2 id=\"为什么使用约定式提交\"><a class=\"anchor\" href=\"#为什么使用约定式提交\">#</a> 为什么使用约定式提交</h2>\n<ul>\n<li>自动化生成 CHANGELOG。</li>\n<li>基于提交的类型，自动决定语义化的版本变更。</li>\n<li>向同事、公众与其他利益关系者传达变化的性质。</li>\n<li>触发构建和部署流程。</li>\n<li>让人们探索一个更加结构化的提交历史，以便降低对你的项目做出贡献的难度。</li>\n</ul>\n",
            "tags": [
                "杂项",
                "https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjRXZhbWxnX1FoRWpDUjBFVXo1eTlzQmNyeGlGbktnM3h3a2FoSHJ3dG5FNkE_ZT14Mlg5VUY.png"
            ]
        },
        {
            "id": "http://cwlrin.github.io/misc/%E4%BD%BF%E7%94%A8-ffmpeg-%E5%B0%86%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91%E5%90%88%E5%B9%B6%E4%B8%BA%E5%8D%95%E4%B8%AA%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/",
            "url": "http://cwlrin.github.io/misc/%E4%BD%BF%E7%94%A8-ffmpeg-%E5%B0%86%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91%E5%90%88%E5%B9%B6%E4%B8%BA%E5%8D%95%E4%B8%AA%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/",
            "title": "使用 ffmpeg 将文件夹中的所有视频合并为单个视频文件",
            "date_published": "2023-02-23T08:10:32.000Z",
            "content_html": "<p>] 需要安装 ffmpeg</p>\n<p>首先使用 Windows PowerShell 输入 bash 指令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>foreach <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token keyword\">in</span> Get-ChildItem .<span class=\"token punctuation\">\\</span>*.mp4<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>echo <span class=\"token string\">\"file '<span class=\"token variable\">$i</span>'\"</span> <span class=\"token operator\">>></span> mylist.txt<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由于使用 Windows PowerShell 生成的文件默认为 UTF-16，我们需要使用 VSCode 将其转换为 UTF-8 格式</p>\n<p>转换之后键入 ffmpeg 的批量合成指令即可</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ffmpeg <span class=\"token parameter variable\">-f</span> concat <span class=\"token parameter variable\">-safe</span> <span class=\"token number\">0</span> <span class=\"token parameter variable\">-i</span> mylist.txt <span class=\"token parameter variable\">-c</span> copy output.mp4</pre></td></tr></table></figure><p>最后删除生成的文档即可</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>delete mylist.txt</pre></td></tr></table></figure>",
            "tags": [
                "杂项"
            ]
        },
        {
            "id": "http://cwlrin.github.io/games101/GAMES101-L05-Rasterization-Triangles/",
            "url": "http://cwlrin.github.io/games101/GAMES101-L05-Rasterization-Triangles/",
            "title": "GAMES101 L05 Rasterization(Triangles)",
            "date_published": "2022-12-29T10:31:42.000Z",
            "content_html": "<h1 id=\"标准立方体到屏幕\"><a class=\"anchor\" href=\"#标准立方体到屏幕\">#</a> 标准立方体到屏幕</h1>\n<h2 id=\"什么是屏幕\"><a class=\"anchor\" href=\"#什么是屏幕\">#</a> 什么是屏幕？</h2>\n<ul>\n<li>二维数组</li>\n<li>每个元素是一个像素</li>\n<li>一种经典的光栅成像设备</li>\n</ul>\n<p>Raster 在德语中的意思就是表示屏幕</p>\n<p>光栅化：在屏幕上绘画</p>\n<p>像素：</p>\n<ul>\n<li>在屏幕上最小单位的小方块</li>\n<li>由红绿蓝三原色混合而成</li>\n</ul>\n<h2 id=\"屏幕空间\"><a class=\"anchor\" href=\"#屏幕空间\">#</a> 屏幕空间</h2>\n<ul>\n<li>像素都是以 (x,y) 的形式表示，其中 x, y 都是整数</li>\n<li>像素的范围从 (0, 0) 到 (宽度 - 1, 长度 - 1)</li>\n<li>像素的中心在 (x + 0.5, y + 0.5)</li>\n<li>屏幕覆盖范围为 (0, 0) 到 (宽，高)</li>\n<li><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUMldPVHlYM1N4R2pEbm83WUtuRk9RQnFjbGllMWkyTnRKN1lJNENSaGNGUFE_ZT16RkpkQXo.jpg\" alt=\"\" /></li>\n</ul>\n<h2 id=\"视口变换\"><a class=\"anchor\" href=\"#视口变换\">#</a> 视口变换</h2>\n<ul>\n<li>\n<p>Z 轴被忽略</p>\n</li>\n<li>\n<p>将原本 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mtext>，</mtext><mn>1</mn><msup><mo stretchy=\"false\">]</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">[-1，1]^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 的正方体变换为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mtext>宽</mtext><mo stretchy=\"false\">]</mo><mo>×</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mtext>高</mtext><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, 宽] \\times [0, 高]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord cjk_fallback\">宽</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord cjk_fallback\">高</span><span class=\"mclose\">]</span></span></span></span>（视口变换）</p>\n</li>\n<li>\n<p>视口变换矩阵</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>M</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow><mn>2</mn></mfrac></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow><mn>2</mn></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow><mn>2</mn></mfrac></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M_{viewport}=\\begin{pmatrix}\n\\dfrac{width}{2}  &amp;0  &amp;0  &amp;\\dfrac{width}{2} \\\\\n0  &amp;\\dfrac{height}{2}  &amp;0  &amp;\\dfrac{height}{2} \\\\\n0  &amp;0  &amp;1  &amp;0 \\\\\n0  &amp;0  &amp;0 &amp;1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">wp</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6.6em;vertical-align:-3.05em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.55em;\"><span style=\"top:-5.55em;\"><span class=\"pstrut\" style=\"height:8.6em;\"></span><span style=\"width:0.875em;height:6.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.600em\" viewBox=\"0 0 875 6600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,3084c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-3092c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5074em;\"><span style=\"top:-5.5074em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.924em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.724em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0074em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5074em;\"><span style=\"top:-5.5074em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.924em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.724em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0074em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5074em;\"><span style=\"top:-5.5074em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.924em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-0.724em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0074em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5074em;\"><span style=\"top:-5.5074em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.45em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.924em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.724em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0074em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.55em;\"><span style=\"top:-5.55em;\"><span class=\"pstrut\" style=\"height:8.6em;\"></span><span style=\"width:0.875em;height:6.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.600em\" viewBox=\"0 0 875 6600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,3009\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-3144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h1 id=\"光栅显示设备\"><a class=\"anchor\" href=\"#光栅显示设备\">#</a> 光栅显示设备</h1>\n<ul>\n<li>\n<p>阴极射线管</p>\n<ul>\n<li>\n<p>隔行扫描：但是出现的问题是高速运动的画面会构成画面撕裂</p>\n</li>\n<li>\n<p>CRT 显示器</p>\n</li>\n<li>\n<p>示波器</p>\n</li>\n</ul>\n</li>\n<li>\n<p>帧缓冲器</p>\n</li>\n<li>\n<p>平板显示设备</p>\n<ul>\n<li>LCD（液晶显示器）\n<ul>\n<li>利用液晶原理来控制一个像素显示什么</li>\n<li>液晶通过自己的不同排布影响光的极化</li>\n</ul>\n</li>\n<li>OLED</li>\n<li>LED（发光二极管）</li>\n<li>电子墨水屏：控制黑的在上还是白的在上。但是缺陷是刷新率肉眼可见的慢</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"三角形-基本形状单元\"><a class=\"anchor\" href=\"#三角形-基本形状单元\">#</a> 三角形 - 基本形状单元</h1>\n<ul>\n<li>最基础的多边形\n<ul>\n<li>任何多边形都可以拆成三角形</li>\n</ul>\n</li>\n<li>独特的性质\n<ul>\n<li>除非折成两个三角形，否则永远是一个面</li>\n<li>三角形的内外很明确</li>\n<li>可以利用重心插值进行三角形顶点插值</li>\n</ul>\n</li>\n</ul>\n<p>光栅化中最重要的一步：判断三角形与一个像素（中心点）的位置关系</p>\n<h1 id=\"采样\"><a class=\"anchor\" href=\"#采样\">#</a> 采样</h1>\n<p>定义：一个函数离散化的过程</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> xmax<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\toutput<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>采样可以是一维，二维，三维的。光栅化属于二维采样</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUenF0UVFsWDE1T2k3NTdDTldWbmtzQkZEV2JGQ28xcUgyOUNVY1h1bFdTZUE_ZT1qYzBmZ24.jpg\" alt=\"\" /></p>\n<h2 id=\"光栅化的方法\"><a class=\"anchor\" href=\"#光栅化的方法\">#</a> 光栅化的方法</h2>\n<p>给一个三角形，来判断像素中心是否在三角形内</p>\n<p>定义一个二元函数  <code>inside(tri, x, y)</code></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>inside(t, x, y)</mtext><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext> Point (x,y) in triangle t </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext> otherwise </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">\\text{inside(t, x, y)}\n\\begin{cases}\n1  &amp; \\text{ Point (x,y) in triangle t }\\\\\n0  &amp; \\text{ otherwise }\n\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"mord text\"><span class=\"mord\">inside(t, x, y)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> Point (x,y) in triangle t </span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> otherwise </span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>光栅化 = 对 2D 指标函数进行采样</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> xmax<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">fot</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> ymax<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \timage<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>tri<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>遍历所有点，判断所有点是否在像素内，通过叉乘计算出（见叉乘在图形学的应用）点是否在三角形内。</p>\n<p>点在三角形边上怎么处理：看自己定义（在边上不算，或者都算）</p>\n<p>API（OpenGL）的严格规定：落在三角形的边的左边和上边就算，其次不算</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VlZUxUVWNmbHlOT25WOXNXLUY5SURZQkpxUEZtMHdLVFFqc0FQZnZqaG5kNVE_ZT1wYmJrNFY.jpg\" alt=\"\" /></p>\n<p>快速寻找像素：</p>\n<ul>\n<li>\n<p>蓝色区域表示三角形的包围盒，只有在这个区域内的像素，才去做上面的  <code>for</code>  循环；即不需要每一个像素都从 <code>(0 - width / height)</code>  走一遍</p>\n</li>\n<li>\n<p>AABB 法</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VhNDZRVDY3Qk1SSXVFMDNvY2FVX3pZQmFGZTR1LW53d212c1VWS3U1aGFEbUE_ZT1TUDNoN20.jpg\" alt=\"\" /></p>\n<ul>\n<li>三角形所覆盖的区域，每一行都找最左和左右，这样就不考虑多一个像素，但是方法较难</li>\n<li>三角形窄长，又是旋转了角度的，AABB 的方法就比较合适</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "GAMES101",
                "技术美术",
                "图形学"
            ]
        },
        {
            "id": "http://cwlrin.github.io/games101/GAMES101-L04-Transformation-Cont/",
            "url": "http://cwlrin.github.io/games101/GAMES101-L04-Transformation-Cont/",
            "title": "GAMES101 L04 Transformation Cont",
            "date_published": "2022-08-29T10:07:27.000Z",
            "content_html": "<h2 id=\"3d-变换\"><a class=\"anchor\" href=\"#3d-变换\">#</a> 3D 变换</h2>\n<h3 id=\"平移\"><a class=\"anchor\" href=\"#平移\">#</a> 平移</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>y</mi></msub><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>z</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">T(t_x,t_y,t_z)=\\begin{pmatrix}\n1  &amp;  0&amp;0  &amp;t_x \\\\\n0  &amp; 1 &amp; 0 &amp; t_y\\\\\n0  &amp;0  &amp;1  &amp;t_z \\\\\n 0 &amp;0  &amp;0  &amp;1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"缩放\"><a class=\"anchor\" href=\"#缩放\">#</a> 缩放</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>x</mi></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>y</mi></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>z</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">S(s_x,s_y,s_z)=\\begin{pmatrix}\ns_x  &amp;  0&amp;0  &amp;0 \\\\\n0  &amp; s_y &amp; 0 &amp; 0\\\\\n0  &amp;0  &amp;s_z  &amp;0 \\\\\n 0 &amp;0  &amp;0  &amp;1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"旋转\"><a class=\"anchor\" href=\"#旋转\">#</a> 旋转</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mspace linebreak=\"newline\"></mspace><msub><mi>R</mi><mi>y</mi></msub><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mspace linebreak=\"newline\"></mspace><msub><mi>R</mi><mi>z</mi></msub><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R_x(\\alpha)=\\begin{pmatrix}\n1  &amp;  0&amp;0  &amp;0 \\\\\n0  &amp; \\cos\\alpha &amp; -\\sin\\alpha &amp; 0\\\\\n0  &amp;\\sin\\alpha  &amp;\\cos\\alpha  &amp;0 \\\\\n 0 &amp;0  &amp;0  &amp;1\n\\end{pmatrix}\\\\\nR_y(\\alpha)=\\begin{pmatrix}\n\\cos\\alpha  &amp;  0&amp;\\sin\\alpha  &amp;0 \\\\\n0  &amp; 1 &amp; 0 &amp; 0\\\\\n-\\sin\\alpha  &amp;0  &amp;\\cos\\alpha  &amp;0 \\\\\n 0 &amp;0  &amp;0  &amp;1\n\\end{pmatrix}\\\\\nR_z(\\alpha)=\\begin{pmatrix}\n\\cos\\alpha  &amp;  -\\sin\\alpha&amp;0  &amp;0 \\\\\n\\sin\\alpha  &amp; \\cos\\alpha &amp; 0 &amp; 0\\\\\n0  &amp;0  &amp;1  &amp;0 \\\\\n0 &amp;0  &amp;0  &amp;1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWRHdDdG1ZMVFCRmc4dzVYdDRpMVRzQnI3YUQzc3pzdUVVU1A1NWZVYVE2X1E_ZT1iM05qMVo.jpg\" alt=\"\" /></p>\n<p>3D 旋转变换矩阵遵循循环对称：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>×</mo><mi>Y</mi><mo>=</mo><mi>Z</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo>×</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Z</mi><mo>×</mo><mi>X</mi><mo>=</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\times Y=Z,Y\\times Z=X,Z\\times X=Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<h3 id=\"合成的旋转变换\"><a class=\"anchor\" href=\"#合成的旋转变换\">#</a> 合成的旋转变换</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mrow><mi>x</mi><mi>y</mi><mi>z</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>α</mi><mo separator=\"true\">,</mo><mi>β</mi><mo separator=\"true\">,</mo><mi>γ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>R</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><msub><mi>R</mi><mi>y</mi></msub><mo stretchy=\"false\">(</mo><mi>β</mi><mo stretchy=\"false\">)</mo><msub><mi>R</mi><mi>z</mi></msub><mo stretchy=\"false\">(</mo><mi>γ</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R_{xyz}(\\alpha,\\beta,\\gamma)=R_x(\\alpha)R_y(\\beta)R_z(\\gamma)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">yz</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>称为 “欧拉角”</li>\n<li>常用于飞行模拟器：roll、pitch、yaw</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VhaGlHT3lRNXVoUGxmZ0Q2SkowUTljQkk4OU5BYVI4Q1J2R0JHZGFOaHpGWkE_ZT1Dd2pBTjk.jpg\" alt=\"\" /></p>\n<h2 id=\"罗德里格斯旋转公式\"><a class=\"anchor\" href=\"#罗德里格斯旋转公式\">#</a> 罗德里格斯旋转公式</h2>\n<p>绕旋转轴 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 旋转 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> 角度</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mi>I</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mi>n</mi><msup><mi>n</mi><mi>T</mi></msup><mo>+</mo><mi>sin</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mi>N</mi><mspace linebreak=\"newline\"></mspace><mi>N</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>n</mi><mi>z</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>n</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>n</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>n</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>n</mi><mi>y</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>n</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R(n,\\alpha)=\\cos(\\alpha)I+(1-\\cos(\\alpha))nn^T+\\sin(\\alpha)N\\\\\nN=\\begin{pmatrix}\n0  &amp;  -n_z &amp; n_y \\\\\nn_z  &amp; 0 &amp; -n_x\\\\\n-n_y  &amp;n_x  &amp;0  \\\\\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">))</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">sin</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>四元数：旋转与旋转之间的差值</p>\n<h3 id=\"推导过程\"><a class=\"anchor\" href=\"#推导过程\">#</a> 推导过程</h3>\n<ol>\n<li>\n<p>对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 做正交分解，得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mo>=</mo><msub><mi>v</mi><mo>∥</mo></msub><mo>+</mo><msub><mi>v</mi><mo>⊥</mo></msub></mrow><annotation encoding=\"application/x-tex\">v=v_\\parallel+v_\\perp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9385em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>由向量的矢量投影公式，得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mo>∥</mo></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">v_\\parallel=(v\\cdot k)\\cdot k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7858em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></p>\n</li>\n<li>\n<p>由 ① 和 ② ，得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mo>⊥</mo></msub><mo>=</mo><mi>v</mi><mo>−</mo><msub><mi>v</mi><mo>∥</mo></msub><mo>=</mo><mi>v</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">v_\\perp=v-v_\\parallel=v-(v\\cdot k)\\cdot k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7858em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∵</mo></mrow><annotation encoding=\"application/x-tex\">\\because</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∵</span></span></span></span>  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo separator=\"true\">,</mo><msub><mi>v</mi><mo>⊥</mo></msub></mrow><annotation encoding=\"application/x-tex\">k,v_\\perp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span> 两两垂直，且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>v</mi><mo>⊥</mo></msub><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|w|=|v_\\perp|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∴</mo></mrow><annotation encoding=\"application/x-tex\">\\therefore</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∴</span></span></span></span> 由向量积得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>w</mi><mo>=</mo><mi>k</mi><mo>×</mo><msub><mi>v</mi><mo>⊥</mo></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>k</mi><mo>×</mo><mo stretchy=\"false\">[</mo><mi>v</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>k</mi><mo>×</mo><mi>v</mi><mo>−</mo><mi>k</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>k</mi><mo>×</mo><mi>v</mi><mo>−</mo><mi>k</mi><mo>×</mo><msub><mi>v</mi><mo>∥</mo></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n w=k\\times v_\\perp&amp;=k\\times [v-(v\\cdot k) k]\\\\\n    &amp;=k\\times v-k\\times (v\\cdot k) k \\\\\n    &amp;= k\\times v-k\\times v_\\parallel\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.5em;vertical-align:-2em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∵</mo></mrow><annotation encoding=\"application/x-tex\">\\because</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∵</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mo>∥</mo></msub></mrow><annotation encoding=\"application/x-tex\">v_\\parallel</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7858em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span></span></span></span> 共线</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∴</mo></mrow><annotation encoding=\"application/x-tex\">\\therefore</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∴</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mi>k</mi><mo>×</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">w=k \\times v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mo>⊥</mo></msub></mrow><annotation encoding=\"application/x-tex\">v_\\perp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 旋转 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 角后得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">v_{rot\\perp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">v_{rot\\perp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 正交分解，得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">v_{rot\\perp}=a+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>θ</mi><mo>−</mo><msup><mn>90</mn><mo>∘</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mo separator=\"true\">,</mo><mi>a</mi><mo>=</mo><mi>w</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">a=v_{rot\\perp}\\times \\cos(\\theta-90^\\circ)=v_{rot\\perp}\\times \\cos,a=w\\sin\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6741em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mop\">cos</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><msup><mn>180</mn><mo>∘</mo></msup><mo>−</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>×</mo><mi>cos</mi><mo>⁡</mo><mo separator=\"true\">,</mo><mi>b</mi><mo>=</mo><msub><mi>v</mi><mo>⊥</mo></msub><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">b=v_{rot\\perp}\\times \\cos(180^\\circ-\\theta)=v_{rot\\perp}\\times \\cos,b=v_\\perp\\cos\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord\">18</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6741em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mop\">cos</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">⊥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∴</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo>=</mo><mi>w</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mo>+</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>k</mi><mo>×</mo><mi>v</mi><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">[</mo><mi>v</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\therefore v_{rot\\perp}=a+b=w\\sin\\theta+v_{rot\\perp}\\cos\\theta=\\sin\\theta k\\times v + \\cos \\theta[v-(v\\cdot k) k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∴</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>v</mi><mo>∥</mo></msub><mo>+</mo><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mo>⊥</mo></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>k</mi><mo>×</mo><mi>v</mi><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">[</mo><mi>v</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>k</mi><mo>×</mo><mi>v</mi><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>v</mi><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>v</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>k</mi><mo>×</mo><mi>v</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n v_{rot}=v_\\parallel+v_{rot\\perp}&amp;=(v\\cdot k)+\\sin\\theta k\\times v+\\cos\\theta[v-(v\\cdot k)k]\\\\\n &amp;=(v\\cdot k)k+\\sin\\theta k\\times v + \\cos\\theta v-\\cos\\theta(v\\cdot k)k\\\\\n &amp;=\\cos\\theta v+(1-\\cos\\theta)(v\\cdot k)k+\\sin\\theta k\\times v\n \\end{align*}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.5em;vertical-align:-2em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mrel mtight\">∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">⊥</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>将得到的结果变为矩阵的形式：</p>\n<ol>\n<li>\n<p>推导，得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>v</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi>k</mi><mo>×</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v_{rot}=\\cos\\theta v+(1-\\cos\\theta)(v\\cdot k)k+\\sin\\theta k\\times v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span></p>\n<p>把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 分别写作列向量：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mi>v</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">k=\\begin{pmatrix}\nk_x \\\\k_y \\\\k_z\n\\end{pmatrix}\nv=\\begin{pmatrix}\nv_x \\\\v_y \\\\v_z\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>令 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>R</mi><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v_{rot}=Rv</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ro</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>，下面对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 进行计算</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mi>k</mi><mo>=</mo><mi>k</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mo>⋅</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>k</mi><mo stretchy=\"false\">(</mo><msup><mi>k</mi><mi>T</mi></msup><mo>⋅</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(v\\cdot k)k=k(v\\cdot k)=k(k^T\\cdot v)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>×</mo><mi>v</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>k</mi><mi>y</mi></msub><msub><mi>v</mi><mi>z</mi></msub><mo>−</mo><msub><mi>k</mi><mi>z</mi></msub><msub><mi>v</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>k</mi><mi>z</mi></msub><msub><mi>v</mi><mi>x</mi></msub><mo>−</mo><msub><mi>k</mi><mi>x</mi></msub><msub><mi>v</mi><mi>z</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>k</mi><mi>x</mi></msub><msub><mi>v</mi><mi>y</mi></msub><mo>−</mo><msub><mi>k</mi><mi>y</mi></msub><msub><mi>v</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>z</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>y</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">k\\times v =\\begin{pmatrix}k_y v_z-k_z v_y \\\\k_zv_x-k_xv_z \\\\k_xv_y-k_yv_x\\end{pmatrix}=\\begin{pmatrix}0&amp;-k_z&amp;k_y\\\\k_z&amp;0&amp;-k_x\\\\-k_y&amp;k_x&amp;0\\end{pmatrix}\\begin{pmatrix}v_x \\\\v_y \\\\v_z\\end{pmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∴</mo><mtext> </mtext><mi>R</mi><mo>=</mo><mi>I</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>+</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>z</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>k</mi><mi>y</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>k</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\therefore\\ R=I\\cos\\theta+(1-\\cos\\theta)\\begin{pmatrix}k_x\\\\k_y \\\\k_z\\end{pmatrix}\\begin{pmatrix}k_x&amp;k_y&amp;k_z\\end{pmatrix}+\\sin\\theta\\begin{pmatrix}0&amp;-k_z&amp;k_y\\\\k_z&amp;0&amp;-k_x\\\\-k_y&amp;k_x&amp;0\\end{pmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6922em;\"></span><span class=\"mrel amsrm\">∴</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3\\times 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span> 的单位矩阵</p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"如何将三维变成二维并在屏幕上显示出来\"><a class=\"anchor\" href=\"#如何将三维变成二维并在屏幕上显示出来\">#</a> 如何将三维变成二维并在屏幕上显示出来</h2>\n<ol>\n<li>模型变换 (M)</li>\n<li>相机变换 (V)</li>\n<li>投影变换 (P)</li>\n</ol>\n<h3 id=\"相机的定义\"><a class=\"anchor\" href=\"#相机的定义\">#</a> 相机的定义</h3>\n<ul>\n<li>位置 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>e</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{e}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">e</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1799em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span></span></span></span></li>\n<li>视线方向 $\\hat {g} $</li>\n<li>垂直方向 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8785em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">t</span></span><span style=\"top:-3.1841em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VhSUtzdkZtMmVWTmdyUjhBdUhhT2gwQmF6YzZFNy1Bcm85eC0zbEhrdnlMQmc_ZT1sZmE3eGY.jpg\" alt=\"\" /></p>\n<p>如果把摄像机和世界一起变换，那么照片是一样的，所以把摄像机变换到新坐标系的原点，其他所有物体也做同样的变换</p>\n<h2 id=\"teg-坐标系怎么转变为-xyz-坐标系\"><a class=\"anchor\" href=\"#teg-坐标系怎么转变为-xyz-坐标系\">#</a> TEG 坐标系怎么转变为 XYZ 坐标系</h2>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>M</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><msub><mi>R</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><msub><mi>T</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">M_{view}=R_{view}T_{view}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<ol>\n<li>\n<p>先做平移，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>x</mi><mi>e</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>y</mi><mi>e</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><msub><mi>z</mi><mi>e</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">T_{view}=\\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; -x_e\\\\ 0 &amp; 1 &amp; 0 &amp;-y_e \\\\  0&amp; 0 &amp; 1 &amp;-z_e \\\\ 0 &amp; 0 &amp; 0 &amp;1\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>再做旋转，顺着思路要把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> 旋转到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">-Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 坐标轴，把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8785em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">t</span></span><span style=\"top:-3.1841em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span> 旋转到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 坐标轴，把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo>×</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(g\\times t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span> 旋转到  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 坐标轴，但这样的旋转矩阵非常难写</p>\n</li>\n<li>\n<p>所以采用逆向思路，把坐标轴移到相机坐标轴，通过逆操作写（该旋转矩阵为正交矩阵，其逆矩阵就是它的转置矩阵）（基变换）</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>R</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace><msub><mi>R</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mrow><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover><mo>×</mo><mover accent=\"true\"><mi>t</mi><mo>^</mo></mover></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>x</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>y</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>z</mi><mrow><mo>−</mo><mi>g</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">R^{-1}_{view}=\\begin{bmatrix} x_{\\hat{g}\\times \\hat{t}} &amp; x_t &amp; x_{-g} &amp; 0\\\\ y_{\\hat{g}\\times\\hat{t}} &amp; y_t &amp; y_{-g} &amp;0 \\\\  z_{\\hat{g}\\times\\hat{t}} &amp; z_t &amp; z_{-g} &amp;0 \\\\ 0 &amp; 0 &amp; 0 &amp;1\\end{bmatrix}\\\\\nR_{view}=\\begin{bmatrix} x_{\\hat{g}\\times \\hat{t}} &amp; y_{\\hat{g}\\times\\hat{t}} &amp; z_{\\hat{g}\\times\\hat{t}} &amp; 0\\\\ x_t &amp; y_t &amp; z_t &amp;0 \\\\  x_{-g} &amp; y_{-g} &amp; z_{-g} &amp;0 \\\\ 0 &amp; 0 &amp; 0 &amp;1\\end{bmatrix}\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1311em;vertical-align:-0.267em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.433em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.267em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.9388em;vertical-align:-2.2194em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7194em;\"><span style=\"top:-4.8794em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1406em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2194em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7194em;\"><span style=\"top:-4.8794em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1406em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2194em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7194em;\"><span style=\"top:-4.8794em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1406em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2194em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7194em;\"><span style=\"top:-4.8794em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.6331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.1406em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2194em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8463em;vertical-align:-2.1731em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6731em;\"><span style=\"top:-4.8331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.5869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1731em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6731em;\"><span style=\"top:-4.8331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.5869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1731em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6731em;\"><span style=\"top:-4.8331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.4298em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.2222em;\"><span class=\"mord mtight\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mbin mtight\">×</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8785em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mathnormal mtight\">t</span></span><span style=\"top:-2.8841em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord mtight\">^</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4063em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.5869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.1869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1731em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6731em;\"><span style=\"top:-4.8331em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.5869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.3869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.1869em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1731em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n</li>\n</ol>\n<h2 id=\"投影变换\"><a class=\"anchor\" href=\"#投影变换\">#</a> 投影变换</h2>\n<h3 id=\"计算机图形学中的投影\"><a class=\"anchor\" href=\"#计算机图形学中的投影\">#</a> 计算机图形学中的投影</h3>\n<ul>\n<li>3D 转 2D</li>\n<li>正交投影</li>\n<li>透视投影</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VlREtxWTVrWTA1Tm5CcGFlLWhJdXVjQnh6bFBwS1duSGNPaTNJTjdmSEhwaEE_ZT1vR2pHZU8.jpg\" alt=\"\" /></p>\n<h3 id=\"透视投影与正交投影\"><a class=\"anchor\" href=\"#透视投影与正交投影\">#</a> 透视投影与正交投影</h3>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUYm43Nm5kT19SRXJ5VTZBSlNabjlZQkhvRU0wZG41eTZ2dVY2cEFXbFVSVFE_ZT14eWtVYlY.jpg\" alt=\"\" /></p>\n<h3 id=\"正交投影\"><a class=\"anchor\" href=\"#正交投影\">#</a> 正交投影</h3>\n<ul>\n<li>相机位于原点，面向 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">-Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，上方是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></li>\n<li>忽略 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 坐标</li>\n<li>将生成的矩形平移并缩放为  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">]</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">[-1, 1]^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VRUVZrX3Y3XzhGTXFTWG9YSVR3bWRjQjRxOE5FVl9pT2pTNnIwMzBzNmtnaHc_ZT1GRkNoY0U.jpg\" alt=\"\" /></p>\n<ul>\n<li>\n<p>相机位置无限远，没有远近概念（忽略深度信息）</p>\n</li>\n<li>\n<p>步骤：先做平移，再做缩放，目的是把投影全塞在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">]</mo><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">[-1,1]^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span> 的长方体内</p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0Vhal9lY0lSNjB4T3ZyckxZdWxaOGVvQk9jN2RPUGFFZnBCYzl5R0VhX0JrUmc_ZT01SlNCOU0.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>M</mi><mrow><mi>o</mi><mi>r</mi><mi>t</mi><mi>h</mi><mi>o</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>2</mn><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>2</mn><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mn>2</mn></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mn>2</mn></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mn>2</mn></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M_{ortho}=\\begin{bmatrix} \\dfrac{2}{r-l} &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; \\dfrac{2}{t-b} &amp; 0 &amp;0 \\\\  0 &amp; 0 &amp; \\dfrac{2}{n-f} &amp;0 \\\\ 0 &amp; 0 &amp; 0 &amp;1\\end{bmatrix}\\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; -\\dfrac{r+l}{2}\\\\ 0 &amp; 1 &amp; 0 &amp;=\\dfrac{t+b}{2} \\\\  0 &amp; 0 &amp; 1 &amp;-\\dfrac{n+f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp;1\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:7.5834em;vertical-align:-3.5417em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.85em;\"><span style=\"top:-5.8499em;\"><span class=\"pstrut\" style=\"height:9.2em;\"></span><span style=\"width:0.667em;height:7.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"7.200em\" viewBox=\"0 0 667 7200\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v3600 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v3600 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.0417em;\"><span style=\"top:-6.0417em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.9509em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8602em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.1397em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5417em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.0417em;\"><span style=\"top:-6.0417em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.9509em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.8602em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.1397em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5417em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.0417em;\"><span style=\"top:-6.0417em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.9509em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8602em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.1397em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5417em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.0417em;\"><span style=\"top:-6.0417em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.9509em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8602em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.1397em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5417em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.85em;\"><span style=\"top:-5.8499em;\"><span class=\"pstrut\" style=\"height:9.2em;\"></span><span style=\"width:0.667em;height:7.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"7.200em\" viewBox=\"0 0 667 7200\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v3600 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v3600 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.35em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.85em;\"><span style=\"top:-5.8499em;\"><span class=\"pstrut\" style=\"height:9.2em;\"></span><span style=\"width:0.667em;height:7.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"7.200em\" viewBox=\"0 0 667 7200\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v3600 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v3600 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9362em;\"><span style=\"top:-5.9362em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.8787em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8213em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.2953em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4362em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9362em;\"><span style=\"top:-5.9362em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.8787em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.8213em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.2953em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4362em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9362em;\"><span style=\"top:-5.9362em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.8787em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.8213em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-0.2953em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4362em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9362em;\"><span style=\"top:-5.9362em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.8787em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.8213em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2953em;\"><span class=\"pstrut\" style=\"height:3.3714em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4362em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.85em;\"><span style=\"top:-5.8499em;\"><span class=\"pstrut\" style=\"height:9.2em;\"></span><span style=\"width:0.667em;height:7.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"7.200em\" viewBox=\"0 0 667 7200\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v3600 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v3600 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.35em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<blockquote>\n<ul>\n<li>沿着 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">-Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 使远近不直观（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>&gt;</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">n &gt; f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>）</li>\n<li>仅供参考：这就是 OpenGL 使用左手坐标的原因。</li>\n</ul>\n</blockquote>\n<h3 id=\"透视投影\"><a class=\"anchor\" href=\"#透视投影\">#</a> 透视投影</h3>\n<ul>\n<li>最常见于计算机图形学、艺术、视觉系统</li>\n<li>近大远小</li>\n<li>平行线不平行； 收敛到单点</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VSR2VST05ZbWd0Tm1Lak56Q2hqTnJnQm5PbWQxWHBJajluNXMtNXdVbkZBQ1E_ZT1TamNFOUQ.jpg\" alt=\"\" /></p>\n<h4 id=\"推导过程-2\"><a class=\"anchor\" href=\"#推导过程-2\">#</a> 推导过程</h4>\n<p>正交投影矩阵的视锥体是一个四棱锥的一部分，其中近平面为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">z=n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，远平面为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">z=f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>，我们要把这个视锥体转换到一个正方体<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[-1,1][-1,1][-1,1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 中，可以先把远平面压缩，把视锥体压缩成一个长方体，然后再通过第二步中的正交投影矩阵就可以变换到正方体中，如图。</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWelRWMFVWcTlCSnVGVGxpSVBuU1hrQkk5bFQyWG9JWEJ5cEVkOXVFSEMwYmc_ZT11TFZTT0Y.jpg\" alt=\"\" /></p>\n<p>在把视锥体压缩成长方体的过程中，我们规定三个原则</p>\n<ol>\n<li>\n<p>近平面的所有点坐标不变</p>\n</li>\n<li>\n<p>远平面的所有点坐标 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 值不变 都是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></p>\n</li>\n<li>\n<p>远平面的中心点坐标值不变 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0,f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWRVRjTXVvSWp4UHFMRWRkU0ljSUdJQkliYkMwQUhsY2kzTmctMTdTMk5vQWc_ZT01aVVLOWw.jpg\" alt=\"\" /></p>\n<p>然后我们假设视锥体内的任意一点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>，压缩以后的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">xy</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 坐标应该与近平面上对应的点相同，如图解相似三角形可以得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>→</mo><mi>n</mi><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>→</mo><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">y\\rightarrow ny/z,x\\rightarrow nx/z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span></p>\n<p>故对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,z,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 一点，它在视锥体压缩以后坐标应该为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>n</mi><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>u</mi><mi>n</mi><mi>k</mi><mi>n</mi><mi>o</mi><mi>w</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(nx/z,ny/z,unknow,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">nkn</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 值我们还不知道，这里先不讨论。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>⇒</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>unknown</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\nx \\\\ y \\\\ z \\\\ 1\n\\end{pmatrix}\\Rightarrow\\begin{pmatrix}\nnx/z \\\\ ny/z \\\\ \\text{unknown} \\\\ 1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">unknown</span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>也就是我们现在需要找到一个矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Mpersp</mtext><mo>→</mo><mtext>ortho</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Mpersp}\\rightarrow\\text{ortho}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ortho</span></span></span></span></span>，使得上面的转换成立。</p>\n<p>假设矩阵的第一行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi><mo separator=\"true\">,</mo><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">A,B,C,D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span>。可以得到等式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>+</mo><mi>C</mi><mi>z</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">Ax+By+Cz+D = nx/z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>。</p>\n<p>然后我们发现这个等式好像很难求，如果让 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">A = n/z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>，其他等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，的确可以得到结果。</p>\n<p>但是矩阵的值应该是常数，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">n/z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 是个变量。</p>\n<p>而其他的结果也很难写出来，同时矩阵的第二行也会有同样的问题 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mi>x</mi><mo>+</mo><mi>F</mi><mi>y</mi><mo>+</mo><mi>G</mi><mi>z</mi><mo>+</mo><mi>H</mi><mo>=</mo><mi>n</mi><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">Ex+Fy+Gz+H = ny/z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>，也很难求。</p>\n<p>所以我们换一种方法，前面根据已学知识可以知道<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,z,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>k</mi><mi>y</mi><mo separator=\"true\">,</mo><mi>k</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>k</mi><mo>≠</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(kx,ky,kz,k\\not=0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> 这两个点是完全等价的点，</p>\n<p>所以我们让<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 取<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 可以把坐标<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>n</mi><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>z</mi><mo separator=\"true\">,</mo><mi>u</mi><mi>n</mi><mi>k</mi><mi>n</mi><mi>o</mi><mi>w</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(nx/z,ny/z,unknow,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">nkn</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 变为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>n</mi><mi>y</mi><mo separator=\"true\">,</mo><mtext>still unknow</mtext><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(nx,ny,\\text{still unknow},z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord text\"><span class=\"mord\">still unknow</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>p</mi><mo>→</mo><mi>o</mi><mi>r</mi><mi>t</mi><mi>h</mi><mi>o</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mn>4</mn><mo>×</mo><mn>4</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>unknown</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>z</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M_{presp\\rightarrow ortho}^{(4\\times 4)}\\begin{pmatrix}\nx \\\\ y \\\\ z \\\\ 1\n\\end{pmatrix}=\\begin{pmatrix}\nnx \\\\ ny \\\\ \\text{unknown} \\\\ z\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">res</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mrel mtight\">→</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">o</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">4</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">4</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4374em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">unknown</span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>也就是我们需要找到矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Mpersp</mtext><mo>→</mo><mtext>ortho</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Mpersp}\\rightarrow\\text{ortho}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ortho</span></span></span></span></span>，使得上面的转换成立。</p>\n<p>现在就变简单了，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>+</mo><mi>C</mi><mi>z</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">Ax+By+Cz+D = nx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span>，求出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>B</mi><mo>=</mo><mi>C</mi><mo>=</mo><mi>D</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">A=n,B=C=D=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mi>x</mi><mo>+</mo><mi>F</mi><mi>y</mi><mo>+</mo><mi>G</mi><mi>z</mi><mo>+</mo><mi>H</mi><mo>=</mo><mi>n</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">Ex+Fy+Gz+H = ny</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>，求出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>=</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>E</mi><mo>=</mo><mi>G</mi><mo>=</mo><mi>H</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">F=n,E=G=H=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>x</mi><mo>+</mo><mi>N</mi><mi>y</mi><mo>+</mo><mi>O</mi><mi>z</mi><mo>+</mo><mi>P</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">Mx+Ny+Oz+P = z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>，求出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>M</mi><mo>=</mo><mi>N</mi><mo>=</mo><mi>P</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">O=1,M=N=P=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>p</mi><mo>→</mo><mi>o</mi><mi>r</mi><mi>t</mi><mi>h</mi><mi>o</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">M_{presp\\rightarrow ortho}\\begin{pmatrix}\nn &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; n &amp; 0 &amp; 0 \\\\ ? &amp; ? &amp; ? &amp; ? \\\\ 0 &amp; 0 &amp; 1 &amp; 0\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.109em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">res</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mrel mtight\">→</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">or</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是，我们求出了矩阵的其中三行，只剩下第三行是未知的。</p>\n<p>然后我们想下之前的三个原则，其中一个，<strong>近平面的所有点坐标不变</strong>。</p>\n<p>也就是点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,n,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 通过矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Mpersp</mtext><mo>→</mo><mtext>ortho</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Mpersp}\\rightarrow\\text{ortho}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ortho</span></span></span></span></span> 变换后，应该还是等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,n,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>∗</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\nn  &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; n &amp; 0 &amp; 0\\\\\n?  &amp;?  &amp;?  &amp;? \\\\\n0  &amp;0  &amp; 1 &amp;0\n\\end{pmatrix}*\\begin{pmatrix}\nx\\\\y\\\\n\\\\1\n\\end{pmatrix}=\\begin{pmatrix}\nx\\\\y\\\\n\\\\1\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>对于第一二四行，我们写出等式</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>n</mi><mi>x</mi><mo>+</mo><mn>0</mn><mi>y</mi><mo>+</mo><mn>0</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mi>x</mi><mspace linebreak=\"newline\"></mspace><mn>0</mn><mi>x</mi><mo>+</mo><mi>n</mi><mi>y</mi><mo>+</mo><mn>0</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mi>y</mi><mspace linebreak=\"newline\"></mspace><mn>0</mn><mi>x</mi><mo>+</mo><mn>0</mn><mi>y</mi><mo>+</mo><mn>1</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mn>1</mn><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">nx+0y+0n+0*1=x\\\\\n0x+ny+0n+0*1=y\\\\\n0x+0y+1n+0*1=1\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p>很明显这是有问题的，因为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 应该是任意常数，但是现在只有在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 时，一二四行的运算才成立</p>\n<p>所以我们根据前面的方法，再把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>n</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,n,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 都乘以一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 等价变为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>n</mi><mi>y</mi><mo separator=\"true\">,</mo><mi>n</mi><mo>∗</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(nx,ny,n*n,n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>这样转换就变成了</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>∗</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mo>∗</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\nn  &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; n &amp; 0 &amp; 0\\\\\n?  &amp;?  &amp;?  &amp;? \\\\\n0  &amp;0  &amp; 1 &amp;0\n\\end{pmatrix}*\\begin{pmatrix}\nx\\\\y\\\\n\\\\1\n\\end{pmatrix}=\\begin{pmatrix}\nnx\\\\ny\\\\n*n\\\\n\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>对于第一二四行，我们写出等式</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>n</mi><mi>x</mi><mo>+</mo><mn>0</mn><mi>y</mi><mo>+</mo><mn>0</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mi>n</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mn>0</mn><mi>x</mi><mo>+</mo><mi>n</mi><mi>y</mi><mo>+</mo><mn>0</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mi>n</mi><mi>y</mi><mspace linebreak=\"newline\"></mspace><mn>0</mn><mi>x</mi><mo>+</mo><mn>0</mn><mi>y</mi><mo>+</mo><mn>1</mn><mi>n</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>1</mn><mo>=</mo><mi>n</mi><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">nx+0y+0n+0*1=nx\\\\\n0x+ny+0n+0*1=ny\\\\\n0x+0y+1n+0*1=n\\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<p>完美成立。现在我们可以安心的求第三行了。</p>\n<p>设第三行的四个数分别为 ABCD</p>\n<p>可以获得等式 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>+</mo><mi>C</mi><mi>n</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>n</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Ax+By+Cn+D = n*n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。</p>\n<p>明显 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>B</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>C</mi><mi>n</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>n</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">A=0,B=0,Cn+D = n*n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> ①</p>\n<p>我们接下来考虑第三个原则，<strong>远平面的中心点坐标值不变 为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0,f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></strong></p>\n<p>同样为了保证之前求的矩阵一二四行成立，我们需要把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>f</mi><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0,f,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 写成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>f</mi><mo>∗</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0,f*f,f)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>∗</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>f</mi><mo>∗</mo><mi>f</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>f</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\nn  &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; n &amp; 0 &amp; 0\\\\\n?  &amp;?  &amp;?  &amp;? \\\\\n0  &amp;0  &amp; 1 &amp;0\n\\end{pmatrix}*\\begin{pmatrix}\n0\\\\0\\\\f\\\\1\n\\end{pmatrix}=\\begin{pmatrix}\n0\\\\0\\\\f*f\\\\f\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>f</mi><mo>+</mo><mi>D</mi><mo>=</mo><mi>f</mi><mo>∗</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">Cf+D = f*f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>  ②</p>\n<p>联立 ① ②，解得：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo separator=\"true\">,</mo><mi>D</mi><mo>=</mo><mo>−</mo><mi>n</mi><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">C = n+f,D = -nf</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></p>\n<p>终于，我们求得了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Mpersp</mtext><mo>→</mo><mtext>ortho</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Mpersp}\\rightarrow\\text{ortho}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ortho</span></span></span></span></span> 矩阵为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>n</mi><mi>f</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\nn  &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; n &amp; 0 &amp; 0\\\\\n0  &amp;0  &amp;n+f  &amp;-nf \\\\\n0  &amp;0  &amp; 1 &amp;0\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>也就是通过这个矩阵，我们可以把原来的透视投影的视锥体压缩为正交投影的视锥体（长方体）</p>\n<p>最后我们再乘上一开始求出来正交投影矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Morth</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Morth}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">Morth</span></span></span></span></span> 就得到了透视投影矩阵：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Mpersp</mtext><mo>=</mo><mtext>Mortho</mtext><mo>∗</mo><mtext>Mpersp</mtext><mo>→</mo><mtext>ortho</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Mpersp} = \\text{Mortho}*\\text{Mpersp}\\rightarrow\\text{ortho}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mortho</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">Mpersp</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ortho</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>f</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>∗</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mo>+</mo><mi>r</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}\n2/(r-l) &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; 2/(t-b) &amp; 0 &amp; 0\\\\\n0  &amp;0 &amp;2/(n-f)  &amp;0 \\\\\n0  &amp;0  &amp; 1 &amp;1\n\\end{pmatrix}*\\begin{pmatrix}\n1 &amp; 0 &amp; 0 &amp;-(l+r)/2 \\\\\n0  &amp; 1 &amp; 0 &amp; -(b+t)/2\\\\\n0  &amp;0 &amp;1  &amp;-(f+n)/2 \\\\\n0  &amp;0  &amp; 0 &amp;1\n\\end{pmatrix}=\\begin{pmatrix}\nn &amp; 0 &amp; 0 &amp;0 \\\\\n0  &amp; n &amp; 0 &amp; 0\\\\\n0  &amp;0 &amp;n+f  &amp;0 \\\\\n0  &amp;0  &amp; 1 &amp;0\n\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span><span class=\"mord\">/2</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\">/2</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord\">/2</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,1284c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-1292c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.875em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"4.800em\" viewBox=\"0 0 875 4800\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1209\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-1344c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n",
            "tags": [
                "GAMES101",
                "技术美术",
                "图形学"
            ]
        },
        {
            "id": "http://cwlrin.github.io/misc/Git-%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E6%97%B6%E6%B7%BB%E5%8A%A0-emoji-%E5%9B%BE%E6%A0%87/",
            "url": "http://cwlrin.github.io/misc/Git-%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E6%97%B6%E6%B7%BB%E5%8A%A0-emoji-%E5%9B%BE%E6%A0%87/",
            "title": "Git 提交代码时添加 emoji 图标",
            "date_published": "2022-07-18T09:13:04.000Z",
            "content_html": "<h2 id=\"在commit时添加一个emoji表情图标\"><a class=\"anchor\" href=\"#在commit时添加一个emoji表情图标\">#</a> 在 commit 时添加一个 emoji 表情图标</h2>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit -m <span class=\"token string\">':emoji: 此次提交的内容说明'</span></pre></td></tr></table></figure><h2 id=\"添加多个emoji表情图标\"><a class=\"anchor\" href=\"#添加多个emoji表情图标\">#</a> 添加多个 emoji 表情图标</h2>\n<figure class=\"highlight git\"><figcaption data-lang=\"git\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git commit -m <span class=\"token string\">':emoji1: :emoji2: :emoji3: 此次提交的内容说明'</span></pre></td></tr></table></figure><p>在提交内容的前面增加了 emoji 标签：  <strong>:emoji:</strong>，其中 emoji 是表情图标的标签，列表见下面的附录表格。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">emoji</th>\n<th style=\"text-align:center\">emoji 代码</th>\n<th style=\"text-align:right\">commit 说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">🎨 (调色板)</td>\n<td style=\"text-align:center\"><code>:art:</code></td>\n<td style=\"text-align:right\">改进代码结构 / 代码格式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">⚡ (闪电) 🐎 (赛马)</td>\n<td style=\"text-align:center\"><code>:zap: :racehorse:</code></td>\n<td style=\"text-align:right\">提升性能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🔥 (火焰)</td>\n<td style=\"text-align:center\"><code>:fire:</code></td>\n<td style=\"text-align:right\">移除代码或文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🐛 (bug)</td>\n<td style=\"text-align:center\"><code>:bug:</code></td>\n<td style=\"text-align:right\">修复 bug</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🚑 (急救车)</td>\n<td style=\"text-align:center\"><code>:ambulance:</code></td>\n<td style=\"text-align:right\">重要补丁</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">✨ (火花)</td>\n<td style=\"text-align:center\"><code>:sparkles:</code></td>\n<td style=\"text-align:right\">引入新功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">📝 (备忘录)</td>\n<td style=\"text-align:center\"><code>:memo:</code></td>\n<td style=\"text-align:right\">撰写文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🚀 (火箭)</td>\n<td style=\"text-align:center\"><code>:rocket:</code></td>\n<td style=\"text-align:right\">部署功能</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">💄 (口红)</td>\n<td style=\"text-align:center\"><code>:lipstick:</code></td>\n<td style=\"text-align:right\">更新 UI 和样式文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🎉 (庆祝)</td>\n<td style=\"text-align:center\"><code>:tada:</code></td>\n<td style=\"text-align:right\">初次提交</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">✅ (白色复选框)</td>\n<td style=\"text-align:center\"><code>:white_check_mark:</code></td>\n<td style=\"text-align:right\">增加测试</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🔒 (锁)</td>\n<td style=\"text-align:center\"><code>:lock:</code></td>\n<td style=\"text-align:right\">修复安全问题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🍎 (苹果)</td>\n<td style=\"text-align:center\"><code>:apple:</code></td>\n<td style=\"text-align:right\">修复 macOS 下的问题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🐧 (企鹅)</td>\n<td style=\"text-align:center\"><code>:penguin:</code></td>\n<td style=\"text-align:right\">修复 Linux 下的问题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🏁 (旗帜)</td>\n<td style=\"text-align:center\"><code>:checked_flag:</code></td>\n<td style=\"text-align:right\">修复 Windows 下的问题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🔖 (书签)</td>\n<td style=\"text-align:center\"><code>:bookmark:</code></td>\n<td style=\"text-align:right\">发行 / 版本标签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🚨 (警车灯)</td>\n<td style=\"text-align:center\"><code>:rotating_light:</code></td>\n<td style=\"text-align:right\">移除 linter 警告</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🚧 (施工)</td>\n<td style=\"text-align:center\"><code>:construction:</code></td>\n<td style=\"text-align:right\">工作进行中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">💚 (绿心)</td>\n<td style=\"text-align:center\"><code>:green_heart:</code></td>\n<td style=\"text-align:right\">修复 CI 构建问题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">⬇️ (下降箭头)</td>\n<td style=\"text-align:center\"><code>:arrow_down:</code></td>\n<td style=\"text-align:right\">降级依赖</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">⬆️ (上升箭头)</td>\n<td style=\"text-align:center\"><code>:arrow_up:</code></td>\n<td style=\"text-align:right\">升级依赖</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">👷 (工人)</td>\n<td style=\"text-align:center\"><code>:construction_worker:</code></td>\n<td style=\"text-align:right\">添加 CI 构建系统</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">📈 (上升趋势图)</td>\n<td style=\"text-align:center\"><code>:chart_with_upwards_trend:</code></td>\n<td style=\"text-align:right\">添加分析或跟踪代码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🔨 (锤子)</td>\n<td style=\"text-align:center\"><code>:hammer:</code></td>\n<td style=\"text-align:right\">重大重构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">➖ (减号)</td>\n<td style=\"text-align:center\"><code>:heavy_minus_sign:</code></td>\n<td style=\"text-align:right\">减少一个依赖</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🐳 (鲸鱼)</td>\n<td style=\"text-align:center\"><code>:whale:</code></td>\n<td style=\"text-align:right\">Docker 相关工作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">➕ (加号)</td>\n<td style=\"text-align:center\"><code>:heavy_plug_sign:</code></td>\n<td style=\"text-align:right\">增加一个依赖</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🔧 (扳手)</td>\n<td style=\"text-align:center\"><code>:wrench:</code></td>\n<td style=\"text-align:right\">修改配置文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">🌐 (地球)</td>\n<td style=\"text-align:center\"><code>:globe_with_meridians:</code></td>\n<td style=\"text-align:right\">国际化与本地化</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">✏️ (铅笔)</td>\n<td style=\"text-align:center\"><code>:pencil2:</code></td>\n<td style=\"text-align:right\">修复 typo</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "杂项"
            ]
        },
        {
            "id": "http://cwlrin.github.io/games101/GAMES101-03-Transformation/",
            "url": "http://cwlrin.github.io/games101/GAMES101-03-Transformation/",
            "title": "GAMES101 03 Transformation",
            "date_published": "2022-07-14T02:56:42.000Z",
            "content_html": "<h2 id=\"2d-变换\"><a class=\"anchor\" href=\"#2d-变换\">#</a> 2D 变换</h2>\n<h3 id=\"线性变换\"><a class=\"anchor\" href=\"#线性变换\">#</a> 线性变换</h3>\n<h4 id=\"比例变换\"><a class=\"anchor\" href=\"#比例变换\">#</a> 比例变换</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjYW9nWDE4bklsS3ZHVUtTeFl4SllvQldwSHhUcGd1Mk1KUkRhUjQwSk44Q0E_ZT1JS0taWEQ.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>s</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mspace linebreak=\"newline\"></mspace><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>s</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x^\\prime =sx\\\\\\\\\ny^\\prime =sy\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">sy</span></span></span></span></span></p>\n<h4 id=\"比例矩阵\"><a class=\"anchor\" href=\"#比例矩阵\">#</a> 比例矩阵</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VZbXB6b05yOUZ0RGt0NWNvUThlOGU4QkM3bTI2dGkydFo0V1hNOFBQWlZKenc_ZT16NGpmYjU.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>s</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>s</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix} x^\\prime \\\\\\\\y^\\prime \\end{bmatrix}=\\begin{bmatrix} s&amp;0 \\\\\\\\0&amp;s\\end{bmatrix}\\begin{bmatrix} x \\\\\\\\y \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"比例矩阵非均匀\"><a class=\"anchor\" href=\"#比例矩阵非均匀\">#</a> 比例矩阵（非均匀）</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaSS1ibHpmY01wSXZMcEJpS0EyLWhzQlpQQnFCTWFGMUdpYjNfRWt0TktTY2c_ZT1rWW9IUE0.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>y</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix} x^\\prime \\\\\\\\y^\\prime \\end{bmatrix}=\\begin{bmatrix} s_x&amp;0 \\\\\\\\0&amp;s_y\\end{bmatrix}\\begin{bmatrix} x \\\\\\\\y \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"反射矩阵\"><a class=\"anchor\" href=\"#反射矩阵\">#</a> 反射矩阵</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VWeklWRFNSYnpkS3FreTUwSzFXOW5VQl9NS09PX2dCNmo0eW9lMUFjbmFUY3c_ZT1NaDdwY20.jpg\" alt=\"\" /></p>\n<p>水平反射</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mo>−</mo><mi>x</mi><mspace linebreak=\"newline\"></mspace><mspace linebreak=\"newline\"></mspace><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x^\\prime =-x\\\\\\\\\ny^\\prime =y\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix} x^\\prime \\\\\\\\y^\\prime \\end{bmatrix}=\\begin{bmatrix} -1&amp;0 \\\\\\\\0&amp;1\\end{bmatrix}\\begin{bmatrix} x \\\\\\\\y \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"剪切矩阵\"><a class=\"anchor\" href=\"#剪切矩阵\">#</a> 剪切矩阵</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaSWQ3cTBnNkVsT2lVRjlVQ3phMnl3Qjg3YU81WEJiMzQwU2VWMmhoa3VWQkE_ZT1HeXdkTko.jpg\" alt=\"\" /><br />\n在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">y=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> 时水平移位为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p>在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 时水平移位为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span></p>\n<p>垂直移位始终为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix} x^\\prime \\\\\\\\y^\\prime \\end{bmatrix}=\\begin{bmatrix} 1&amp;a \\\\\\\\0&amp;1\\end{bmatrix}\\begin{bmatrix} x \\\\\\\\y \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h4 id=\"旋转矩阵\"><a class=\"anchor\" href=\"#旋转矩阵\">#</a> 旋转矩阵</h4>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VXNXBrQlBUNV9OR3JrN0JJbGh5a2JjQndreGlET0loR21uZjFoZ1d0TkZOZWc_ZT1FMEJ3ajI.jpg\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VaS1g5ejdPSVN0QmlVTzNsa2E2Ny1VQm5JdHRXZUkwOUlhcXJSc2h3Y0hfWFE_ZT1rY1Zramw.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mi>θ</mi></msub><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R_\\theta=\\begin{bmatrix} \\cos\\theta &amp; -\\sin\\theta \\\\\\\\ \\sin\\theta &amp; \\cos\\theta \\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"相同维度线性变化\"><a class=\"anchor\" href=\"#相同维度线性变化\">#</a> 相同维度线性变化</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mspace linebreak=\"newline\"></mspace><mspace linebreak=\"newline\"></mspace><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>c</mi><mi>x</mi><mo>+</mo><mi>d</mi><mi>y</mi><mspace linebreak=\"newline\"></mspace><mspace linebreak=\"newline\"></mspace><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mspace linebreak=\"newline\"></mspace><mspace linebreak=\"newline\"></mspace><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup><mo>=</mo><mi>M</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x^\\prime=ax+by\\\\\\\\\ny^\\prime=cx+dy\\\\\\\\\n\\begin{bmatrix} x^\\prime \\\\\\\\y^\\prime \\end{bmatrix}=\\begin{bmatrix} a&amp;b \\\\\\\\c&amp;d\\end{bmatrix}\\begin{bmatrix} x \\\\\\\\y \\end{bmatrix}\\\\\\\\\nx^\\prime=Mx\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span class=\"mspace newline\"></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span class=\"mspace newline\"></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">x</span></span></span></span></span></p>\n<h3 id=\"齐次坐标\"><a class=\"anchor\" href=\"#齐次坐标\">#</a> 齐次坐标</h3>\n<p>添加第三个坐标，有点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">(x,y,1)^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span> ，向量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">(x,y,0)^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span> ，则有：</p>\n<ul>\n<li>点 - 点 = 向量</li>\n<li>向量 向量 = 向量</li>\n<li>点 + 向量 = 点</li>\n<li>点 + 点 = 两点的中点</li>\n</ul>\n<p>在齐次坐标中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>w</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}x \\\\\\\\y\\\\\\\\w\\end{pmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span> 都视作<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}x/w \\\\\\\\y/w\\\\\\\\1\\end{pmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>≠</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">w\\not=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<h3 id=\"仿射变换\"><a class=\"anchor\" href=\"#仿射变换\">#</a> 仿射变换</h3>\n<p>仿射变化 = 线性变换 + 平移</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>⋅</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>+</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}x^\\prime \\\\\\\\y^\\prime\\end{pmatrix}=\\begin{pmatrix}a&amp;b \\\\\\\\c&amp;d\\end{pmatrix}\\cdot\\begin{pmatrix}x \\\\\\\\y\\end{pmatrix}+\\begin{pmatrix}t_x \\\\\\\\t_y\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.875em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"3.600em\" viewBox=\"0 0 875 3600\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>使用齐次坐标</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>x</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msup><mi>y</mi><mo mathvariant=\"normal\">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow><mo>⋅</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{pmatrix}x^\\prime \\\\\\\\y^\\prime\\\\\\\\1\\end{pmatrix}=\\begin{pmatrix}a&amp;b&amp;t_x \\\\\\\\c&amp;d&amp;t_y\\\\\\\\0&amp;0&amp;1\\end{pmatrix}\\cdot\\begin{pmatrix}x\\\\\\\\y\\\\\\\\1\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>平移</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">S</mi><mo stretchy=\"false\">(</mo><msub><mi>s</mi><mi>x</mi></msub><mo separator=\"true\">,</mo><msub><mi>s</mi><mi>y</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>s</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{S} (s_x,s_y)=\\begin{pmatrix}s_x&amp;0&amp;0 \\\\\\\\0&amp;s_y&amp;0\\\\\\\\0&amp;0&amp;1\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathbf\">S</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>旋转</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">R</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>sin</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{R} (\\alpha)=\\begin{pmatrix}\\cos\\alpha&amp;-\\sin\\alpha&amp;0 \\\\\\\\\\sin\\alpha&amp;\\cos\\alpha&amp;0\\\\\\\\0&amp;0&amp;1\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>变换</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">R</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbf{R} (\\alpha)=\\begin{pmatrix}1&amp;0&amp;t_x \\\\\\\\ 0&amp;1&amp;t_y\\\\\\\\0&amp;0&amp;1\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"逆变换\"><a class=\"anchor\" href=\"#逆变换\">#</a> 逆变换</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">M^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> 是矩阵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 在几何意义上的变换的逆</p>\n<h3 id=\"变换合成\"><a class=\"anchor\" href=\"#变换合成\">#</a> 变换合成</h3>\n<p>矩阵相乘不满足结合律，例如，先旋转再平移和先平移再旋转所得结果不一样</p>\n<p>仿射变换序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"bold\">A</mi><mn mathvariant=\"bold\">1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">A</mi><mn mathvariant=\"bold\">2</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">A</mi><mn mathvariant=\"bold\">3</mn></msub><mo>…</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{A_1},\\mathbf{A_2},\\mathbf{A_3}……</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8805em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">……</span></span></span></span></p>\n<ul>\n<li>通过矩阵乘法组成</li>\n<li>对性能非常重要</li>\n<li>预乘  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个矩阵以获得表示组合变换的单个矩阵</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>A</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi mathvariant=\"bold\">A</mi><mi mathvariant=\"bold\">n</mi></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mrow><msub><mi mathvariant=\"bold\">A</mi><mn mathvariant=\"bold\">2</mn></msub><msub><mi mathvariant=\"bold\">A</mi><mn mathvariant=\"bold\">1</mn></msub></mrow><mo>⋅</mo><mrow><mo fence=\"true\">(</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">A_n(...A_2(A_1(x)))=\\mathbf{A_n}...\\mathbf{A_2A_1}\\cdot\\begin{pmatrix}x\\\\\\\\y\\\\\\\\1\\end{pmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)))</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8361em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1611em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathbf\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0,2484c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-2492c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:8em;\"></span><span style=\"width:0.875em;height:6.000em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"6.000em\" viewBox=\"0 0 875 6000\"><path d=\"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,2409\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-2544c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"分解复杂的变换\"><a class=\"anchor\" href=\"#分解复杂的变换\">#</a> 分解复杂的变换</h3>\n<p>如何围绕给定点 c 旋转？</p>\n<ol>\n<li>将中心平移到原点</li>\n<li>旋转</li>\n<li>向后平移</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VUMGtyR3plOFE1T3BRazdRdzFtYkhzQnVGUnpzemZCZlhxYXI2QUZsNUM4ZEE_ZT0zM2NYcXA.jpg\" alt=\"\" /></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"bold\">T</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">c</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi mathvariant=\"bold\">R</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold\">α</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi mathvariant=\"bold\">T</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"bold\">c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbf{T(c)\\cdot R(\\alpha)\\cdot T(-c)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">T</span><span class=\"mopen\">(</span><span class=\"mord mathbf\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathbf\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathbf\">T</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathbf\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></p>\n<h2 id=\"3d变换\"><a class=\"anchor\" href=\"#3d变换\">#</a> 3D 变换</h2>\n<p>3D 也使用齐次坐标：</p>\n<ul>\n<li>3D 的点：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">(x,y,z,1)^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>3D 的向量：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow><annotation encoding=\"application/x-tex\">(x,y,z,0)^T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p>通常，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>w</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y,z,w)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span></span></span></span> 是一个 3D 点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi><mo separator=\"true\">,</mo><mi>y</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi><mo separator=\"true\">,</mo><mi>z</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x/w,y/w,z/w)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>3D 变换通常使用 4×4 矩阵进行仿射变换</p>\n<p><img loading=\"lazy\" data-src=\"https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9iZGU1MWU2MjVlZjhmY2M1L0VjYWJjOXRuOTc1Sm1pRV9JLXhTWms4QmI4ai1KUUZpV282VmV4LUlqajlLNlE_ZT1GU0NHNm0.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "GAMES101",
                "技术美术",
                "图形学"
            ]
        }
    ]
}